{"version":3,"file":"static/js/86.cec3da18.chunk.js","mappings":"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","sources":["pages/CEO_Dashboard/CEODashboardComponents/PartnerDashboard/BenchmarkingTrends.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useOutletContext } from 'react-router-dom';\r\nimport { ResponsiveContainer, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, BarChart, Bar } from 'recharts';\r\nimport { FaIndustry, FaChartLine, FaFilter, FaDownload, FaInfoCircle } from 'react-icons/fa';\r\n\r\n// Industry benchmark data (this would typically come from API)\r\nconst INDUSTRY_BENCHMARKS = {\r\n  'technology': {\r\n    name: 'Technology',\r\n    interdependency: 75,\r\n    orchestration: 78,\r\n    investigation: 82,\r\n    interpretation: 77,\r\n    illustration: 73,\r\n    inlignment: 71\r\n  },\r\n  'healthcare': {\r\n    name: 'Healthcare',\r\n    interdependency: 68,\r\n    orchestration: 71,\r\n    investigation: 85,\r\n    interpretation: 74,\r\n    illustration: 69,\r\n    inlignment: 78\r\n  },\r\n  'financial': {\r\n    name: 'Financial Services',\r\n    interdependency: 73,\r\n    orchestration: 75,\r\n    investigation: 79,\r\n    interpretation: 81,\r\n    illustration: 76,\r\n    inlignment: 74\r\n  },\r\n  'manufacturing': {\r\n    name: 'Manufacturing',\r\n    interdependency: 70,\r\n    orchestration: 82,\r\n    investigation: 73,\r\n    interpretation: 68,\r\n    illustration: 81,\r\n    inlignment: 75\r\n  }\r\n};\r\n\r\nconst SYSTEM_LABELS = {\r\n  interdependency: 'Interdependency',\r\n  orchestration: 'Orchestration', \r\n  investigation: 'Investigation',\r\n  interpretation: 'Interpretation',\r\n  illustration: 'Illustration',\r\n  inlignment: 'Inlignment'\r\n};\r\n\r\nfunction CustomRadarChart({ data, darkMode }) {\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={300}>\r\n      <RadarChart data={data} margin={{ top: 20, right: 30, bottom: 20, left: 30 }}>\r\n        <PolarGrid \r\n          stroke={darkMode ? '#374151' : '#e5e7eb'} \r\n          strokeDasharray=\"3 3\"\r\n        />\r\n        <PolarAngleAxis \r\n          dataKey=\"system\" \r\n          tick={{ fontSize: 12, fill: darkMode ? '#d1d5db' : '#6b7280' }}\r\n          className=\"text-xs\"\r\n        />\r\n        <PolarRadiusAxis \r\n          angle={90} \r\n          domain={[0, 100]} \r\n          tick={{ fontSize: 10, fill: darkMode ? '#9ca3af' : '#9ca3af' }}\r\n          tickCount={6}\r\n        />\r\n        <Radar \r\n          name=\"Your Organization\" \r\n          dataKey=\"current\" \r\n          stroke=\"#3b82f6\" \r\n          fill=\"#3b82f6\" \r\n          fillOpacity={0.2}\r\n          strokeWidth={2}\r\n        />\r\n        <Radar \r\n          name=\"Industry Average\" \r\n          dataKey=\"benchmark\" \r\n          stroke=\"#10b981\" \r\n          fill=\"#10b981\" \r\n          fillOpacity={0.1}\r\n          strokeWidth={2}\r\n          strokeDasharray=\"5 5\"\r\n        />\r\n        <Radar \r\n          name=\"Top Quartile\" \r\n          dataKey=\"topQuartile\" \r\n          stroke=\"#f59e0b\" \r\n          fill=\"#f59e0b\" \r\n          fillOpacity={0.05}\r\n          strokeWidth={1}\r\n          strokeDasharray=\"2 2\"\r\n        />\r\n        <Tooltip \r\n          contentStyle={{ \r\n            backgroundColor: darkMode ? '#1f2937' : '#ffffff',\r\n            border: `1px solid ${darkMode ? '#374151' : '#e5e7eb'}`,\r\n            borderRadius: '8px',\r\n            color: darkMode ? '#f3f4f6' : '#111827'\r\n          }}\r\n        />\r\n        <Legend />\r\n      </RadarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nfunction TrendChart({ data, darkMode, metric }) {\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={250}>\r\n      <LineChart data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n        <CartesianGrid \r\n          strokeDasharray=\"3 3\" \r\n          stroke={darkMode ? '#374151' : '#e5e7eb'} \r\n        />\r\n        <XAxis \r\n          dataKey=\"month\" \r\n          stroke={darkMode ? '#9ca3af' : '#6b7280'}\r\n          fontSize={12}\r\n        />\r\n        <YAxis \r\n          domain={[0, 100]}\r\n          stroke={darkMode ? '#9ca3af' : '#6b7280'}\r\n          fontSize={12}\r\n        />\r\n        <Tooltip \r\n          contentStyle={{ \r\n            backgroundColor: darkMode ? '#1f2937' : '#ffffff',\r\n            border: `1px solid ${darkMode ? '#374151' : '#e5e7eb'}`,\r\n            borderRadius: '8px'\r\n          }}\r\n        />\r\n        <Line \r\n          type=\"monotone\" \r\n          dataKey=\"value\" \r\n          stroke=\"#3b82f6\" \r\n          strokeWidth={3}\r\n          dot={{ fill: '#3b82f6', strokeWidth: 2, r: 4 }}\r\n          activeDot={{ r: 6, stroke: '#3b82f6', strokeWidth: 2 }}\r\n        />\r\n        <Line \r\n          type=\"monotone\" \r\n          dataKey=\"benchmark\" \r\n          stroke=\"#10b981\" \r\n          strokeWidth={2}\r\n          strokeDasharray=\"5 5\"\r\n          dot={false}\r\n        />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default function BenchmarkingTrends() {\r\n  const outlet = useOutletContext();\r\n  const darkMode = outlet?.darkMode ?? false;\r\n  \r\n  const [selectedIndustry, setSelectedIndustry] = useState('technology');\r\n  const [selectedMetric, setSelectedMetric] = useState('overall');\r\n  const [timeframe, setTimeframe] = useState('6months');\r\n  const [anomalyDetection, setAnomalyDetection] = useState(true);\r\n\r\n  // Get current scores from localStorage\r\n  const [currentScores, setCurrentScores] = useState({});\r\n  \r\n  useEffect(() => {\r\n    // Simulate getting current scores - in real app this would come from props or context\r\n    const mockCurrentScores = {\r\n      interdependency: 72,\r\n      orchestration: 68,\r\n      investigation: 75,\r\n      interpretation: 71,\r\n      illustration: 69,\r\n      inlignment: 73\r\n    };\r\n    setCurrentScores(mockCurrentScores);\r\n  }, []);\r\n\r\n  // Prepare radar chart data\r\n  const radarData = useMemo(() => {\r\n    const benchmark = INDUSTRY_BENCHMARKS[selectedIndustry];\r\n    if (!benchmark) return [];\r\n    \r\n    return Object.keys(SYSTEM_LABELS).map(key => ({\r\n      system: SYSTEM_LABELS[key],\r\n      current: currentScores[key] || 0,\r\n      benchmark: benchmark[key] || 0,\r\n      topQuartile: Math.min(100, (benchmark[key] || 0) + 15)\r\n      }));\r\n  }, [selectedIndustry, currentScores]);\r\n\r\n  // Generate historical trend data\r\n  const trendData = useMemo(() => {\r\n    const months = timeframe === '6months' ? 6 : timeframe === '12months' ? 12 : 24;\r\n    const data = [];\r\n    const baseScore = selectedMetric === 'overall' ? \r\n      Object.values(currentScores).reduce((a, b) => a + b, 0) / Object.keys(currentScores).length :\r\n      currentScores[selectedMetric] || 70;\r\n    \r\n    for (let i = months - 1; i >= 0; i--) {\r\n      const date = new Date();\r\n      date.setMonth(date.getMonth() - i);\r\n      const variation = Math.sin(i * 0.5) * 5 + Math.random() * 4 - 2;\r\n      const value = Math.max(30, Math.min(95, baseScore + variation));\r\n      const benchmark = INDUSTRY_BENCHMARKS[selectedIndustry] ? \r\n        (selectedMetric === 'overall' ? \r\n          Object.values(INDUSTRY_BENCHMARKS[selectedIndustry]).slice(1).reduce((a, b) => a + b, 0) / 6 :\r\n          INDUSTRY_BENCHMARKS[selectedIndustry][selectedMetric]) : 72;\r\n      \r\n      data.push({\r\n        month: date.toLocaleDateString('en-US', { month: 'short', year: '2-digit' }),\r\n        value: Math.round(value),\r\n        benchmark: Math.round(benchmark),\r\n        anomaly: anomalyDetection && Math.abs(value - benchmark) > 10\r\n      });\r\n    }\r\n    return data;\r\n  }, [selectedMetric, timeframe, currentScores, selectedIndustry, anomalyDetection]);\r\n\r\n  // Calculate insights\r\n  const insights = useMemo(() => {\r\n    const benchmark = INDUSTRY_BENCHMARKS[selectedIndustry];\r\n    if (!benchmark || !Object.keys(currentScores).length) return [];\r\n    \r\n    const insights = [];\r\n    const overallCurrent = Object.values(currentScores).reduce((a, b) => a + b, 0) / Object.keys(currentScores).length;\r\n    const overallBenchmark = Object.values(benchmark).slice(1).reduce((a, b) => a + b, 0) / 6;\r\n    \r\n    if (overallCurrent > overallBenchmark + 5) {\r\n      insights.push({ type: 'positive', text: `You're performing ${Math.round(overallCurrent - overallBenchmark)}% above industry average` });\r\n    } else if (overallCurrent < overallBenchmark - 5) {\r\n      insights.push({ type: 'warning', text: `You're ${Math.round(overallBenchmark - overallCurrent)}% below industry average` });\r\n    }\r\n    \r\n    // Find strongest and weakest systems relative to industry\r\n    const comparisons = Object.keys(currentScores).map(key => ({\r\n      system: key,\r\n      diff: currentScores[key] - benchmark[key]\r\n    }));\r\n    \r\n    const strongest = comparisons.reduce((a, b) => a.diff > b.diff ? a : b);\r\n    const weakest = comparisons.reduce((a, b) => a.diff < b.diff ? a : b);\r\n    \r\n    if (strongest.diff > 0) {\r\n      insights.push({ type: 'positive', text: `${SYSTEM_LABELS[strongest.system]} is your strongest system (+${Math.round(strongest.diff)})` });\r\n    }\r\n    if (weakest.diff < -3) {\r\n      insights.push({ type: 'warning', text: `${SYSTEM_LABELS[weakest.system]} needs attention (${Math.round(weakest.diff)})` });\r\n    }\r\n    \r\n    return insights;\r\n  }, [selectedIndustry, currentScores]);\r\n\r\n  const exportBenchmarkData = () => {\r\n    const data = {\r\n      radarData,\r\n      trendData,\r\n      insights,\r\n      industry: selectedIndustry,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `benchmark-analysis-${selectedIndustry}-${Date.now()}.json`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    a.remove();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\r\n        <div>\r\n          <h3 className={`text-xl font-semibold flex items-center gap-2 ${darkMode ? 'text-gray-100' : 'text-gray-900'}`}>\r\n            <FaIndustry className=\"text-blue-600\" />\r\n            Benchmarking & Trends\r\n          </h3>\r\n          <p className={`text-sm mt-1 ${darkMode ? 'text-gray-400' : 'text-gray-600'}`}>\r\n            Compare your performance against industry standards and track progress over time\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"flex flex-wrap items-center gap-3\">\r\n          <select \r\n            value={selectedIndustry}\r\n            onChange={(e) => setSelectedIndustry(e.target.value)}\r\n            className={`px-3 py-2 rounded-lg border text-sm ${\r\n              darkMode ? 'bg-gray-800 border-gray-600 text-gray-200' : 'bg-white border-gray-300 text-gray-900'\r\n            }`}\r\n          >\r\n            {Object.entries(INDUSTRY_BENCHMARKS).map(([key, value]) => (\r\n              <option key={key} value={key}>{value.name}</option>\r\n            ))}\r\n          </select>\r\n          \r\n          <button\r\n            onClick={exportBenchmarkData}\r\n            className=\"px-3 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2 text-sm\"\r\n          >\r\n            <FaDownload />\r\n            Export\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Industry Comparison Radar */}\r\n      <div className={`rounded-2xl p-6 border ${darkMode ? 'bg-gray-900 border-gray-700' : 'bg-white border-gray-200'}`}>\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div>\r\n            <h4 className=\"font-semibold text-lg\">Industry Comparison</h4>\r\n            <p className={`text-sm ${darkMode ? 'text-gray-400' : 'text-gray-600'}`}>\r\n              Your performance vs {INDUSTRY_BENCHMARKS[selectedIndustry]?.name} industry standards\r\n            </p>\r\n          </div>\r\n        </div>\r\n        \r\n        <CustomRadarChart data={radarData} darkMode={darkMode} />\r\n        \r\n        {/* Performance Summary */}\r\n        <div className=\"mt-4 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4\">\r\n          {radarData.map((item) => (\r\n            <div key={item.system} className={`p-3 rounded-lg ${\r\n              darkMode ? 'bg-gray-800' : 'bg-gray-50'\r\n            }`}>\r\n              <div className=\"text-xs font-medium mb-1\">{item.system}</div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <span className={`text-lg font-bold ${\r\n                  item.current >= item.benchmark ? 'text-green-500' : 'text-red-500'\r\n                }`}>\r\n                  {item.current}%\r\n                </span>\r\n                <span className={`text-xs ${\r\n                  item.current >= item.benchmark ? 'text-green-600' : 'text-red-600'\r\n                }`}>\r\n                  {item.current >= item.benchmark ? '+' : ''}{item.current - item.benchmark}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Historical Trends */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n        <div className={`lg:col-span-2 rounded-2xl p-6 border ${darkMode ? 'bg-gray-900 border-gray-700' : 'bg-white border-gray-200'}`}>\r\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 mb-4\">\r\n            <div>\r\n              <h4 className=\"font-semibold text-lg flex items-center gap-2\">\r\n                <FaChartLine className=\"text-green-600\" />\r\n                Historical Trends\r\n              </h4>\r\n              <p className={`text-sm ${darkMode ? 'text-gray-400' : 'text-gray-600'}`}>\r\n                Track your progress over time with anomaly detection\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"flex flex-wrap gap-2\">\r\n              <select \r\n                value={selectedMetric}\r\n                onChange={(e) => setSelectedMetric(e.target.value)}\r\n                className={`px-3 py-1 rounded border text-sm ${\r\n                  darkMode ? 'bg-gray-800 border-gray-600' : 'bg-white border-gray-300'\r\n                }`}\r\n              >\r\n                <option value=\"overall\">Overall Score</option>\r\n                {Object.entries(SYSTEM_LABELS).map(([key, label]) => (\r\n                  <option key={key} value={key}>{label}</option>\r\n                ))}\r\n              </select>\r\n              \r\n              <select \r\n                value={timeframe}\r\n                onChange={(e) => setTimeframe(e.target.value)}\r\n                className={`px-3 py-1 rounded border text-sm ${\r\n                  darkMode ? 'bg-gray-800 border-gray-600' : 'bg-white border-gray-300'\r\n                }`}\r\n              >\r\n                <option value=\"6months\">6 Months</option>\r\n                <option value=\"12months\">12 Months</option>\r\n                <option value=\"24months\">24 Months</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          \r\n          <TrendChart data={trendData} darkMode={darkMode} metric={selectedMetric} />\r\n          \r\n          <div className=\"mt-4 flex items-center gap-4 text-sm\">\r\n            <label className=\"flex items-center gap-2\">\r\n              <input \r\n                type=\"checkbox\" \r\n                checked={anomalyDetection}\r\n                onChange={(e) => setAnomalyDetection(e.target.checked)}\r\n              />\r\n              <span>Anomaly Detection</span>\r\n            </label>\r\n            <div className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-600'}`}>\r\n              Shows significant deviations from industry benchmarks\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Insights Panel */}\r\n        <div className={`rounded-2xl p-6 border ${darkMode ? 'bg-gray-900 border-gray-700' : 'bg-white border-gray-200'}`}>\r\n          <h4 className=\"font-semibold text-lg mb-4 flex items-center gap-2\">\r\n            <FaInfoCircle className=\"text-blue-600\" />\r\n            Key Insights\r\n          </h4>\r\n          \r\n          <div className=\"space-y-4\">\r\n            {insights.map((insight, idx) => (\r\n              <div key={idx} className={`p-3 rounded-lg ${\r\n                insight.type === 'positive' ? 'bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800' :\r\n                insight.type === 'warning' ? 'bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800' :\r\n                'bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800'\r\n              }`}>\r\n                <div className={`text-sm ${\r\n                  insight.type === 'positive' ? 'text-green-800 dark:text-green-200' :\r\n                  insight.type === 'warning' ? 'text-yellow-800 dark:text-yellow-200' :\r\n                  'text-blue-800 dark:text-blue-200'\r\n                }`}>\r\n                  {insight.text}\r\n                </div>\r\n              </div>\r\n            ))}\r\n            \r\n            <div className={`p-3 rounded-lg border ${darkMode ? 'border-gray-600 bg-gray-800' : 'border-gray-200 bg-gray-50'}`}>\r\n              <div className=\"text-sm font-medium mb-2\">Benchmark Source</div>\r\n              <div className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-600'}`}>\r\n                Data aggregated from {INDUSTRY_BENCHMARKS[selectedIndustry]?.name} companies with similar organizational structure and size.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["INDUSTRY_BENCHMARKS","name","interdependency","orchestration","investigation","interpretation","illustration","inlignment","SYSTEM_LABELS","CustomRadarChart","_ref","data","darkMode","_jsx","ResponsiveContainer","width","height","children","_jsxs","RadarChart","margin","top","right","bottom","left","PolarGrid","stroke","strokeDasharray","PolarAngleAxis","dataKey","tick","fontSize","fill","className","PolarRadiusAxis","angle","domain","tickCount","Radar","fillOpacity","strokeWidth","Tooltip","contentStyle","backgroundColor","border","concat","borderRadius","color","Legend","TrendChart","_ref2","metric","LineChart","CartesianGrid","XAxis","YAxis","Line","type","dot","r","activeDot","BenchmarkingTrends","_outlet$darkMode","_INDUSTRY_BENCHMARKS$","_INDUSTRY_BENCHMARKS$2","outlet","useOutletContext","selectedIndustry","setSelectedIndustry","useState","selectedMetric","setSelectedMetric","timeframe","setTimeframe","anomalyDetection","setAnomalyDetection","currentScores","setCurrentScores","useEffect","radarData","useMemo","benchmark","Object","keys","map","key","system","current","topQuartile","Math","min","trendData","months","baseScore","values","reduce","a","b","length","i","date","Date","setMonth","getMonth","variation","sin","random","value","max","slice","push","month","toLocaleDateString","year","round","anomaly","abs","insights","overallCurrent","overallBenchmark","text","comparisons","diff","strongest","weakest","FaIndustry","onChange","e","target","entries","_ref3","onClick","exportBenchmarkData","industry","timestamp","toISOString","blob","Blob","JSON","stringify","url","URL","createObjectURL","document","createElement","href","download","now","body","appendChild","click","remove","revokeObjectURL","FaDownload","item","FaChartLine","_ref4","label","checked","FaInfoCircle","insight","idx"],"sourceRoot":""}