{"version":3,"file":"static/js/196.6bd908c8.chunk.js","mappings":"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","sources":["pages/CEO_Dashboard/constants/systems.js","pages/CEO_Dashboard/PartnerDashboardManual.jsx"],"sourcesContent":["/**\r\n * Canonical  {\r\n    key: 'orchestration',\r\n    title: 'Orchestration',\r\n    description: 'Development cycles, sprint planning, and continuous improvement',\r\n    icon: '🔄',\r\n    color: '#10B981', // emerald-500\r\n    order: 2\r\n  }, for C-Suite Partner Dashboard\r\n * \r\n * Defines the six core systems that form the assessment framework,\r\n * display metadata, and legacy key mapping for backwards compatibility.\r\n */\r\n\r\n// Six canonical systems with display metadata\r\nexport const CANONICAL_SYSTEMS = [\r\n  {\r\n    key: 'interdependency',\r\n    title: 'Interdependency',\r\n    description: 'Cross-functional collaboration and dependency management',\r\n    icon: '🔗',\r\n    color: '#3B82F6', // blue-500\r\n    order: 1\r\n  },\r\n  {\r\n    key: 'orchestration',\r\n    title: 'Orchestration',\r\n    description: 'Development cycles, sprint planning, and continuous improvement',\r\n    icon: '🔄',\r\n    color: '#10B981', // emerald-500\r\n    order: 2\r\n  },\r\n  {\r\n    key: 'investigation',\r\n    title: 'Investigation',\r\n    description: 'Data analysis, research, and discovery processes',\r\n    icon: '🔎',\r\n    color: '#F59E0B', // amber-500\r\n    order: 3\r\n  },\r\n  {\r\n    key: 'interpretation',\r\n    title: 'Interpretation',\r\n    description: 'Insight generation, decision-making, and strategic analysis',\r\n    icon: '💡',\r\n    color: '#8B5CF6', // violet-500\r\n    order: 4\r\n  },\r\n  {\r\n    key: 'illustration',\r\n    title: 'Illustration',\r\n    description: 'Communication, visualization, and knowledge sharing',\r\n    icon: '🔄',\r\n    color: '#EF4444', // red-500\r\n    order: 5\r\n  },\r\n  {\r\n    key: 'inlignment',\r\n    title: 'Inlignment',\r\n    description: 'Strategic coordination, goal setting, and organizational coherence',\r\n    icon: '🎯',\r\n    color: '#06B6D4', // cyan-500\r\n    order: 6\r\n  }\r\n];\r\n\r\n// Legacy system keys mapping to canonical keys for backwards compatibility\r\n// TODO: Remove legacy mappings after migration period (6 months)\r\nexport const LEGACY_TO_CANONICAL = {\r\n  // Legacy keys that need normalization\r\n  'orchestration': 'orchestration', // legacy iteration maps to orchestration\r\n  'inlignment': 'inlignment', // legacy ilignment maps to inlignment\r\n  \r\n  // Ensure canonical keys map to themselves\r\n  'interdependency': 'interdependency',\r\n  'orchestration': 'orchestration',\r\n  'investigation': 'investigation',\r\n  'interpretation': 'interpretation',\r\n  'illustration': 'illustration',\r\n  'inlignment': 'inlignment',\r\n  \r\n  // Additional legacy variations that might exist\r\n  'dependency': 'interdependency',\r\n  'dependencies': 'interdependency',\r\n  'analysis': 'investigation',\r\n  'research': 'investigation',\r\n  'insights': 'interpretation',\r\n  'reporting': 'illustration',\r\n  'visualization': 'illustration',\r\n  'coordination': 'inlignment',\r\n  'strategy': 'inlignment'\r\n};\r\n\r\n/**\r\n * Normalize a system key from legacy format to canonical format\r\n * @param {string} systemKey - Raw system key (possibly legacy)\r\n * @returns {string} Canonical system key\r\n */\r\nexport function normalizeSystemKey(systemKey) {\r\n  if (!systemKey || typeof systemKey !== 'string') {\r\n    return 'investigation'; // Default fallback\r\n  }\r\n  \r\n  const normalized = systemKey.toLowerCase().trim();\r\n  return LEGACY_TO_CANONICAL[normalized] || normalized;\r\n}\r\n\r\n/**\r\n * Get system metadata by canonical key\r\n * @param {string} systemKey - Canonical system key\r\n * @returns {object|null} System metadata or null if not found\r\n */\r\nexport function getSystemMetadata(systemKey) {\r\n  const canonical = normalizeSystemKey(systemKey);\r\n  return CANONICAL_SYSTEMS.find(s => s.key === canonical) || null;\r\n}\r\n\r\n/**\r\n * Get all systems formatted for UI display (sorted by order)\r\n * @returns {Array} Systems with UI metadata\r\n */\r\nexport function getSystemsForUI() {\r\n  return CANONICAL_SYSTEMS\r\n    .sort((a, b) => a.order - b.order)\r\n    .map(system => ({\r\n      id: system.key,\r\n      key: system.key,\r\n      title: system.title,\r\n      description: system.description,\r\n      icon: system.icon,\r\n      color: system.color\r\n    }));\r\n}\r\n\r\n/**\r\n * Validate if a system key is canonical\r\n * @param {string} systemKey - System key to validate\r\n * @returns {boolean} True if canonical, false otherwise\r\n */\r\nexport function isCanonicalSystem(systemKey) {\r\n  return CANONICAL_SYSTEMS.some(s => s.key === systemKey);\r\n}\r\n\r\n// Default system weights for org health calculation\r\n// TODO: Make these configurable per organization\r\nexport const DEFAULT_SYSTEM_WEIGHTS = {\r\n  'interdependency': 0.18,\r\n  'orchestration': 0.20,\r\n  'investigation': 0.16,\r\n  'interpretation': 0.18,\r\n  'illustration': 0.14,\r\n  'inlignment': 0.14\r\n};\r\n\r\n// Ensure weights sum to 1.0\r\nconst weightSum = Object.values(DEFAULT_SYSTEM_WEIGHTS).reduce((sum, w) => sum + w, 0);\r\nif (Math.abs(weightSum - 1.0) > 0.001) {\r\n  console.warn(`[systems.js] System weights sum to ${weightSum.toFixed(3)}, should be 1.0`);\r\n}\r\n\r\n// Organizational Health Framework Metadata\r\n// This positions our tool as an \"organizational doctor\" that provides\r\n// automated diagnosis beyond what ERP/BI platforms offer\r\nexport const FRAMEWORK_METADATA = {\r\n  name: 'ConseQ-X Organizational Health Assessment',\r\n  version: '1.0',\r\n  description: 'Automated organizational health analysis across six holistic systems',\r\n  differentiators: [\r\n    'Holistic organizational diagnosis beyond operational metrics',\r\n    'Automated analysis and recommendations vs manual BI configuration', \r\n    'Predictive and prescriptive insights vs descriptive reporting',\r\n    'Cultural and behavioral factors integrated with operational data',\r\n    'Purpose-built for organizational effectiveness vs generic analytics'\r\n  ],\r\n  targetGap: 'Bridges the space between operational ERP/BI data and strategic consulting insights',\r\n  useCases: [\r\n    'Post-merger integration assessment',\r\n    'Organizational transformation tracking',\r\n    'Performance turnaround monitoring',\r\n    'Continuous health monitoring for SMEs',\r\n    'Government agency effectiveness measurement'\r\n  ]\r\n};\r\n\r\n// Value proposition vs traditional platforms\r\nexport const COMPETITIVE_ADVANTAGES = {\r\n  vsERP: [\r\n    'Analyzes intangible dynamics like culture and collaboration',\r\n    'Provides narrative insights beyond transactional data',\r\n    'Ready-made organizational health model vs complex customization'\r\n  ],\r\n  vsBI: [\r\n    'Purpose-built framework vs empty canvas requiring expertise',\r\n    'Automated interpretation and recommendations vs manual analysis',\r\n    'Integrated organizational model vs piecemeal dashboard building'\r\n  ],\r\n  vsConsulting: [\r\n    'Continuous monitoring vs one-off assessments',\r\n    'Affordable software vs expensive consulting engagements',\r\n    'Real-time insights vs periodic reports'\r\n  ]\r\n};\r\n","import React, { useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { useOutletContext, useNavigate } from \"react-router-dom\";\r\nimport { \r\n  FaCloudUploadAlt, \r\n  FaDownload, \r\n  FaBell, \r\n  FaCalendarAlt, \r\n  FaChartLine, \r\n  FaExclamationTriangle,\r\n  FaCheckCircle,\r\n  FaClock,\r\n  FaUpload,\r\n  FaFileAlt,\r\n  FaSpinner\r\n} from \"react-icons/fa\";\r\nimport { normalizeSystemKey } from \"./constants/systems\";\r\n\r\nconst STORAGE_UPLOADS = \"conseqx_uploads_v1\";\r\nconst STORAGE_ASSESS = \"conseqx_assessments_v1\";\r\nconst STORAGE_REMINDERS = \"conseqx_upload_reminders_v1\";\r\nconst STORAGE_NOTIFICATIONS = \"conseqx_manual_notifications_v1\";\r\nconst STORAGE_PREFERENCES = \"conseqx_manual_preferences_v1\";\r\n\r\nconst CANONICAL = [\r\n  { key: \"interdependency\", title: \"Interdependency\" },\r\n  { key: \"orchestration\", title: \"Orchestration\" },\r\n  { key: \"investigation\", title: \"Investigation\" },\r\n  { key: \"interpretation\", title: \"Interpretation\" },\r\n  { key: \"illustration\", title: \"Illustration\" },\r\n  { key: \"inlignment\", title: \"Inlignment\" },\r\n];\r\n\r\nfunction readUploads() {\r\n  try {\r\n    const raw = localStorage.getItem(STORAGE_UPLOADS);\r\n    return raw ? JSON.parse(raw) : [];\r\n  } catch {\r\n    return [];\r\n  }\r\n}\r\n\r\nfunction readAssessments(orgId = \"anon\") {\r\n  try {\r\n    const raw = localStorage.getItem(STORAGE_ASSESS);\r\n    const byOrg = raw ? JSON.parse(raw) : {};\r\n    return byOrg[orgId] || [];\r\n  } catch {\r\n    return [];\r\n  }\r\n}\r\n\r\nfunction writeUploads(arr) {\r\n  try {\r\n    localStorage.setItem(STORAGE_UPLOADS, JSON.stringify(arr));\r\n    window.dispatchEvent(new CustomEvent('conseqx:uploads:updated'));\r\n  } catch {}\r\n}\r\n\r\nfunction readReminders() {\r\n  try {\r\n    const raw = localStorage.getItem(STORAGE_REMINDERS);\r\n    return raw ? JSON.parse(raw) : [];\r\n  } catch {\r\n    return [];\r\n  }\r\n}\r\n\r\nfunction writeReminders(reminders) {\r\n  try {\r\n    localStorage.setItem(STORAGE_REMINDERS, JSON.stringify(reminders));\r\n  } catch {}\r\n}\r\n\r\nfunction readNotifications() {\r\n  try {\r\n    const raw = localStorage.getItem(STORAGE_NOTIFICATIONS);\r\n    return raw ? JSON.parse(raw) : [];\r\n  } catch {\r\n    return [];\r\n  }\r\n}\r\n\r\nfunction writeNotifications(notifications) {\r\n  try {\r\n    localStorage.setItem(STORAGE_NOTIFICATIONS, JSON.stringify(notifications));\r\n    window.dispatchEvent(new CustomEvent('conseqx:notifications:updated'));\r\n  } catch {}\r\n}\r\n\r\nfunction readPreferences() {\r\n  try {\r\n    const raw = localStorage.getItem(STORAGE_PREFERENCES);\r\n    return raw ? JSON.parse(raw) : {\r\n      emailNotifications: false,\r\n      smsNotifications: false,\r\n      uploadReminders: true,\r\n      analysisAlerts: true\r\n    };\r\n  } catch {\r\n    return {\r\n      emailNotifications: false,\r\n      smsNotifications: false,\r\n      uploadReminders: true,\r\n      analysisAlerts: true\r\n    };\r\n  }\r\n}\r\n\r\nfunction writePreferences(prefs) {\r\n  try {\r\n    localStorage.setItem(STORAGE_PREFERENCES, JSON.stringify(prefs));\r\n  } catch {}\r\n}\r\n\r\nexport default function PartnerDashboardManual({ orgId: propOrgId = null }) {\r\n  const { darkMode, org } = useOutletContext();\r\n  const navigate = useNavigate();\r\n  const orgId = propOrgId || (org && (org.id || org.orgId)) || \"anon\";\r\n\r\n  const [uploads, setUploads] = useState(() => readUploads());\r\n  const [reminders, setReminders] = useState(() => readReminders());\r\n  const [notifications, setNotifications] = useState(() => readNotifications());\r\n  const [preferences, setPreferences] = useState(() => readPreferences());\r\n  const [showUploadWizard, setShowUploadWizard] = useState(false);\r\n  const [showReminderModal, setShowReminderModal] = useState(false);\r\n  const [showNotificationPanel, setShowNotificationPanel] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState({ show: false, progress: 0, status: '' });\r\n  const fileInputRef = useRef(null);\r\n  const latest = uploads && uploads.length ? uploads[0] : null;\r\n\r\n  // persisted assessments for this org\r\n  const assessments = useMemo(() => readAssessments(orgId), [orgId]);\r\n\r\n  // map latest persisted assessment by normalized system id\r\n  const assessmentMap = useMemo(() => {\r\n    const m = {};\r\n    (assessments || []).forEach((a) => {\r\n      const raw = a.systemId || a.system || a.systemKey || a.meta?.systemId || \"\";\r\n      const key = (typeof normalizeSystemKey === \"function\")\r\n        ? normalizeSystemKey(raw)\r\n        : String(raw || \"\").toLowerCase().replace(/\\s+/g, \"\");\r\n      const ts = a.timestamp || a.ts || Date.now();\r\n      if (!m[key] || (m[key].timestamp || 0) < ts) m[key] = { ...a, timestamp: ts };\r\n    });\r\n    return m;\r\n  }, [assessments]);\r\n\r\n  // derive per-system snapshot score:\r\n  // prefer persisted assessment score, else if latest upload mentions system give a derived snapshot score, else null\r\n  const systemScores = useMemo(() => {\r\n    const scores = {};\r\n    CANONICAL.forEach((s, idx) => {\r\n      const key = (typeof normalizeSystemKey === \"function\") ? normalizeSystemKey(s.key) : String(s.key).toLowerCase();\r\n      const persisted = assessmentMap[key];\r\n      if (persisted && typeof persisted.score === \"number\") {\r\n        scores[key] = Math.max(0, Math.min(100, Math.round(persisted.score)));\r\n      } else {\r\n        const presentInUpload =\r\n          latest &&\r\n          Array.isArray(latest.analyzedSystems) &&\r\n          latest.analyzedSystems.map((ss) => String(ss).toLowerCase()).includes(String(s.key).toLowerCase());\r\n        if (presentInUpload) {\r\n          // deterministic derived value dependent on index (keeps stable snapshot)\r\n          const derived = Math.max(40, Math.min(90, 70 + (idx - 2) * 3));\r\n          scores[key] = derived;\r\n        } else {\r\n          scores[key] = null;\r\n        }\r\n      }\r\n    });\r\n    return scores;\r\n  }, [latest, assessmentMap]);\r\n\r\n  // composite overall (avg of available scores)\r\n  const overall = useMemo(() => {\r\n    const vals = Object.values(systemScores).filter((v) => v !== null && typeof v !== \"undefined\");\r\n    if (!vals.length) return null;\r\n    return Math.round(vals.reduce((a, b) => a + b, 0) / vals.length);\r\n  }, [systemScores]);\r\n\r\n  // keep uploads in sync with storage events\r\n  useEffect(() => {\r\n    function refresh() {\r\n      setUploads(readUploads());\r\n    }\r\n    window.addEventListener(\"storage\", refresh);\r\n    window.addEventListener(\"conseqx:notifications:updated\", refresh);\r\n    return () => {\r\n      window.removeEventListener(\"storage\", refresh);\r\n      window.removeEventListener(\"conseqx:notifications:updated\", refresh);\r\n    };\r\n  }, []);\r\n\r\n  // ACTIONS\r\n  function openFull(systemKey) {\r\n    try {\r\n      window.dispatchEvent(new CustomEvent(\"conseqx:orghealth:open\", { detail: { systemId: systemKey, orgId } }));\r\n    } catch {}\r\n    navigate(\"/ceo/org-health\");\r\n  }\r\n\r\n  function startAssessmentFlow(systemKey) {\r\n    // standardized event to let other parts of the app react (e.g., queue, analytics)\r\n    try {\r\n      window.dispatchEvent(new CustomEvent(\"conseqx:assessment:start\", { detail: { systemId: systemKey, orgId } }));\r\n    } catch {}\r\n    navigate(`/ceo/assessments?focus=${encodeURIComponent(systemKey)}`);\r\n  }\r\n\r\n  function exportSnapshot() {\r\n    try {\r\n      const payload = { latestUpload: latest || null, systemScores, exportedAt: Date.now(), orgId };\r\n      const blob = new Blob([JSON.stringify(payload, null, 2)], { type: \"application/json\" });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.download = `${(org && org.name) || orgId}_partner_manual_snapshot.json`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      a.remove();\r\n      setTimeout(() => URL.revokeObjectURL(url), 1500);\r\n    } catch (e) {\r\n      console.warn(\"Export failed\", e);\r\n    }\r\n  }\r\n\r\n  // tooltips\r\n  const RETAKE_TOOLTIP = \"Your previous assessment exists — retake if the organization or dataset has changed to refresh scores and recommendations.\";\r\n  const TAKE_TOOLTIP = \"Take the system assessment to generate a full diagnostic, recommendations and forecasts.\";\r\n\r\n  // helper for source label\r\n  function sourceLabelFor(key) {\r\n    const a = assessmentMap[key];\r\n    if (a) return a.source || a.name || \"Stored assessment\";\r\n    if (\r\n      latest &&\r\n      Array.isArray(latest.analyzedSystems) &&\r\n      latest.analyzedSystems.map((x) => String(x).toLowerCase()).includes(String(key).toLowerCase())\r\n    ) {\r\n      return `Derived from upload: ${latest.name || \"latest upload\"}`;\r\n    }\r\n    return \"No data\";\r\n  }\r\n\r\n  // Upload Wizard Component\r\n  const UploadWizard = () => {\r\n    const [dragActive, setDragActive] = useState(false);\r\n    const [selectedFiles, setSelectedFiles] = useState([]);\r\n    const [validationResults, setValidationResults] = useState({});\r\n\r\n    const handleDrag = (e) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      if (e.type === \"dragenter\" || e.type === \"dragover\") {\r\n        setDragActive(true);\r\n      } else if (e.type === \"dragleave\") {\r\n        setDragActive(false);\r\n      }\r\n    };\r\n\r\n    const handleDrop = (e) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      setDragActive(false);\r\n      const files = Array.from(e.dataTransfer.files);\r\n      handleFiles(files);\r\n    };\r\n\r\n    const handleFiles = async (files) => {\r\n      setSelectedFiles(files);\r\n      setUploadProgress({ show: true, progress: 10, status: 'Validating files...' });\r\n      \r\n      // Simulate file validation\r\n      const results = {};\r\n      for (let i = 0; i < files.length; i++) {\r\n        const file = files[i];\r\n        setUploadProgress({ show: true, progress: 20 + (i * 30), status: `Validating ${file.name}...` });\r\n        \r\n        await new Promise(resolve => setTimeout(resolve, 500));\r\n        \r\n        results[file.name] = {\r\n          valid: file.size < 10 * 1024 * 1024, // 10MB limit\r\n          type: file.type.includes('csv') ? 'CSV Data' : \r\n                file.type.includes('excel') || file.name.includes('.xlsx') ? 'Excel Data' :\r\n                file.type.includes('pdf') ? 'PDF Report' : 'Other',\r\n          systemsDetected: ['Interdependency', 'Investigation', 'Interpretation'],\r\n          errors: file.size > 10 * 1024 * 1024 ? ['File size exceeds 10MB limit'] : []\r\n        };\r\n      }\r\n      \r\n      setValidationResults(results);\r\n      setUploadProgress({ show: true, progress: 100, status: 'Validation complete' });\r\n      \r\n      setTimeout(() => {\r\n        setUploadProgress({ show: false, progress: 0, status: '' });\r\n      }, 1000);\r\n    };\r\n\r\n    const processUpload = async () => {\r\n      setUploadProgress({ show: true, progress: 0, status: 'Processing files...' });\r\n      \r\n      // Simulate upload processing\r\n      for (let i = 0; i <= 100; i += 10) {\r\n        setUploadProgress({ show: true, progress: i, status: `Processing... ${i}%` });\r\n        await new Promise(resolve => setTimeout(resolve, 200));\r\n      }\r\n      \r\n      // Create new upload record\r\n      const newUpload = {\r\n        id: Date.now().toString(),\r\n        name: selectedFiles.map(f => f.name).join(', '),\r\n        timestamp: Date.now(),\r\n        analyzedSystems: ['interdependency', 'investigation', 'interpretation'],\r\n        fileCount: selectedFiles.length,\r\n        totalSize: selectedFiles.reduce((sum, f) => sum + f.size, 0)\r\n      };\r\n      \r\n      const updatedUploads = [newUpload, ...uploads];\r\n      setUploads(updatedUploads);\r\n      writeUploads(updatedUploads);\r\n      \r\n      setUploadProgress({ show: false, progress: 0, status: '' });\r\n      setShowUploadWizard(false);\r\n      setSelectedFiles([]);\r\n      setValidationResults({});\r\n      \r\n      // Add success notification\r\n      addNotification('Upload Complete', `Successfully processed ${selectedFiles.length} files`, 'success');\r\n    };\r\n\r\n    return (\r\n      <div className={`fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4`}>\r\n        <div className={`max-w-2xl w-full max-h-[80vh] overflow-y-auto rounded-xl ${darkMode ? 'bg-gray-900 border border-gray-700' : 'bg-white border border-gray-200'}`}>\r\n          <div className=\"p-6\">\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n              <h3 className=\"text-xl font-semibold\">Upload Data Wizard</h3>\r\n              <button onClick={() => setShowUploadWizard(false)} className=\"text-gray-500 hover:text-gray-700\">\r\n                ✕\r\n              </button>\r\n            </div>\r\n            \r\n            {!selectedFiles.length ? (\r\n              <div \r\n                className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${\r\n                  dragActive ? 'border-blue-500 bg-blue-50' : 'border-gray-300'\r\n                }`}\r\n                onDragEnter={handleDrag}\r\n                onDragLeave={handleDrag}\r\n                onDragOver={handleDrag}\r\n                onDrop={handleDrop}\r\n              >\r\n                <FaUpload className=\"mx-auto text-4xl text-gray-400 mb-4\" />\r\n                <p className=\"text-lg mb-2\">Drag & drop files here</p>\r\n                <p className=\"text-sm text-gray-500 mb-4\">Supported: CSV, Excel, PDF (max 10MB each)</p>\r\n                <button \r\n                  onClick={() => fileInputRef.current?.click()}\r\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n                >\r\n                  Choose Files\r\n                </button>\r\n                <input \r\n                  ref={fileInputRef}\r\n                  type=\"file\"\r\n                  multiple\r\n                  accept=\".csv,.xlsx,.xls,.pdf\"\r\n                  className=\"hidden\"\r\n                  onChange={(e) => handleFiles(Array.from(e.target.files))}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-4\">\r\n                <h4 className=\"font-semibold\">File Validation Results</h4>\r\n                {selectedFiles.map((file, idx) => {\r\n                  const result = validationResults[file.name];\r\n                  return (\r\n                    <div key={idx} className={`p-3 rounded border ${result?.valid ? 'border-green-200 bg-green-50' : 'border-red-200 bg-red-50'}`}>\r\n                      <div className=\"flex justify-between items-start\">\r\n                        <div>\r\n                          <div className=\"font-medium\">{file.name}</div>\r\n                          <div className=\"text-sm text-gray-600\">\r\n                            {(file.size / 1024 / 1024).toFixed(2)} MB • {result?.type || 'Unknown'}\r\n                          </div>\r\n                          {result?.systemsDetected && (\r\n                            <div className=\"text-xs text-blue-600 mt-1\">\r\n                              Systems detected: {result.systemsDetected.join(', ')}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className={`flex items-center ${result?.valid ? 'text-green-600' : 'text-red-600'}`}>\r\n                          {result?.valid ? <FaCheckCircle /> : <FaExclamationTriangle />}\r\n                        </div>\r\n                      </div>\r\n                      {result?.errors?.length > 0 && (\r\n                        <div className=\"mt-2 text-sm text-red-600\">\r\n                          {result.errors.map((error, i) => <div key={i}>• {error}</div>)}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n                \r\n                <div className=\"flex justify-end gap-3 pt-4\">\r\n                  <button \r\n                    onClick={() => {setSelectedFiles([]); setValidationResults({});}} \r\n                    className=\"px-4 py-2 border rounded-lg\"\r\n                  >\r\n                    Reset\r\n                  </button>\r\n                  <button \r\n                    onClick={processUpload}\r\n                    disabled={!Object.values(validationResults).every(r => r.valid)}\r\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\r\n                  >\r\n                    Process Upload\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {uploadProgress.show && (\r\n              <div className=\"mt-4 p-4 border rounded-lg\">\r\n                <div className=\"flex items-center gap-3 mb-2\">\r\n                  <FaSpinner className=\"animate-spin\" />\r\n                  <span className=\"text-sm\">{uploadProgress.status}</span>\r\n                </div>\r\n                <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                  <div \r\n                    className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\r\n                    style={{ width: `${uploadProgress.progress}%` }}\r\n                  ></div>\r\n                </div>\r\n                <div className=\"text-xs text-gray-500 mt-1\">{uploadProgress.progress}% complete</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Add notification helper\r\n  const addNotification = (title, message, type = 'info') => {\r\n    const notification = {\r\n      id: Date.now().toString(),\r\n      title,\r\n      message,\r\n      type,\r\n      timestamp: Date.now(),\r\n      read: false\r\n    };\r\n    const updated = [notification, ...notifications.slice(0, 9)]; // Keep last 10\r\n    setNotifications(updated);\r\n    writeNotifications(updated);\r\n  };\r\n\r\n  return (\r\n    <section className=\"relative\">\r\n      {showUploadWizard && <UploadWizard />}\r\n      \r\n      <div className={`rounded-2xl p-4 ${darkMode ? \"bg-gray-900 border border-gray-700 text-gray-100\" : \"bg-white border border-gray-100 text-gray-900\"}`}>\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center justify-between gap-4\">\r\n          <div className=\"flex-1\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <h2 className=\"text-xl font-semibold\">C-Suite Manual Data Analysis</h2>\r\n              {notifications.filter(n => !n.read).length > 0 && (\r\n                <button \r\n                  onClick={() => setShowNotificationPanel(!showNotificationPanel)}\r\n                  className=\"relative p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-800\"\r\n                >\r\n                  <FaBell className=\"text-blue-600\" />\r\n                  <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center\">\r\n                    {notifications.filter(n => !n.read).length}\r\n                  </span>\r\n                </button>\r\n              )}\r\n            </div>\r\n            <div className=\"text-xs text-gray-400 mt-1\">\r\n              Upload datasets using the wizard below and return here to review snapshots, recommendations, and next steps.\r\n            </div>\r\n            {latest && (\r\n              <div className=\"flex items-center gap-2 mt-2 text-xs\">\r\n                <FaClock className=\"text-green-500\" />\r\n                <span className=\"text-green-600 dark:text-green-400\">\r\n                  Last updated: {new Date(latest.timestamp).toLocaleString()}\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"flex flex-wrap items-center gap-2\">\r\n            <button \r\n              onClick={() => setShowUploadWizard(true)} \r\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2 transition-colors\"\r\n            >\r\n              <FaUpload />\r\n              <span className=\"hidden sm:inline\">Upload Wizard</span>\r\n            </button>\r\n            <button \r\n              onClick={() => setShowReminderModal(true)} \r\n              className=\"px-3 py-2 rounded-lg border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-800 flex items-center gap-2\"\r\n            >\r\n              <FaCalendarAlt />\r\n              <span className=\"hidden sm:inline\">Reminders</span>\r\n            </button>\r\n            <button \r\n              onClick={exportSnapshot} \r\n              className=\"px-3 py-2 rounded-lg border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-800 flex items-center gap-2\"\r\n            >\r\n              <FaDownload />\r\n              <span className=\"hidden sm:inline\">Export</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Notification Panel */}\r\n        {showNotificationPanel && (\r\n          <div className={`absolute top-16 right-4 w-80 max-h-96 overflow-y-auto rounded-lg shadow-lg z-40 ${\r\n            darkMode ? 'bg-gray-800 border border-gray-700' : 'bg-white border border-gray-200'\r\n          }`}>\r\n            <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <h4 className=\"font-semibold\">Notifications</h4>\r\n                <button \r\n                  onClick={() => setShowNotificationPanel(false)}\r\n                  className=\"text-gray-500 hover:text-gray-700\"\r\n                >\r\n                  ✕\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"max-h-64 overflow-y-auto\">\r\n              {notifications.length === 0 ? (\r\n                <div className=\"p-4 text-center text-gray-500\">No notifications</div>\r\n              ) : (\r\n                notifications.map((notif) => (\r\n                  <div \r\n                    key={notif.id} \r\n                    className={`p-3 border-b border-gray-100 dark:border-gray-700 ${\r\n                      !notif.read ? 'bg-blue-50 dark:bg-blue-900/20' : ''\r\n                    }`}\r\n                  >\r\n                    <div className=\"flex justify-between items-start\">\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"font-medium text-sm\">{notif.title}</div>\r\n                        <div className=\"text-xs text-gray-600 dark:text-gray-400 mt-1\">{notif.message}</div>\r\n                        <div className=\"text-xs text-gray-500 mt-1\">\r\n                          {new Date(notif.timestamp).toLocaleString()}\r\n                        </div>\r\n                      </div>\r\n                      <div className={`w-2 h-2 rounded-full ${\r\n                        notif.type === 'success' ? 'bg-green-500' : \r\n                        notif.type === 'warning' ? 'bg-yellow-500' : \r\n                        notif.type === 'error' ? 'bg-red-500' : 'bg-blue-500'\r\n                      }`}></div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"mt-4 grid grid-cols-1 sm:grid-cols-4 gap-4\">\r\n          <div className={`col-span-1 sm:col-span-2 rounded-2xl p-4 border ${darkMode ? \"bg-gray-800 border-gray-700\" : \"bg-white border-gray-50\"}`}>\r\n            <div className=\"text-xs\">Overall Health (latest evidence)</div>\r\n            <div className=\"text-3xl font-bold\">{overall != null ? `${overall}%` : \"No data\"}</div>\r\n            <div className=\"text-xs text-gray-400 mt-1\">\r\n              {latest ? `Based on: ${latest.name} • ${new Date(latest.timestamp).toLocaleString()}` : \"No uploads yet — use Data Management to upload files for diagnosis.\"}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"rounded-2xl p-4 border\">\r\n            <div className=\"text-xs uppercase\">Key KPI</div>\r\n            <div className=\"text-2xl font-semibold mt-1\">{overall != null ? `${Math.max(0, Math.min(100, overall))}%` : \"—\"}</div>\r\n            <div className=\"text-xs text-gray-400 mt-1\">Snapshot KPI from available evidence</div>\r\n          </div>\r\n\r\n          <div className=\"rounded-2xl p-4 border\">\r\n            <div className=\"text-xs uppercase\">Action Items</div>\r\n            <div className=\"mt-2\">\r\n              <div className=\"text-sm\">Top recommendation</div>\r\n              <div className=\"font-medium mt-1\">{overall != null ? \"Focus sprints on lowest-scoring systems and validate new uploads\" : \"Upload data to get tailored recommendations\"}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* systems grid */}\r\n        <div className=\"mt-6\">\r\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between mb-4\">\r\n            <div>\r\n              <h4 className=\"font-semibold flex items-center gap-2\">\r\n                <FaChartLine className=\"text-blue-600\" />\r\n                Systems Snapshot\r\n              </h4>\r\n              <p className=\"text-xs text-gray-400 mt-1\">\r\n                Click <strong>Open full</strong> for detailed reports. Use <strong>Take/Retake assessment</strong> to refresh diagnostics.\r\n              </p>\r\n            </div>\r\n            <div className=\"text-xs text-gray-500 mt-2 sm:mt-0\">\r\n              {Object.values(systemScores).filter(s => s !== null).length} of {CANONICAL.length} systems have data\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {CANONICAL.map((s) => {\r\n              const key = (typeof normalizeSystemKey === \"function\") ? normalizeSystemKey(s.key) : String(s.key).toLowerCase();\r\n              const sc = systemScores[key];\r\n              const persisted = Boolean(assessmentMap[key]);\r\n              const scoreColor = sc !== null ? (sc >= 80 ? \"text-green-500\" : sc >= 60 ? \"text-yellow-500\" : \"text-red-500\") : \"text-gray-400\";\r\n              const bgColor = sc !== null ? (sc >= 80 ? \"bg-green-50 dark:bg-green-900/20\" : sc >= 60 ? \"bg-yellow-50 dark:bg-yellow-900/20\" : \"bg-red-50 dark:bg-red-900/20\") : \"\";\r\n              \r\n              return (\r\n                <div key={s.key} className={`p-4 rounded-xl border transition-all hover:shadow-md ${\r\n                  darkMode ? \"bg-gray-800 border-gray-700 hover:border-gray-600\" : \"bg-white border-gray-200 hover:border-gray-300\"\r\n                } ${bgColor}`}>\r\n                  <div className=\"flex flex-col sm:flex-row sm:items-start sm:justify-between gap-3\">\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex items-center gap-2 mb-2\">\r\n                        <div className=\"font-semibold text-lg\">{s.title}</div>\r\n                        {persisted && (\r\n                          <span className=\"px-2 py-1 text-xs bg-blue-100 dark:bg-blue-900 text-blue-600 dark:text-blue-400 rounded-full\">\r\n                            Assessed\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">\r\n                        {sc !== null ? (\r\n                          sc >= 80 ? \"Excellent performance\" :\r\n                          sc >= 60 ? \"Good with room for improvement\" :\r\n                          \"Needs attention\"\r\n                        ) : \"Awaiting assessment\"}\r\n                      </div>\r\n                      <div className=\"text-xs text-gray-500 flex items-center gap-1\">\r\n                        <FaFileAlt className=\"w-3 h-3\" />\r\n                        <span>Source: {sourceLabelFor(key)}</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"text-right sm:text-center\">\r\n                      <div className={`text-3xl font-bold ${scoreColor} mb-1`}>\r\n                        {sc !== null ? `${sc}%` : \"—\"}\r\n                      </div>\r\n                      <div className=\"text-xs text-gray-400 mb-3\">Current Score</div>\r\n                      \r\n                      {/* Mini progress bar */}\r\n                      <div className=\"w-full sm:w-16 bg-gray-200 dark:bg-gray-700 rounded-full h-2 mb-3\">\r\n                        <div \r\n                          className={`h-2 rounded-full transition-all duration-500 ${\r\n                            sc !== null ? (sc >= 80 ? \"bg-green-500\" : sc >= 60 ? \"bg-yellow-500\" : \"bg-red-500\") : \"bg-gray-400\"\r\n                          }`}\r\n                          style={{ width: `${sc || 0}%` }}\r\n                        ></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex flex-col sm:flex-row gap-2 mt-4\">\r\n                    <button\r\n                      onClick={() => openFull(key)}\r\n                      className=\"flex-1 px-3 py-2 text-sm border rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors flex items-center justify-center gap-2\"\r\n                      title=\"Open the full OrgHealth report for this system\"\r\n                    >\r\n                      <FaChartLine className=\"w-4 h-4\" />\r\n                      <span>Open Report</span>\r\n                    </button>\r\n\r\n                    {persisted ? (\r\n                      <button\r\n                        onClick={() => startAssessmentFlow(key)}\r\n                        className=\"flex-1 px-3 py-2 text-sm bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors flex items-center justify-center gap-2\"\r\n                        title={RETAKE_TOOLTIP}\r\n                        aria-label={`Retake assessment for ${s.title}`}\r\n                      >\r\n                        <FaUpload className=\"w-4 h-4\" />\r\n                        <span>Retake</span>\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        onClick={() => startAssessmentFlow(key)}\r\n                        className=\"flex-1 px-3 py-2 text-sm bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors flex items-center justify-center gap-2\"\r\n                        title={TAKE_TOOLTIP}\r\n                        aria-label={`Take assessment for ${s.title}`}\r\n                      >\r\n                        <FaUpload className=\"w-4 h-4\" />\r\n                        <span>Take Assessment</span>\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Forecasts and Recommendations */}\r\n        <div className=\"mt-6 grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <div className={`p-4 rounded-md border ${darkMode ? \"bg-gray-800 border-gray-700\" : \"bg-white border-gray-100\"}`}>\r\n            <div className=\"font-semibold\">Forecast</div>\r\n            <div className=\"text-sm text-gray-500 mt-2\">\r\n              {overall != null ? \"Projected health over the next 30 days based on current evidence and recent trends.\" : \"No forecast available — upload data and run assessments to generate forecasts.\"}\r\n            </div>\r\n            <div className=\"mt-4 text-2xl font-bold\">{overall != null ? `${Math.max(20, Math.min(100, overall + 3))}%` : \"—\"}</div>\r\n            <div className=\"text-xs text-gray-400 mt-1\">Forecast assumptions are driven by most recent upload and persisted assessments.</div>\r\n          </div>\r\n\r\n          <div className={`p-4 rounded-md border ${darkMode ? \"bg-gray-800 border-gray-700\" : \"bg-white border-gray-100\"}`}>\r\n            <div className=\"font-semibold\">Recommendations</div>\r\n            <ul className=\"mt-2 list-disc pl-5 text-sm\">\r\n              {overall != null ? (\r\n                <>\r\n                  <li>Prioritize sprints for the bottom 2 systems identified above.</li>\r\n                  <li>Ensure owners are assigned and weekly metrics are reported to track progress.</li>\r\n                  <li>After implementing quick wins, retake the assessment to validate impact.</li>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <li>Upload relevant datasets (financials, surveys, org charts) using Data Management.</li>\r\n                  <li>Run assessments to populate per-system reports and tailored recommendations.</li>\r\n                </>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        {/* benchmarking + upload history */}\r\n        <div className=\"mt-6 grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <div className={`p-4 rounded-md border ${darkMode ? \"bg-gray-800 border-gray-700\" : \"bg-white border-gray-100\"}`}>\r\n            <div className=\"font-semibold\">Benchmark</div>\r\n            <div className=\"text-xs text-gray-400 mt-2\">Industry comparison (derived locally from available reference datasets)</div>\r\n            <div className=\"mt-3\">\r\n              <div className=\"text-sm\">Your composite: <strong>{overall != null ? `${overall}%` : \"—\"}</strong></div>\r\n              <div className=\"text-sm\">Industry median: <strong>68%</strong></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={`p-4 rounded-md border ${darkMode ? \"bg-gray-800 border-gray-700\" : \"bg-white border-gray-100\"}`}>\r\n            <div className=\"font-semibold\">Upload History</div>\r\n            <div className=\"text-xs text-gray-400 mt-2\">Recent datasets used for diagnosis</div>\r\n            <ul className=\"mt-3 text-sm space-y-2\">\r\n              {uploads.length === 0 && <li className=\"text-xs text-gray-500\">No uploads yet</li>}\r\n              {uploads.map((u) => (\r\n                <li key={u.id} className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <div className=\"font-medium\">{u.name}</div>\r\n                    <div className=\"text-xs text-gray-400\">{new Date(u.timestamp).toLocaleString()}</div>\r\n                    <div className=\"text-xs text-gray-400\">Systems: {Array.isArray(u.analyzedSystems) ? u.analyzedSystems.join(\", \") : \"—\"}</div>\r\n                  </div>\r\n                  <div>\r\n                    <button onClick={() => navigate(\"/ceo/data\")} className=\"px-2 py-1 text-xs border rounded\">Open</button>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-8 p-4 rounded-lg bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800\">\r\n          <div className=\"flex items-start gap-3\">\r\n            <FaExclamationTriangle className=\"text-blue-600 mt-1 flex-shrink-0\" />\r\n            <div>\r\n              <div className=\"font-medium text-blue-900 dark:text-blue-100\">Pro Tips</div>\r\n              <div className=\"text-sm text-blue-800 dark:text-blue-200 mt-1\">\r\n                • Upload datasets regularly using the wizard above for continuous insights<br/>\r\n                • Set up reminders to maintain data freshness<br/>\r\n                • Use <strong>Take assessment</strong> for first-time diagnostics, <strong>Retake</strong> after organizational changes<br/>\r\n                • Export snapshots for board presentations and stakeholder reports\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Reminder Scheduler Modal */}\r\n      {showReminderModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n          <div className={`max-w-md w-full rounded-xl ${darkMode ? 'bg-gray-900 border border-gray-700' : 'bg-white border border-gray-200'}`}>\r\n            <div className=\"p-6\">\r\n              <div className=\"flex justify-between items-center mb-6\">\r\n                <h3 className=\"text-xl font-semibold flex items-center gap-2\">\r\n                  <FaCalendarAlt className=\"text-blue-600\" />\r\n                  Upload Reminders\r\n                </h3>\r\n                <button \r\n                  onClick={() => setShowReminderModal(false)} \r\n                  className=\"text-gray-500 hover:text-gray-700\"\r\n                >\r\n                  ✕\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-2\">Reminder Frequency</label>\r\n                  <select className=\"w-full p-2 border rounded-lg\">\r\n                    <option value=\"weekly\">Weekly</option>\r\n                    <option value=\"biweekly\">Bi-weekly</option>\r\n                    <option value=\"monthly\">Monthly</option>\r\n                    <option value=\"quarterly\">Quarterly</option>\r\n                  </select>\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-2\">Notification Method</label>\r\n                  <div className=\"space-y-2\">\r\n                    <label className=\"flex items-center\">\r\n                      <input \r\n                        type=\"checkbox\" \r\n                        checked={preferences.emailNotifications}\r\n                        onChange={(e) => {\r\n                          const updated = {...preferences, emailNotifications: e.target.checked};\r\n                          setPreferences(updated);\r\n                          writePreferences(updated);\r\n                        }}\r\n                        className=\"mr-2\" \r\n                      />\r\n                      Email notifications\r\n                    </label>\r\n                    <label className=\"flex items-center\">\r\n                      <input \r\n                        type=\"checkbox\" \r\n                        checked={preferences.smsNotifications}\r\n                        onChange={(e) => {\r\n                          const updated = {...preferences, smsNotifications: e.target.checked};\r\n                          setPreferences(updated);\r\n                          writePreferences(updated);\r\n                        }}\r\n                        className=\"mr-2\" \r\n                      />\r\n                      SMS notifications (requires phone setup)\r\n                    </label>\r\n                    <label className=\"flex items-center\">\r\n                      <input \r\n                        type=\"checkbox\" \r\n                        checked={preferences.uploadReminders}\r\n                        onChange={(e) => {\r\n                          const updated = {...preferences, uploadReminders: e.target.checked};\r\n                          setPreferences(updated);\r\n                          writePreferences(updated);\r\n                        }}\r\n                        className=\"mr-2\" \r\n                      />\r\n                      Browser notifications\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"bg-yellow-50 dark:bg-yellow-900/20 p-3 rounded-lg\">\r\n                  <div className=\"text-sm text-yellow-800 dark:text-yellow-200\">\r\n                    <strong>Note:</strong> Email and SMS notifications require account setup. \r\n                    Browser notifications work immediately.\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"flex justify-end gap-3 pt-4\">\r\n                  <button \r\n                    onClick={() => setShowReminderModal(false)}\r\n                    className=\"px-4 py-2 border rounded-lg hover:bg-gray-50 dark:hover:bg-gray-800\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button \r\n                    onClick={() => {\r\n                      addNotification('Reminders Updated', 'Your upload reminder preferences have been saved', 'success');\r\n                      setShowReminderModal(false);\r\n                    }}\r\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n                  >\r\n                    Save Settings\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n"],"names":["CANONICAL_SYSTEMS","key","title","description","icon","color","order","LEGACY_TO_CANONICAL","normalizeSystemKey","systemKey","normalized","toLowerCase","trim","getSystemsForUI","sort","a","b","map","system","id","weightSum","Object","values","reduce","sum","w","Math","abs","console","warn","concat","toFixed","STORAGE_UPLOADS","STORAGE_ASSESS","STORAGE_REMINDERS","STORAGE_NOTIFICATIONS","STORAGE_PREFERENCES","CANONICAL","readUploads","raw","localStorage","getItem","JSON","parse","_unused","writePreferences","prefs","setItem","stringify","_unused9","PartnerDashboardManual","_ref","orgId","propOrgId","darkMode","org","useOutletContext","navigate","useNavigate","uploads","setUploads","useState","reminders","setReminders","_unused4","readReminders","notifications","setNotifications","_unused6","readNotifications","preferences","setPreferences","emailNotifications","smsNotifications","uploadReminders","analysisAlerts","_unused8","readPreferences","showUploadWizard","setShowUploadWizard","showReminderModal","setShowReminderModal","showNotificationPanel","setShowNotificationPanel","uploadProgress","setUploadProgress","show","progress","status","fileInputRef","useRef","latest","length","assessments","useMemo","arguments","undefined","_unused2","readAssessments","assessmentMap","m","forEach","_a$meta","systemId","meta","String","replace","ts","timestamp","Date","now","_objectSpread","systemScores","scores","s","idx","persisted","score","max","min","round","Array","isArray","analyzedSystems","ss","includes","derived","overall","vals","filter","v","startAssessmentFlow","window","dispatchEvent","CustomEvent","detail","_unused1","encodeURIComponent","useEffect","refresh","addEventListener","removeEventListener","sourceLabelFor","source","name","x","UploadWizard","dragActive","setDragActive","selectedFiles","setSelectedFiles","validationResults","setValidationResults","handleDrag","e","preventDefault","stopPropagation","type","handleFiles","async","files","results","i","file","Promise","resolve","setTimeout","valid","size","systemsDetected","errors","_jsx","className","children","_jsxs","onClick","_result$errors","result","join","FaCheckCircle","FaExclamationTriangle","error","updatedUploads","toString","f","fileCount","totalSize","arr","_unused3","writeUploads","addNotification","disabled","every","r","onDragEnter","onDragLeave","onDragOver","onDrop","from","dataTransfer","FaUpload","_fileInputRef$current","current","click","ref","multiple","accept","onChange","target","FaSpinner","style","width","message","updated","read","slice","_unused7","writeNotifications","n","FaBell","FaClock","toLocaleString","FaCalendarAlt","payload","latestUpload","exportedAt","blob","Blob","url","URL","createObjectURL","document","createElement","href","download","body","appendChild","remove","revokeObjectURL","FaDownload","notif","FaChartLine","sc","Boolean","scoreColor","bgColor","FaFileAlt","_unused0","openFull","_Fragment","u","value","checked"],"sourceRoot":""}