{"version":3,"file":"static/js/35.2195bd20.chunk.js","mappings":"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","sources":["pages/CEO_Dashboard/CEODashboardComponents/Billing.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport { FaDownload, FaCreditCard, FaPrint, FaSave } from \"react-icons/fa\";\r\nimport { useAuth } from \"../../../contexts/AuthContext\";\r\n\r\n/* ---------- localStorage helpers & keys ---------- */\r\nconst KEY_PAYMENT = \"conseqx_billing_payment_v1\";\r\nconst KEY_RECEIPTS = \"conseqx_billing_receipts_v1\";\r\nconst KEY_SUBS = \"conseqx_billing_subscription_v1\";\r\n\r\nfunction readJSON(key, fallback) {\r\n  try {\r\n    const raw = localStorage.getItem(key);\r\n    return raw ? JSON.parse(raw) : fallback;\r\n  } catch {\r\n    return fallback;\r\n  }\r\n}\r\nfunction writeJSON(key, value) {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch {}\r\n}\r\n\r\n/* ---------- small helpers (unique names) ---------- */\r\nfunction digitsOnly(str = \"\") {\r\n  return String(str).replace(/\\D/g, \"\");\r\n}\r\nfunction formatCurrency(n = 0) {\r\n  try {\r\n    return `₦${Number(n).toLocaleString()}`;\r\n  } catch {\r\n    return `₦${n}`;\r\n  }\r\n}\r\nfunction genId(prefix = \"TX\") {\r\n  return `${prefix}-${Date.now().toString(36)}-${Math.floor(Math.random() * 9000 + 1000)}`;\r\n}\r\nfunction prettyDate(ts = Date.now()) {\r\n  try {\r\n    return new Date(ts).toLocaleString();\r\n  } catch {\r\n    return String(ts);\r\n  }\r\n}\r\nfunction guessCardBrand(num = \"\") {\r\n  const s = digitsOnly(num);\r\n  if (s.startsWith(\"4\")) return \"Visa\";\r\n  if (/^5[1-5]/.test(s)) return \"Mastercard\";\r\n  if (/^3[47]/.test(s)) return \"Amex\";\r\n  return \"Card\";\r\n}\r\n\r\n/* ---------- Modal (themed) ---------- */\r\nfunction Modal({ open, onClose, title, children, footer, confirmLabel = \"Confirm\", onConfirm, darkMode = false }) {\r\n  if (!open) return null;\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4\">\r\n      <div\r\n        className=\"absolute inset-0\"\r\n        style={{ backgroundColor: darkMode ? \"rgba(0,0,0,0.6)\" : \"rgba(0,0,0,0.45)\" }}\r\n        onClick={onClose}\r\n        role=\"presentation\"\r\n      />\r\n      <div\r\n        role=\"dialog\"\r\n        aria-modal=\"true\"\r\n        aria-labelledby=\"modal-title\"\r\n        className={`relative z-10 w-full max-w-2xl rounded-2xl p-5 shadow-2xl transition-transform transform ${darkMode ? \"bg-gray-900 border border-gray-700 text-gray-100\" : \"bg-white border border-gray-100 text-gray-900\"}`}\r\n      >\r\n        <div className=\"flex items-start justify-between\">\r\n          <div id=\"modal-title\" className=\"text-lg font-semibold\">\r\n            {title}\r\n          </div>\r\n          <button onClick={onClose} aria-label=\"Close\" className={`${darkMode ? \"text-gray-300\" : \"text-gray-600\"}`}>✕</button>\r\n        </div>\r\n\r\n        <div className=\"mt-4 text-sm\">{children}</div>\r\n\r\n        <div className=\"mt-4 flex justify-end gap-3\">\r\n          {footer ? (\r\n            footer\r\n          ) : onConfirm ? (\r\n            <>\r\n              <button onClick={onClose} className={`px-3 py-2 rounded-md border ${darkMode ? \"bg-gray-800 border-gray-700 text-gray-200\" : \"bg-white border border-gray-200 text-gray-700\"}`}>\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  onConfirm();\r\n                }}\r\n                className=\"px-3 py-2 rounded-md bg-gradient-to-r from-indigo-600 to-blue-600 text-white\"\r\n              >\r\n                {confirmLabel}\r\n              </button>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n/* ---------- receipt HTML builder (dark-mode aware) ---------- */\r\nfunction buildReceiptHTML({ receipt, darkMode }) {\r\n  const bg = darkMode ? \"#0b1220\" : \"#ffffff\";\r\n  const text = darkMode ? \"#e6eef8\" : \"#0f1724\";\r\n  const accent = \"#4f46e5\";\r\n  const { id, date, amount, itemDesc, methodLabel, cardLast4, orgName, periodLabel } = receipt;\r\n  return `<!doctype html>\r\n<html>\r\n<head>\r\n<meta charset=\"utf-8\"/>\r\n<title>Receipt ${id}</title>\r\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"/>\r\n<style>\r\n  :root{ --bg:${bg}; --text:${text}; --accent:${accent}; }\r\n  body{ margin:0; font-family: Inter, system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial; background:var(--bg); color:var(--text); padding:24px; }\r\n  .card{ max-width:720px; margin:0 auto; background: linear-gradient(180deg, rgba(0,0,0,0.02), rgba(0,0,0,0)); border-radius:12px; padding:28px; box-shadow: 0 8px 30px rgba(2,6,23,0.35); }\r\n  h1{ margin:0; color:var(--accent); font-size:20px; }\r\n  .meta{ display:flex; justify-content:space-between; margin-top:12px; color: #9aa6c6; font-size:13px; }\r\n  .line{ height:1px; background:rgba(0,0,0,0.06); margin:18px 0; border-radius:1px; }\r\n  table{ width:100%; border-collapse:collapse; margin-top:8px; }\r\n  th, td{ text-align:left; padding:8px 0; font-size:14px; }\r\n  .right{ text-align:right; }\r\n  .total{ font-weight:700; font-size:18px; color:var(--text); }\r\n  .small{ font-size:12px; color:#9aa6c6; }\r\n  .footer{ margin-top:18px; font-size:12px; color:#9aa6c6; }\r\n  @media print {\r\n    body{ padding:0; }\r\n    .card{ box-shadow:none; border-radius:0; }\r\n  }\r\n</style>\r\n</head>\r\n<body>\r\n  <div class=\"card\" role=\"document\" aria-label=\"Receipt\">\r\n    <div style=\"display:flex; justify-content:space-between; align-items:center;\">\r\n      <div>\r\n        <h1>ConseQ-X</h1>\r\n        <div class=\"small\">Receipt</div>\r\n      </div>\r\n      <div style=\"text-align:right;\">\r\n        <div style=\"font-weight:600\">${orgName || \"Organization\"}</div>\r\n        <div class=\"small\">${periodLabel || \"\"}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"meta\">\r\n      <div>Receipt #: <strong>${id}</strong></div>\r\n      <div>${new Date(date).toLocaleString()}</div>\r\n    </div>\r\n\r\n    <div class=\"line\"></div>\r\n\r\n    <table aria-hidden=\"false\">\r\n      <thead>\r\n        <tr><th>Item</th><th class=\"right\">Amount</th></tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>${itemDesc}</td>\r\n          <td class=\"right\">${formatCurrency(amount)}</td>\r\n        </tr>\r\n      </tbody>\r\n      <tfoot>\r\n        <tr><td class=\"right total\">Total</td><td class=\"right total\">${formatCurrency(amount)}</td></tr>\r\n      </tfoot>\r\n    </table>\r\n\r\n    <div style=\"margin-top:14px; display:flex; justify-content:space-between; gap:16px; align-items:center;\">\r\n      <div>\r\n        <div class=\"small\">Payment method</div>\r\n        <div style=\"margin-top:4px\">${methodLabel}${cardLast4 ? ` • • • • ${cardLast4}` : \"\"}</div>\r\n      </div>\r\n\r\n      <div style=\"text-align:right;\">\r\n        <div class=\"small\">Receipt ID</div>\r\n        <div style=\"margin-top:4px\">${id}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"footer\">\r\n      Thank you for your payment. If you need assistance, contact sales@conseq-x.com.\r\n    </div>\r\n  </div>\r\n</body>\r\n</html>`;\r\n}\r\n\r\n/* ---------- expiry parsing/validation helpers ---------- */\r\n/**\r\n * Accepts formats:\r\n *  - MM/YY\r\n *  - MMYY\r\n *  - MM/YYYY\r\n *  - MMYYYY\r\n * Returns { mon, yr } normalized (yr full 4-digit) or null if invalid format.\r\n */\r\nfunction parseExpiry(v = \"\") {\r\n  if (!v) return null;\r\n  const cleaned = String(v).trim().replace(/\\s/g, \"\");\r\n  // allow optional slash\r\n  const m = cleaned.match(/^(\\d{1,2})\\/?(\\d{2}|\\d{4})$/);\r\n  if (!m) return null;\r\n  let mon = Number(m[1]);\r\n  let yr = Number(m[2]);\r\n  if (Number.isNaN(mon) || Number.isNaN(yr)) return null;\r\n  if (yr < 100) yr = 2000 + yr;\r\n  return { mon, yr };\r\n}\r\nfunction isExpiryInFuture(v = \"\") {\r\n  const parsed = parseExpiry(v);\r\n  if (!parsed) return false;\r\n  const { mon, yr } = parsed;\r\n  if (mon < 1 || mon > 12) return false;\r\n  const expDate = new Date(yr, mon - 1, 1);\r\n  const endOfMonth = new Date(expDate.getFullYear(), expDate.getMonth() + 1, 0, 23, 59, 59, 999);\r\n  return endOfMonth.getTime() > Date.now();\r\n}\r\n\r\n/* ---------- main CEOBilling component ---------- */\r\nexport default function CEOBilling() {\r\n  const { darkMode } = useOutletContext();\r\n  const auth = useAuth();\r\n\r\n  // persisted state\r\n  const [paymentMethod, setPaymentMethod] = useState(() => readJSON(KEY_PAYMENT, null));\r\n  const [receipts, setReceipts] = useState(() => readJSON(KEY_RECEIPTS, []));\r\n  const [subscription, setSubscription] = useState(() => readJSON(KEY_SUBS, auth?.org?.subscription || { tier: \"free\", expiresAt: null }));\r\n\r\n  // form/transient UI\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n  const [cardName, setCardName] = useState(\"\");\r\n  const [cardExpiry, setCardExpiry] = useState(\"\");\r\n  const [cardCVV, setCardCVV] = useState(\"\");\r\n  const [autoPay, setAutoPay] = useState(() => (paymentMethod?.autoPay || false));\r\n  const [busy, setBusy] = useState(false);\r\n\r\n  // inline validation errors\r\n  const [cardNumberError, setCardNumberError] = useState(\"\");\r\n  const [cardExpiryError, setCardExpiryError] = useState(\"\");\r\n  const [cardCVVError, setCardCVVError] = useState(\"\");\r\n\r\n  // modal system: { open, type: 'info'|'confirm', title, body, confirmLabel, onConfirm, footer }\r\n  const [modalState, setModalState] = useState({ open: false });\r\n\r\n  useEffect(() => writeJSON(KEY_PAYMENT, paymentMethod), [paymentMethod]);\r\n  useEffect(() => writeJSON(KEY_RECEIPTS, receipts), [receipts]);\r\n  useEffect(() => writeJSON(KEY_SUBS, subscription), [subscription]);\r\n\r\n  // plan prices\r\n  const PRICES = useMemo(() => ({ monthly: 39900, yearly: 399000 }), []);\r\n\r\n  const cardOnFile = Boolean(paymentMethod);\r\n  const planTier = subscription?.tier || \"free\";\r\n  const planName = planTier === \"premium\" ? \"ConseQ-X Ultra\" : \"Free\";\r\n  const planExpiry = subscription?.expiresAt ? new Date(subscription.expiresAt).toLocaleDateString() : \"—\";\r\n  const subscriptionActive = subscription?.expiresAt && new Date(subscription.expiresAt).getTime() > Date.now();\r\n\r\n  /**\r\n   * TEMP OVERRIDE: allow pay buttons to be usable even when a subscription is active.\r\n   * Set to `false` in production to re-enable the guard preventing duplicate active subscriptions.\r\n   */\r\n  const ALLOW_PAY_WHILE_ACTIVE = true; // <-- set to false for production behavior\r\n\r\n  /* ---------- validation helpers ---------- */\r\n  function isValidCardNumber(num = \"\") {\r\n    const s = digitsOnly(num);\r\n    return s.length >= 13 && s.length <= 19;\r\n  }\r\n  function isValidCVV(cvv = \"\", brand = \"Card\") {\r\n    const s = digitsOnly(cvv);\r\n    if (brand === \"Amex\") return s.length === 4;\r\n    return s.length === 3;\r\n  }\r\n\r\n  /* ---------- receipt & payment processing (mock) ---------- */\r\n  function createReceipt({ amount, itemDesc, methodLabel, cardLast4, periodLabel }) {\r\n    const receipt = {\r\n      id: genId(\"RCPT\"),\r\n      date: Date.now(),\r\n      amount,\r\n      itemDesc,\r\n      methodLabel,\r\n      cardLast4,\r\n      periodLabel,\r\n      orgName: auth?.org?.name || (auth?.user?.email ? auth.user.email.split(\"@\")[1] : \"Organization\"),\r\n    };\r\n    setReceipts((prev) => [receipt, ...prev]);\r\n    return receipt;\r\n  }\r\n\r\n  function downloadReceipt(receipt) {\r\n    const html = buildReceiptHTML({ receipt, darkMode });\r\n    const blob = new Blob([html], { type: \"text/html;charset=utf-8\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = `${receipt.id}.html`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    a.remove();\r\n    setTimeout(() => URL.revokeObjectURL(url), 2000);\r\n  }\r\n\r\n  function openPrintView(receipt) {\r\n    const html = buildReceiptHTML({ receipt, darkMode });\r\n    const w = window.open(\"\", \"_blank\");\r\n    if (!w) return;\r\n    w.document.write(html);\r\n    w.document.close();\r\n    setTimeout(() => {\r\n      try {\r\n        w.focus();\r\n        w.print();\r\n      } catch (e) {\r\n        console.warn(\"Print blocked or failed\", e);\r\n      }\r\n    }, 300);\r\n  }\r\n\r\n  async function mockProcessPayment({ amount, method = \"card\", periodLabel = \"\" } = {}) {\r\n    setBusy(true);\r\n    try {\r\n      await new Promise((r) => setTimeout(r, 650)); // network simulation\r\n\r\n      // require card for auto/online card charges\r\n      if (method === \"card\" && !paymentMethod) {\r\n        setModalState({ open: true, type: \"info\", title: \"Card required\", body: <div>Please add a card before charging.</div> });\r\n        setBusy(false);\r\n        return false;\r\n      }\r\n\r\n      const cardLast4 = paymentMethod?.last4 || null;\r\n      const methodLabel = method === \"card\" ? \"Card\" : \"Manual\";\r\n      const receipt = createReceipt({\r\n        amount,\r\n        itemDesc: `${planName} subscription (${periodLabel || \"payment\"})`,\r\n        methodLabel,\r\n        cardLast4,\r\n        periodLabel,\r\n      });\r\n\r\n      // update subscription expiry if charge was for monthly/yearly\r\n      const nowTs = Date.now();\r\n      if (periodLabel === \"monthly\") {\r\n        const expiresAt = nowTs + 30 * 24 * 3600 * 1000;\r\n        setSubscription((s) => ({ ...(s || {}), tier: \"premium\", expiresAt }));\r\n      } else if (periodLabel === \"yearly\") {\r\n        const expiresAt = nowTs + 365 * 24 * 3600 * 1000;\r\n        setSubscription((s) => ({ ...(s || {}), tier: \"premium\", expiresAt }));\r\n      }\r\n\r\n      setBusy(false);\r\n\r\n      setModalState({\r\n        open: true,\r\n        type: \"info\",\r\n        title: \"Payment success\",\r\n        body: (\r\n          <div>\r\n            Payment processed successfully — a receipt was created ({receipt.id}). You can download or print it from the receipts list.\r\n          </div>\r\n        ),\r\n      });\r\n      return true;\r\n    } catch (err) {\r\n      console.error(err);\r\n      setBusy(false);\r\n      setModalState({ open: true, type: \"info\", title: \"Payment failed\", body: <div>Payment failed (dev). Check console.</div> });\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /* ---------- card management ---------- */\r\n  function handleSaveCard(e) {\r\n    e?.preventDefault?.();\r\n\r\n    // reset inline errors\r\n    setCardNumberError(\"\");\r\n    setCardExpiryError(\"\");\r\n    setCardCVVError(\"\");\r\n\r\n    const brand = guessCardBrand(cardNumber);\r\n\r\n    if (!isValidCardNumber(cardNumber)) {\r\n      setCardNumberError(\"Enter 13–19 digits for card number.\");\r\n      return;\r\n    }\r\n    if (!cardName || cardName.trim().length < 2) {\r\n      setModalState({ open: true, type: \"info\", title: \"Name required\", body: <div>Please enter the cardholder's name.</div> });\r\n      return;\r\n    }\r\n    if (!parseExpiry(cardExpiry)) {\r\n      setCardExpiryError(\"Use MM/YY or MMYYYY (e.g. 08/28 or 0828).\");\r\n      return;\r\n    }\r\n    if (!isExpiryInFuture(cardExpiry)) {\r\n      setCardExpiryError(\"Card expiry must be a future month.\");\r\n      return;\r\n    }\r\n    if (!isValidCVV(cardCVV, brand)) {\r\n      setCardCVVError(brand === \"Amex\" ? \"Enter 4-digit CVV for Amex.\" : \"Enter 3-digit CVV.\");\r\n      return;\r\n    }\r\n\r\n    const saved = {\r\n      brand,\r\n      last4: digitsOnly(cardNumber).slice(-4),\r\n      name: cardName,\r\n      expiry: cardExpiry.trim(),\r\n      autoPay,\r\n      addedAt: Date.now(),\r\n    };\r\n    setPaymentMethod(saved);\r\n    setCardNumber(\"\");\r\n    setCardName(\"\");\r\n    setCardExpiry(\"\");\r\n    setCardCVV(\"\");\r\n    setModalState({ open: true, type: \"info\", title: \"Card saved\", body: <div>Card saved locally (dev). In production, use a PCI-compliant provider.</div> });\r\n  }\r\n\r\n  function handleRemoveCardConfirm() {\r\n    setModalState({\r\n      open: true,\r\n      type: \"confirm\",\r\n      title: \"Remove card?\",\r\n      body: <div>Remove saved card and disable auto-pay?</div>,\r\n      confirmLabel: \"Remove\",\r\n      onConfirm: () => {\r\n        setPaymentMethod(null);\r\n        setAutoPay(false);\r\n        setModalState({ open: true, type: \"info\", title: \"Card removed\", body: <div>Card removed and auto-pay disabled.</div> });\r\n      },\r\n    });\r\n  }\r\n\r\n  function toggleAutoPay() {\r\n    if (!paymentMethod) {\r\n      setModalState({ open: true, type: \"info\", title: \"Add card first\", body: <div>Please add a card before enabling auto-pay.</div> });\r\n      return;\r\n    }\r\n    const next = !autoPay;\r\n    setAutoPay(next);\r\n    setPaymentMethod((pm) => (pm ? { ...pm, autoPay: next } : pm));\r\n    setModalState({ open: true, type: \"info\", title: next ? \"Auto-pay enabled\" : \"Auto-pay disabled\", body: <div>Auto subscription setting updated.</div> });\r\n  }\r\n\r\n  /* ---------- pay flow (confirm first, allow override for testing) ---------- */\r\n  function confirmPay(period) {\r\n    // Production behavior: block if already active\r\n    if (!ALLOW_PAY_WHILE_ACTIVE && subscriptionActive) {\r\n      setModalState({ open: true, type: \"info\", title: \"Subscription active\", body: <div>You already have an active subscription. Renewals are not allowed while active.</div> });\r\n      return;\r\n    }\r\n\r\n    const amount = period === \"yearly\" ? PRICES.yearly : PRICES.monthly;\r\n    const methodLabel = paymentMethod ? `${paymentMethod.brand} •••• ${paymentMethod.last4}` : \"No card on file (manual)\";\r\n    const periodLabel = period === \"yearly\" ? \"Yearly\" : \"Monthly\";\r\n\r\n    setModalState({\r\n      open: true,\r\n      type: \"confirm\",\r\n      title: `Confirm ${periodLabel} payment`,\r\n      body: (\r\n        <div className=\"space-y-2\">\r\n          <div>Plan: <strong>{planName}</strong></div>\r\n          <div>Amount: <strong>{formatCurrency(amount)}</strong></div>\r\n          <div>Billing: <strong>{periodLabel}</strong></div>\r\n          <div>Payment method: <strong>{methodLabel}</strong></div>\r\n          {subscriptionActive && ALLOW_PAY_WHILE_ACTIVE && (\r\n            <div className=\"text-sm text-yellow-600\">Note: subscription is currently active — you are allowed to test payment while this override is enabled.</div>\r\n          )}\r\n        </div>\r\n      ),\r\n      confirmLabel: `Pay ${formatCurrency(amount)}`,\r\n      onConfirm: async () => {\r\n        setModalState({ open: false });\r\n        await mockProcessPayment({ amount, method: paymentMethod ? \"card\" : \"manual\", periodLabel: period === \"yearly\" ? \"yearly\" : \"monthly\" });\r\n      },\r\n    });\r\n  }\r\n\r\n  /* ---------- receipts status (Active / Expired) ---------- */\r\n  function getReceiptStatus(r) {\r\n    const nowTs = Date.now();\r\n    if (!r.periodLabel) return { label: \"Issued\", active: false };\r\n    const periodMs = r.periodLabel === \"yearly\" ? 365 * 24 * 3600 * 1000 : 30 * 24 * 3600 * 1000;\r\n    const expiresAt = r.date + periodMs;\r\n    if (nowTs <= expiresAt) return { label: \"Active\", active: true, expiresAt };\r\n    return { label: \"Expired\", active: false, expiresAt };\r\n  }\r\n\r\n  /* ---------- receipts actions with confirm modals (no delete) ---------- */\r\n  function confirmDownloadReceipt(r) {\r\n    setModalState({\r\n      open: true,\r\n      type: \"confirm\",\r\n      title: \"Download receipt?\",\r\n      body: <div>Download receipt <strong>{r.id}</strong> ({formatCurrency(r.amount)}) to your device?</div>,\r\n      confirmLabel: \"Download\",\r\n      onConfirm: () => {\r\n        setModalState({ open: false });\r\n        downloadReceipt(r);\r\n      },\r\n    });\r\n  }\r\n\r\n  function confirmPrintReceipt(r) {\r\n    setModalState({\r\n      open: true,\r\n      type: \"confirm\",\r\n      title: \"Print receipt?\",\r\n      body: <div>Open a print view for receipt <strong>{r.id}</strong> ({formatCurrency(r.amount)})?</div>,\r\n      confirmLabel: \"Open print\",\r\n      onConfirm: () => {\r\n        setModalState({ open: false });\r\n        openPrintView(r);\r\n      },\r\n    });\r\n  }\r\n\r\n  /* ---------- other small handlers ---------- */\r\n  function handleClearForm() {\r\n    setCardNumber(\"\");\r\n    setCardName(\"\");\r\n    setCardExpiry(\"\");\r\n    setCardCVV(\"\");\r\n    setCardNumberError(\"\");\r\n    setCardExpiryError(\"\");\r\n    setCardCVVError(\"\");\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <Modal\r\n        open={Boolean(modalState.open)}\r\n        onClose={() => setModalState({ open: false })}\r\n        title={modalState.title}\r\n        footer={modalState.footer}\r\n        confirmLabel={modalState.confirmLabel}\r\n        onConfirm={modalState.onConfirm}\r\n        darkMode={darkMode}\r\n      >\r\n        <div className={`${darkMode ? \"text-gray-200\" : \"text-gray-700\"}`}>{modalState.body}</div>\r\n      </Modal>\r\n\r\n      <div className=\"flex items-start justify-between gap-4\">\r\n        <div>\r\n          <h2 className={`${darkMode ? \"text-gray-100\" : \"text-gray-900\"} text-lg font-semibold`}>Billing & Receipts</h2>\r\n          <p className={`mt-2 text-sm ${darkMode ? \"text-gray-300\" : \"text-gray-600\"}`}>\r\n            Manage subscription, card on file, and download printable receipts. Receipts are generated locally and can be saved as PDF via your browser's Print dialog.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"text-sm text-right\">\r\n          <div>\r\n            Plan: <strong className={darkMode ? \"text-gray-100\" : \"\"}>{planName}</strong>\r\n            <span className=\"ml-3 inline-flex items-center px-2 py-1 rounded-full text-xs font-medium\" style={{ background: subscriptionActive ? (darkMode ? \"#052e0f\" : \"#ecfdf5\") : (darkMode ? \"#2b0b0b\" : \"#fff5f5\"), color: subscriptionActive ? (darkMode ? \"#9ee2a7\" : \"#059669\") : (darkMode ? \"#fda4af\" : \"#dc2626\") }}>\r\n              {subscriptionActive ? `Active • Expires ${planExpiry}` : \"Expired / Inactive\"}\r\n            </span>\r\n          </div>\r\n          <div className={`${darkMode ? \"text-gray-300 text-xs\" : \"text-xs text-gray-500\"}`}>Expires: {planExpiry}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-4 grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n        {/* Left: subscription & receipts */}\r\n        <div className={`${darkMode ? \"bg-gray-900 border border-gray-700 text-gray-100\" : \"bg-white border border-gray-100 text-gray-900\"} rounded-2xl p-4 lg:col-span-2 shadow-sm`}>\r\n          <div className=\"flex items-start justify-between\">\r\n            <div>\r\n              <div className={`${darkMode ? \"text-gray-400\" : \"text-sm text-gray-400\"}`}>Subscription</div>\r\n              <div className=\"text-2xl font-semibold mt-1\">{planName}</div>\r\n              <div className={`${darkMode ? \"text-gray-400\" : \"text-xs text-gray-500\"} mt-2`}>Upgrade for CEO features, unlimited analyses, and priority support.</div>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col items-end gap-2\">\r\n              <div className={`${darkMode ? \"text-xs text-green-400\" : \"text-xs text-green-500\"}`}>Save ~2 months</div>\r\n              <div className=\"flex gap-2\">\r\n                <button\r\n                  onClick={() => confirmPay(\"monthly\")}\r\n                  disabled={busy || (!ALLOW_PAY_WHILE_ACTIVE && subscriptionActive)}\r\n                  className={`px-4 py-2 rounded-md ${busy || (!ALLOW_PAY_WHILE_ACTIVE && subscriptionActive) ? \"bg-gray-300 text-gray-600 cursor-not-allowed\" : \"bg-gradient-to-r from-indigo-600 to-blue-600 text-white\"}`}\r\n                >\r\n                  {busy ? \"Processing...\" : `Pay Monthly — ${formatCurrency(PRICES.monthly)}`}\r\n                </button>\r\n                <button\r\n                  onClick={() => confirmPay(\"yearly\")}\r\n                  disabled={busy || (!ALLOW_PAY_WHILE_ACTIVE && subscriptionActive)}\r\n                  className={`px-4 py-2 rounded-md ${busy || (!ALLOW_PAY_WHILE_ACTIVE && subscriptionActive) ? \"bg-gray-300 text-gray-600 cursor-not-allowed\" : (darkMode ? \"bg-gray-800 border border-gray-700 text-gray-200\" : \"bg-white border border-gray-200 text-gray-700\")}`}\r\n                >\r\n                  {busy ? \"Processing...\" : `Pay Yearly — ${formatCurrency(PRICES.yearly)}`}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <hr className={`my-4 ${darkMode ? \"border-gray-800\" : \"border-gray-200\"}`} />\r\n\r\n          <div>\r\n            <h4 className=\"text-sm font-semibold\">Receipts</h4>\r\n            <div className=\"mt-3 space-y-3 max-h-96 overflow-auto\">\r\n              {receipts.length === 0 ? (\r\n                <div className={`${darkMode ? \"text-gray-300\" : \"text-gray-600\"} text-sm`}>No receipts yet. Payments will generate receipts automatically.</div>\r\n              ) : (\r\n                receipts.map((r) => {\r\n                  const status = getReceiptStatus(r);\r\n                  return (\r\n                    <div key={r.id} className={`${darkMode ? \"bg-gray-800 border border-gray-700\" : \"bg-gray-50 border border-gray-100\"} p-3 rounded-md flex items-center justify-between`}>\r\n                      <div>\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <div className=\"font-medium\">{r.itemDesc}</div>\r\n                          <div className={`text-xs px-2 py-0.5 rounded-full ${status.active ? (darkMode ? \"bg-green-900/30 text-green-300\" : \"bg-green-100 text-green-700\") : (darkMode ? \"bg-red-900/20 text-red-300\" : \"bg-red-100 text-red-700\")}`}>\r\n                            {status.label}\r\n                          </div>\r\n                        </div>\r\n                        <div className={`${darkMode ? \"text-gray-400\" : \"text-xs text-gray-400\"}`}>{prettyDate(r.date)}</div>\r\n                      </div>\r\n\r\n                      <div className=\"flex items-center gap-3\">\r\n                        <div className=\"text-sm font-semibold\">{formatCurrency(r.amount)}</div>\r\n\r\n                        <button\r\n                          onClick={() => confirmDownloadReceipt(r)}\r\n                          title=\"Download receipt\"\r\n                          className={`px-3 py-2 rounded-md border ${darkMode ? \"bg-gray-800 border-gray-700 text-gray-200\" : \"bg-white border-gray-200 text-gray-700\"}`}\r\n                        >\r\n                          <FaDownload />\r\n                        </button>\r\n\r\n                        <button\r\n                          onClick={() => confirmPrintReceipt(r)}\r\n                          title=\"Print receipt\"\r\n                          className={`px-3 py-2 rounded-md border ${darkMode ? \"bg-gray-800 border-gray-700 text-gray-200\" : \"bg-white border-gray-200 text-gray-700\"}`}\r\n                        >\r\n                          <FaPrint />\r\n                        </button>\r\n\r\n                        {/* delete removed per request */}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Right: payment method / card management */}\r\n        <aside className={`${darkMode ? \"bg-gray-900 border border-gray-700 text-gray-100\" : \"bg-white border border-gray-100 text-gray-900\"} rounded-2xl p-4 shadow-sm`}>\r\n          <div className=\"flex items-center justify-between mb-3\">\r\n            <div>\r\n              <div className=\"text-sm font-semibold\">Payment method</div>\r\n              <div className=\"text-xs text-gray-400\">Card on file and auto-subscription settings</div>\r\n            </div>\r\n            <div>\r\n              {cardOnFile ? (\r\n                <button onClick={handleRemoveCardConfirm} className={`px-2 py-1 rounded-md border ${darkMode ? \"bg-gray-800 border-gray-700 text-gray-200\" : \"\"}`}>Remove</button>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n\r\n          {cardOnFile ? (\r\n            <div className=\"mb-4\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <div className=\"rounded-md bg-indigo-600 text-white px-3 py-2\">\r\n                  <FaCreditCard />\r\n                </div>\r\n                <div>\r\n                  <div className=\"font-medium\">{paymentMethod.brand || \"Card\"}</div>\r\n                  <div className=\"text-xs text-gray-400\">•••• •••• •••• {paymentMethod.last4}</div>\r\n                  <div className=\"text-xs text-gray-400\">Expiry: {paymentMethod.expiry}</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mt-3 flex items-center justify-between\">\r\n                <div className={`${darkMode ? \"text-gray-400\" : \"text-sm text-gray-400\"}`}>Auto withdraw</div>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <button onClick={toggleAutoPay} className={`px-2 py-1 rounded-md border ${darkMode ? \"bg-gray-800 border-gray-700 text-gray-200\" : \"bg-white\"}`}>\r\n                    {autoPay ? <span className=\"flex items-center gap-2 text-green-400\">Enabled</span> : <span className=\"flex items-center gap-2 text-gray-400\">Disabled</span>}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"mb-4 text-sm text-gray-500\">No card on file. Add a card below to enable auto-subscription.</div>\r\n          )}\r\n\r\n          <form onSubmit={handleSaveCard} className=\"space-y-3\">\r\n            <div>\r\n              <label className=\"text-xs text-gray-400\">Card number</label>\r\n              <input\r\n                value={cardNumber}\r\n                onChange={(e) => {\r\n                  const raw = e.target.value;\r\n                  const cleaned = raw.replace(/[^\\d\\s]/g, \"\");\r\n                  setCardNumber(cleaned.slice(0, 23));\r\n                  if (cardNumberError) setCardNumberError(\"\");\r\n                }}\r\n                placeholder=\"4242 4242 4242 4242\"\r\n                inputMode=\"numeric\"\r\n                className={`w-full mt-1 px-3 py-2 rounded border ${darkMode ? \"bg-gray-800 border-gray-700 text-gray-100\" : \"bg-white border-gray-200\"}`}\r\n                aria-label=\"Card number\"\r\n              />\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"text-xs text-gray-400 mt-1\">Digits only, 13–19 characters.</div>\r\n                {cardNumberError && <div className=\"text-xs text-red-500 mt-1\">{cardNumberError}</div>}\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"text-xs text-gray-400\">Name on card</label>\r\n              <input\r\n                value={cardName}\r\n                onChange={(e) => setCardName(e.target.value)}\r\n                placeholder=\"Full name\"\r\n                className={`w-full mt-1 px-3 py-2 rounded border ${darkMode ? \"bg-gray-800 border-gray-700 text-gray-100\" : \"bg-white border-gray-200\"}`}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex gap-2\">\r\n              <div className=\"flex-1\">\r\n                <label className=\"text-xs text-gray-400\">Expiry (MM/YY)</label>\r\n                <input\r\n                  value={cardExpiry}\r\n                  onChange={(e) => {\r\n                    const v = e.target.value.replace(/[^\\d\\/]/g, \"\").slice(0, 6);\r\n                    setCardExpiry(v);\r\n                    if (cardExpiryError) setCardExpiryError(\"\");\r\n                  }}\r\n                  onBlur={() => {\r\n                    const parsed = parseExpiry(cardExpiry);\r\n                    if (parsed) {\r\n                      const mm = String(parsed.mon).padStart(2, \"0\");\r\n                      const yy = String(parsed.yr).slice(-2);\r\n                      setCardExpiry(`${mm}/${yy}`);\r\n                    }\r\n                  }}\r\n                  placeholder=\"08/28\"\r\n                  className={`w-full mt-1 px-3 py-2 rounded border ${darkMode ? \"bg-gray-800 border-gray-700 text-gray-100\" : \"bg-white border-gray-200\"}`}\r\n                />\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"text-xs text-gray-400 mt-1\">MM/YY or MMYY</div>\r\n                  {cardExpiryError && <div className=\"text-xs text-red-500 mt-1\">{cardExpiryError}</div>}\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{ width: 120 }}>\r\n                <label className=\"text-xs text-gray-400\">CVV</label>\r\n                <input\r\n                  value={cardCVV}\r\n                  onChange={(e) => {\r\n                    const v = digitsOnly(e.target.value).slice(0, 4);\r\n                    setCardCVV(v);\r\n                    if (cardCVVError) setCardCVVError(\"\");\r\n                  }}\r\n                  placeholder=\"123\"\r\n                  inputMode=\"numeric\"\r\n                  className={`w-full mt-1 px-3 py-2 rounded border ${darkMode ? \"bg-gray-800 border-gray-700 text-gray-100\" : \"bg-white border-gray-200\"}`}\r\n                />\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div />\r\n                  {cardCVVError && <div className=\"text-xs text-red-500 mt-1\">{cardCVVError}</div>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-2\">\r\n              <input id=\"autopay\" type=\"checkbox\" checked={autoPay} onChange={(e) => setAutoPay(e.target.checked)} />\r\n              <label htmlFor=\"autopay\" className=\"text-sm text-gray-400\">Enable auto-subscription (auto withdraw)</label>\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-2\">\r\n              <button type=\"submit\" className=\"px-3 py-2 rounded-md bg-gradient-to-r from-indigo-600 to-blue-600 text-white\">\r\n                <FaSave className=\"inline-block mr-2\" /> Save card\r\n              </button>\r\n\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleClearForm}\r\n                className={`px-3 py-2 rounded-md border ${darkMode ? \"bg-gray-800 border-gray-700 text-gray-200\" : \"bg-white border-gray-200 text-gray-700\"}`}\r\n              >\r\n                Clear\r\n              </button>\r\n\r\n              {cardOnFile && (\r\n                <button type=\"button\" onClick={handleRemoveCardConfirm} className=\"px-3 py-2 rounded-md border text-red-600\">\r\n                  Remove\r\n                </button>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </aside>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"names":["KEY_PAYMENT","KEY_RECEIPTS","KEY_SUBS","readJSON","key","fallback","raw","localStorage","getItem","JSON","parse","_unused","writeJSON","value","setItem","stringify","_unused2","digitsOnly","String","arguments","length","undefined","replace","formatCurrency","n","concat","Number","toLocaleString","_unused3","genId","Date","now","toString","Math","floor","random","prettyDate","ts","_unused4","Modal","_ref","open","onClose","title","children","footer","confirmLabel","onConfirm","darkMode","_jsxs","className","_jsx","style","backgroundColor","onClick","role","id","_Fragment","buildReceiptHTML","_ref2","receipt","bg","text","date","amount","itemDesc","methodLabel","cardLast4","orgName","periodLabel","parseExpiry","v","m","trim","match","mon","yr","isNaN","CEOBilling","useOutletContext","auth","useAuth","paymentMethod","setPaymentMethod","useState","receipts","setReceipts","subscription","setSubscription","_auth$org","org","tier","expiresAt","cardNumber","setCardNumber","cardName","setCardName","cardExpiry","setCardExpiry","cardCVV","setCardCVV","autoPay","setAutoPay","busy","setBusy","cardNumberError","setCardNumberError","cardExpiryError","setCardExpiryError","cardCVVError","setCardCVVError","modalState","setModalState","useEffect","PRICES","useMemo","monthly","yearly","cardOnFile","Boolean","planName","planExpiry","toLocaleDateString","subscriptionActive","getTime","async","mockProcessPayment","method","Promise","r","setTimeout","type","body","last4","_ref3","_auth$org2","_auth$user","name","user","email","split","prev","createReceipt","nowTs","s","_objectSpread","err","console","error","handleRemoveCardConfirm","confirmPay","period","brand","confirmDownloadReceipt","html","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","remove","revokeObjectURL","downloadReceipt","confirmPrintReceipt","w","window","write","close","focus","print","e","warn","openPrintView","background","color","disabled","map","status","label","active","periodMs","getReceiptStatus","FaDownload","FaPrint","FaCreditCard","expiry","next","pm","onSubmit","_e$preventDefault","preventDefault","call","startsWith","test","guessCardBrand","isValidCardNumber","parsed","expDate","getFullYear","getMonth","isExpiryInFuture","isValidCVV","saved","slice","addedAt","onChange","cleaned","target","placeholder","inputMode","onBlur","mm","padStart","yy","width","checked","htmlFor","FaSave"],"sourceRoot":""}