{"version":3,"file":"static/js/737.19bda88a.chunk.js","mappings":"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","sources":["pages/CEO_Dashboard/CEODashboardComponents/PartnerDashboard/OverviewView.js","pages/CEO_Dashboard/constants/systems.js","../node_modules/recharts/es6/chart/LineChart.js"],"sourcesContent":["import React from 'react';\r\nimport { CANONICAL_SYSTEMS } from '../../constants/systems';\r\nimport { useOutletContext } from 'react-router-dom';\r\nimport { ResponsiveContainer, LineChart, Line, Tooltip, Area, XAxis, YAxis } from 'recharts';\r\n\r\n// lightweight local date formatting to avoid adding a dependency\r\nfunction fmtShort(d) {\r\n  try { return new Date(d).toLocaleDateString(undefined, { month: '2-digit', day: '2-digit' }); } catch { return '' + d; }\r\n}\r\nfunction fmtLong(d) {\r\n  try { return new Date(d).toLocaleString(); } catch { return '' + d; }\r\n}\r\n\r\n/**\r\n * OverviewView\r\n * - Clean system overview with high-level health scores and trends\r\n * - Focuses purely on overview metrics without data management functionality\r\n */\r\nexport default function OverviewView() {\r\n  const outlet = useOutletContext();\r\n  const darkMode = outlet?.darkMode ?? false;\r\n  const dashboardMode = outlet?.dashboardMode ?? 'manual';\r\n  const orgId = outlet?.orgId || \"anon\";\r\n\r\n  // Fetch overview data from mock API\r\n  const [scores, setScores] = React.useState({});\r\n  const [series, setSeries] = React.useState([]);\r\n  const [perSystemSeries, setPerSystemSeries] = React.useState({});\r\n\r\n  React.useEffect(() => {\r\n    let mounted = true;\r\n\r\n    function makeSeriesFromBase(base, tsBase = Date.now()) {\r\n      const arr = [];\r\n      for (let i = 6; i >= 0; i--) {\r\n        const ts = tsBase - i * 24 * 3600 * 1000;\r\n        const v = Math.max(5, Math.min(95, base + Math.floor((Math.random() - 0.5) * 6)));\r\n        arr.push({ ts, value: v, upper: Math.min(100, v + 4), lower: Math.max(0, v - 4), date: new Date(ts) });\r\n      }\r\n      return arr;\r\n    }\r\n\r\n    async function load() {\r\n      try {\r\n        // Prefer client-side latest upload (manual upload-driven flow)\r\n        const raw = localStorage.getItem('conseqx_uploads_v1');\r\n        const uploads = raw ? JSON.parse(raw) : [];\r\n        if (uploads && uploads.length) {\r\n          const latest = uploads[0];\r\n          // derive simple scores: presence -> 70, absent -> 45, allow assessments to override (if present in local assessments)\r\n          const byAssessRaw = localStorage.getItem('conseqx_assessments_v1');\r\n          const byOrg = byAssessRaw ? JSON.parse(byAssessRaw) : {};\r\n          const assessments = (byOrg[outlet?.org?.id || 'anon'] || []).reduce((acc, a) => { const k = a.systemId || a.system || a.systemKey; if (k) acc[k] = a.score || acc[k] || 0; return acc; }, {});\r\n\r\n          const scoresLocal = CANONICAL_SYSTEMS.reduce((acc, s) => {\r\n            if (assessments[s.key]) acc[s.key] = Math.round(Math.max(0, Math.min(100, assessments[s.key])));\r\n            else if (Array.isArray(latest.analyzedSystems) && latest.analyzedSystems.includes(s.key)) acc[s.key] = 70;\r\n            else acc[s.key] = 45;\r\n            return acc;\r\n          }, {});\r\n\r\n          if (!mounted) return;\r\n          setScores(scoresLocal);\r\n          const overallBase = Math.round(Object.values(scoresLocal).reduce((a,b)=>a+b,0)/Math.max(1,Object.keys(scoresLocal).length));\r\n          setSeries(makeSeriesFromBase(overallBase, latest.timestamp || Date.now()));\r\n          const per = {};\r\n          CANONICAL_SYSTEMS.forEach((s) => { per[s.key] = makeSeriesFromBase(scoresLocal[s.key] || 50, latest.timestamp || Date.now()); });\r\n          setPerSystemSeries(per);\r\n          return;\r\n        }\r\n\r\n        // fallback to mock API when no manual uploads present\r\n        const res = await fetch('http://localhost:4001/api/overview');\r\n        if (!res.ok) throw new Error('bad response');\r\n        const data = await res.json();\r\n        if (!mounted) return;\r\n        setSeries(data.overallSeries.map(d => ({ ...d, date: new Date(d.ts) })));\r\n        setPerSystemSeries(Object.keys(data.perSystemSeries).reduce((acc, k) => { acc[k] = data.perSystemSeries[k].map(d => ({ ...d, date: new Date(d.ts) })); return acc; }, {}));\r\n        setScores(data.scores || {});\r\n      } catch (e) {\r\n        // final fallback: generate reasonable mock series\r\n        const scoresLocal = CANONICAL_SYSTEMS.reduce((acc, s) => { acc[s.key] = Math.floor(40 + Math.random() * 50); return acc; }, {});\r\n        if (!mounted) return;\r\n        setScores(scoresLocal);\r\n        setSeries(makeSeriesFromBase(62));\r\n        setPerSystemSeries(CANONICAL_SYSTEMS.reduce((acc, s) => { acc[s.key] = makeSeriesFromBase(40 + Math.floor(Math.random()*40)); return acc; }, {}));\r\n      }\r\n    }\r\n\r\n    load();\r\n\r\n    // Listen for storage changes (uploads may be added by Data Management)\r\n    function onStorage(e) {\r\n      if (!e.key || e.key === 'conseqx_uploads_v1' || e.key === 'conseqx_assessments_v1') load();\r\n    }\r\n    window.addEventListener('storage', onStorage);\r\n    let bc;\r\n    try {\r\n      if (typeof BroadcastChannel !== 'undefined') {\r\n        bc = new BroadcastChannel('conseqx_assessments');\r\n        bc.addEventListener('message', (ev) => { if (ev?.data?.type === 'assessments:update') load(); });\r\n      }\r\n    } catch {}\r\n\r\n    return () => { mounted = false; window.removeEventListener('storage', onStorage); if (bc) try { bc.close(); } catch {} };\r\n  }, [outlet?.org]);\r\n\r\n  const overall = Math.round(Object.values(scores).reduce((a, b) => a + b, 0) / (Object.keys(scores).length || 1));\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\r\n        <div className={`rounded-2xl p-4 col-span-1 md:col-span-1 ${darkMode ? 'bg-gray-900 border-gray-700' : 'bg-white border-gray-100'}`}>\r\n          <div className=\"text-xs text-gray-400\">Overall Health</div>\r\n          <div className=\"text-3xl font-bold mt-2\">{overall}%</div>\r\n          <div className=\"mt-4 h-20\">\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <LineChart data={series} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n                <XAxis dataKey=\"date\" tickFormatter={(d)=> fmtShort(d)} />\r\n                <YAxis domain={[0,100]} />\r\n                <Tooltip formatter={(v) => `${v}%`} labelFormatter={(label) => (label ? fmtLong(label) : '')} />\r\n                {/* confidence band */}\r\n                <Area type=\"monotone\" dataKey=\"upper\" stroke={false} fill=\"#60A5FA\" fillOpacity={0.08} />\r\n                <Area type=\"monotone\" dataKey=\"lower\" stroke={false} fill=\"#60A5FA\" fillOpacity={0.08} />\r\n                <Line type=\"monotone\" dataKey=\"value\" stroke=\"#60A5FA\" strokeWidth={2} dot={false} />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={`rounded-2xl p-4 col-span-2 ${darkMode ? 'bg-gray-900 border-gray-700' : 'bg-white border-gray-100'}`}>\r\n          <div className=\"text-sm font-semibold\">System Score Cards</div>\r\n          <div className=\"mt-3 grid grid-cols-2 md:grid-cols-3 gap-3\">\r\n            {CANONICAL_SYSTEMS.map((s) => (\r\n              <div key={s.key} className={`p-3 rounded-lg border ${darkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-100'}`}>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"font-semibold\">{s.title}</div>\r\n                  <div className=\"text-xl font-bold\">{scores[s.key]}%</div>\r\n                </div>\r\n                <div className=\"text-xs text-gray-400 mt-2\">Quick insight: {s.description?.slice(0, 80)}</div>\r\n                <div className=\"mt-3 h-12\">\r\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                    <LineChart data={perSystemSeries[s.key] || []} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n                      <Tooltip formatter={(v) => `${v}%`} labelFormatter={(l)=> l ? fmtShort(l) : ''} />\r\n                      <Line type=\"monotone\" dataKey=\"value\" stroke=\"#34D399\" strokeWidth={2} dot={false} />\r\n                    </LineChart>\r\n                  </ResponsiveContainer>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"rounded-2xl p-4 mb-4\">\r\n        <h3 className=\"font-semibold\">Key Alerts</h3>\r\n        <div className=\"mt-2 text-sm text-gray-500\">No critical alerts (placeholder). Thresholds and predictive warnings will show here.</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * Canonical  {\r\n    key: 'orchestration',\r\n    title: 'Orchestration',\r\n    description: 'Development cycles, sprint planning, and continuous improvement',\r\n    icon: '🔄',\r\n    color: '#10B981', // emerald-500\r\n    order: 2\r\n  }, for C-Suite Partner Dashboard\r\n * \r\n * Defines the six core systems that form the assessment framework,\r\n * display metadata, and legacy key mapping for backwards compatibility.\r\n */\r\n\r\n// Six canonical systems with display metadata\r\nexport const CANONICAL_SYSTEMS = [\r\n  {\r\n    key: 'interdependency',\r\n    title: 'Interdependency',\r\n    description: 'Cross-functional collaboration and dependency management',\r\n    icon: '🔗',\r\n    color: '#3B82F6', // blue-500\r\n    order: 1\r\n  },\r\n  {\r\n    key: 'orchestration',\r\n    title: 'Orchestration',\r\n    description: 'Development cycles, sprint planning, and continuous improvement',\r\n    icon: '🔄',\r\n    color: '#10B981', // emerald-500\r\n    order: 2\r\n  },\r\n  {\r\n    key: 'investigation',\r\n    title: 'Investigation',\r\n    description: 'Data analysis, research, and discovery processes',\r\n    icon: '🔎',\r\n    color: '#F59E0B', // amber-500\r\n    order: 3\r\n  },\r\n  {\r\n    key: 'interpretation',\r\n    title: 'Interpretation',\r\n    description: 'Insight generation, decision-making, and strategic analysis',\r\n    icon: '💡',\r\n    color: '#8B5CF6', // violet-500\r\n    order: 4\r\n  },\r\n  {\r\n    key: 'illustration',\r\n    title: 'Illustration',\r\n    description: 'Communication, visualization, and knowledge sharing',\r\n    icon: '🔄',\r\n    color: '#EF4444', // red-500\r\n    order: 5\r\n  },\r\n  {\r\n    key: 'inlignment',\r\n    title: 'Inlignment',\r\n    description: 'Strategic coordination, goal setting, and organizational coherence',\r\n    icon: '🎯',\r\n    color: '#06B6D4', // cyan-500\r\n    order: 6\r\n  }\r\n];\r\n\r\n// Legacy system keys mapping to canonical keys for backwards compatibility\r\n// TODO: Remove legacy mappings after migration period (6 months)\r\nexport const LEGACY_TO_CANONICAL = {\r\n  // Legacy keys that need normalization\r\n  'orchestration': 'orchestration', // legacy iteration maps to orchestration\r\n  'inlignment': 'inlignment', // legacy ilignment maps to inlignment\r\n  \r\n  // Ensure canonical keys map to themselves\r\n  'interdependency': 'interdependency',\r\n  'orchestration': 'orchestration',\r\n  'investigation': 'investigation',\r\n  'interpretation': 'interpretation',\r\n  'illustration': 'illustration',\r\n  'inlignment': 'inlignment',\r\n  \r\n  // Additional legacy variations that might exist\r\n  'dependency': 'interdependency',\r\n  'dependencies': 'interdependency',\r\n  'analysis': 'investigation',\r\n  'research': 'investigation',\r\n  'insights': 'interpretation',\r\n  'reporting': 'illustration',\r\n  'visualization': 'illustration',\r\n  'coordination': 'inlignment',\r\n  'strategy': 'inlignment'\r\n};\r\n\r\n/**\r\n * Normalize a system key from legacy format to canonical format\r\n * @param {string} systemKey - Raw system key (possibly legacy)\r\n * @returns {string} Canonical system key\r\n */\r\nexport function normalizeSystemKey(systemKey) {\r\n  if (!systemKey || typeof systemKey !== 'string') {\r\n    return 'investigation'; // Default fallback\r\n  }\r\n  \r\n  const normalized = systemKey.toLowerCase().trim();\r\n  return LEGACY_TO_CANONICAL[normalized] || normalized;\r\n}\r\n\r\n/**\r\n * Get system metadata by canonical key\r\n * @param {string} systemKey - Canonical system key\r\n * @returns {object|null} System metadata or null if not found\r\n */\r\nexport function getSystemMetadata(systemKey) {\r\n  const canonical = normalizeSystemKey(systemKey);\r\n  return CANONICAL_SYSTEMS.find(s => s.key === canonical) || null;\r\n}\r\n\r\n/**\r\n * Get all systems formatted for UI display (sorted by order)\r\n * @returns {Array} Systems with UI metadata\r\n */\r\nexport function getSystemsForUI() {\r\n  return CANONICAL_SYSTEMS\r\n    .sort((a, b) => a.order - b.order)\r\n    .map(system => ({\r\n      id: system.key,\r\n      key: system.key,\r\n      title: system.title,\r\n      description: system.description,\r\n      icon: system.icon,\r\n      color: system.color\r\n    }));\r\n}\r\n\r\n/**\r\n * Validate if a system key is canonical\r\n * @param {string} systemKey - System key to validate\r\n * @returns {boolean} True if canonical, false otherwise\r\n */\r\nexport function isCanonicalSystem(systemKey) {\r\n  return CANONICAL_SYSTEMS.some(s => s.key === systemKey);\r\n}\r\n\r\n// Default system weights for org health calculation\r\n// TODO: Make these configurable per organization\r\nexport const DEFAULT_SYSTEM_WEIGHTS = {\r\n  'interdependency': 0.18,\r\n  'orchestration': 0.20,\r\n  'investigation': 0.16,\r\n  'interpretation': 0.18,\r\n  'illustration': 0.14,\r\n  'inlignment': 0.14\r\n};\r\n\r\n// Ensure weights sum to 1.0\r\nconst weightSum = Object.values(DEFAULT_SYSTEM_WEIGHTS).reduce((sum, w) => sum + w, 0);\r\nif (Math.abs(weightSum - 1.0) > 0.001) {\r\n  console.warn(`[systems.js] System weights sum to ${weightSum.toFixed(3)}, should be 1.0`);\r\n}\r\n\r\n// Organizational Health Framework Metadata\r\n// This positions our tool as an \"organizational doctor\" that provides\r\n// automated diagnosis beyond what ERP/BI platforms offer\r\nexport const FRAMEWORK_METADATA = {\r\n  name: 'ConseQ-X Organizational Health Assessment',\r\n  version: '1.0',\r\n  description: 'Automated organizational health analysis across six holistic systems',\r\n  differentiators: [\r\n    'Holistic organizational diagnosis beyond operational metrics',\r\n    'Automated analysis and recommendations vs manual BI configuration', \r\n    'Predictive and prescriptive insights vs descriptive reporting',\r\n    'Cultural and behavioral factors integrated with operational data',\r\n    'Purpose-built for organizational effectiveness vs generic analytics'\r\n  ],\r\n  targetGap: 'Bridges the space between operational ERP/BI data and strategic consulting insights',\r\n  useCases: [\r\n    'Post-merger integration assessment',\r\n    'Organizational transformation tracking',\r\n    'Performance turnaround monitoring',\r\n    'Continuous health monitoring for SMEs',\r\n    'Government agency effectiveness measurement'\r\n  ]\r\n};\r\n\r\n// Value proposition vs traditional platforms\r\nexport const COMPETITIVE_ADVANTAGES = {\r\n  vsERP: [\r\n    'Analyzes intangible dynamics like culture and collaboration',\r\n    'Provides narrative insights beyond transactional data',\r\n    'Ready-made organizational health model vs complex customization'\r\n  ],\r\n  vsBI: [\r\n    'Purpose-built framework vs empty canvas requiring expertise',\r\n    'Automated interpretation and recommendations vs manual analysis',\r\n    'Integrated organizational model vs piecemeal dashboard building'\r\n  ],\r\n  vsConsulting: [\r\n    'Continuous monitoring vs one-off assessments',\r\n    'Affordable software vs expensive consulting engagements',\r\n    'Real-time insights vs periodic reports'\r\n  ]\r\n};\r\n","import * as React from 'react';\nimport { forwardRef } from 'react';\nimport { arrayTooltipSearcher } from '../state/optionsSlice';\nimport { CartesianChart } from './CartesianChart';\nvar allowedTooltipTypes = ['axis'];\nexport var LineChart = /*#__PURE__*/forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(CartesianChart, {\n    chartName: \"LineChart\",\n    defaultTooltipEventType: \"axis\",\n    validateTooltipEventTypes: allowedTooltipTypes,\n    tooltipPayloadSearcher: arrayTooltipSearcher,\n    categoricalChartProps: props,\n    ref: ref\n  });\n});"],"names":["fmtShort","d","Date","toLocaleDateString","undefined","month","day","_unused","OverviewView","_outlet$darkMode","_outlet$dashboardMode","outlet","useOutletContext","darkMode","scores","setScores","dashboardMode","orgId","React","series","setSeries","perSystemSeries","setPerSystemSeries","bc","mounted","makeSeriesFromBase","base","tsBase","arguments","length","now","arr","i","ts","v","Math","max","min","floor","random","push","value","upper","lower","date","async","load","raw","localStorage","getItem","uploads","JSON","parse","_outlet$org","latest","byAssessRaw","assessments","org","id","reduce","acc","a","k","systemId","system","systemKey","score","scoresLocal","CANONICAL_SYSTEMS","s","key","round","Array","isArray","analyzedSystems","includes","overallBase","Object","values","b","keys","timestamp","per","forEach","res","fetch","ok","Error","data","json","overallSeries","map","_objectSpread","e","onStorage","window","addEventListener","BroadcastChannel","ev","_ev$data","type","_unused3","removeEventListener","close","_unused4","overall","_jsxs","children","className","concat","_jsx","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","XAxis","dataKey","tickFormatter","YAxis","domain","Tooltip","formatter","labelFormatter","label","toLocaleString","_unused2","fmtLong","Area","stroke","fill","fillOpacity","Line","strokeWidth","dot","_s$description","title","description","slice","l","icon","color","order","LEGACY_TO_CANONICAL","normalizeSystemKey","normalized","toLowerCase","trim","getSystemsForUI","sort","weightSum","sum","w","abs","console","warn","toFixed","allowedTooltipTypes","forwardRef","props","ref","CartesianChart","chartName","defaultTooltipEventType","validateTooltipEventTypes","tooltipPayloadSearcher","arrayTooltipSearcher","categoricalChartProps"],"sourceRoot":""}