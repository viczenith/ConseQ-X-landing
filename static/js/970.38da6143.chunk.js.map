{"version":3,"file":"static/js/970.38da6143.chunk.js","mappings":"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","sources":["pages/CEO_Dashboard/CEODashboardComponents/PartnerDashboard/SystemDeepDive.js","../node_modules/recharts/es6/chart/LineChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useOutletContext } from 'react-router-dom';\r\nimport { ResponsiveContainer, LineChart, Line, XAxis, YAxis, Tooltip, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar, BarChart, Bar, Legend } from 'recharts';\r\nimport { \r\n  FaSearch, FaChartLine, FaBrain, FaNetworkWired, FaExclamationTriangle, FaCheckCircle, \r\n  FaEye, FaTrendingUp, FaTrendingDown, FaArrowRight, FaLightbulb, FaCog, FaUsers, FaCogs \r\n} from 'react-icons/fa';\r\n\r\n// ConseQ-X Six Systems Model - Organizational Health Framework\r\nconst CORE_SYSTEMS = {\r\n  interdependency: {\r\n    name: 'Interdependency',\r\n    icon: '🔗',\r\n    color: '#3B82F6',\r\n    focus: 'Organizational Networks',\r\n    description: 'Cross-functional collaboration and dependency mapping',\r\n    capabilities: ['Dependency mapping', 'Bottleneck detection', 'Collaboration analysis'],\r\n    keyMetrics: ['Network Density', 'Collaboration Index', 'Communication Flow', 'Cross-functional Engagement']\r\n  },\r\n  iteration: {\r\n    name: 'Iteration', \r\n    icon: '🔄',\r\n    color: '#10B981',\r\n    focus: 'Adaptive Capacity',\r\n    description: 'Innovation velocity and continuous improvement cycles',\r\n    capabilities: ['Cycle analysis', 'Improvement tracking', 'Agility metrics'],\r\n    keyMetrics: ['Innovation Velocity', 'Feedback Loops', 'Adaptation Speed', 'Learning Rate']\r\n  },\r\n  investigation: {\r\n    name: 'Investigation',\r\n    icon: '🔍', \r\n    color: '#8B5CF6',\r\n    focus: 'Analytical Depth',\r\n    description: 'Root-cause analysis and pattern discovery capabilities',\r\n    capabilities: ['Root-cause analysis', 'Data quality assessment', 'Pattern discovery'],\r\n    keyMetrics: ['Analysis Quality', 'Problem Resolution', 'Data Accuracy', 'Insight Generation']\r\n  },\r\n  interpretation: {\r\n    name: 'Interpretation',\r\n    icon: '💡',\r\n    color: '#F59E0B',\r\n    focus: 'Intelligence Synthesis', \r\n    description: 'Decision quality and insight generation processes',\r\n    capabilities: ['Sentiment analysis', 'Decision tracking', 'Insight generation'],\r\n    keyMetrics: ['Decision Quality', 'Insight Accuracy', 'Intelligence Synthesis', 'Strategic Clarity']\r\n  },\r\n  illustration: {\r\n    name: 'Illustration',\r\n    icon: '📊',\r\n    color: '#EF4444',\r\n    focus: 'Information Flow',\r\n    description: 'Communication effectiveness and knowledge transfer',\r\n    capabilities: ['Communication analysis', 'Visualization quality', 'Knowledge transfer'],\r\n    keyMetrics: ['Communication Effectiveness', 'Information Clarity', 'Knowledge Transfer', 'Visual Impact']\r\n  },\r\n  alignment: {\r\n    name: 'Alignment',\r\n    icon: '🎯',\r\n    color: '#6366F1',\r\n    focus: 'Strategic Coherence',\r\n    description: 'Goal alignment and strategy execution coordination',\r\n    capabilities: ['Goal alignment', 'Strategy execution', 'Organizational synchronization'],\r\n    keyMetrics: ['Strategic Alignment', 'Goal Achievement', 'Coordination Index', 'Execution Quality']\r\n  }\r\n};\r\n\r\n// Advanced Cross-System Dependency Visualization\r\nfunction SystemDependencyNetwork({ systems, scores, darkMode }) {\r\n  const size = 400;\r\n  const cx = size / 2;\r\n  const cy = size / 2;\r\n  const r = 120;\r\n  \r\n  return (\r\n    <div className=\"relative\">\r\n      <svg width={size} height={size} className=\"block mx-auto\">\r\n        {/* Connection lines with strength indicators */}\r\n        {Object.keys(systems).map((systemKey, i) => {\r\n          const system = systems[systemKey];\r\n          const nextSystem = Object.keys(systems)[(i + 1) % Object.keys(systems).length];\r\n          \r\n          const angle1 = (i / Object.keys(systems).length) * Math.PI * 2 - Math.PI / 2;\r\n          const angle2 = (((i + 1) % Object.keys(systems).length) / Object.keys(systems).length) * Math.PI * 2 - Math.PI / 2;\r\n          \r\n          const x1 = cx + r * Math.cos(angle1);\r\n          const y1 = cy + r * Math.sin(angle1);\r\n          const x2 = cx + r * Math.cos(angle2);\r\n          const y2 = cy + r * Math.sin(angle2);\r\n          \r\n          const connectionStrength = (scores[systemKey] + scores[nextSystem]) / 200;\r\n          \r\n          return (\r\n            <line \r\n              key={`connection-${i}`}\r\n              x1={x1} y1={y1} x2={x2} y2={y2} \r\n              stroke={system.color} \r\n              strokeWidth={2 + connectionStrength * 3}\r\n              strokeOpacity={0.3 + connectionStrength * 0.4}\r\n              strokeDasharray={scores[systemKey] < 50 ? \"5,5\" : \"none\"}\r\n            />\r\n          );\r\n        })}\r\n        \r\n        {/* System nodes */}\r\n        {Object.entries(systems).map(([systemKey, system], i) => {\r\n          const angle = (i / Object.keys(systems).length) * Math.PI * 2 - Math.PI / 2;\r\n          const x = cx + r * Math.cos(angle);\r\n          const y = cy + r * Math.sin(angle);\r\n          const score = scores[systemKey] || 50;\r\n          \r\n          return (\r\n            <g key={systemKey} transform={`translate(${x},${y})`}>\r\n              {/* Outer ring for health status */}\r\n              <circle \r\n                r={32} \r\n                fill=\"none\" \r\n                stroke={system.color} \r\n                strokeWidth={4}\r\n                strokeOpacity={score >= 70 ? 1 : score >= 50 ? 0.7 : 0.4}\r\n              />\r\n              {/* Inner circle */}\r\n              <circle \r\n                r={25} \r\n                fill={system.color}\r\n                fillOpacity={0.1 + (score / 100) * 0.8}\r\n              />\r\n              {/* System icon/text */}\r\n              <text \r\n                x={0} y={-5} \r\n                textAnchor=\"middle\" \r\n                fontSize={16} \r\n                fill={system.color}\r\n              >\r\n                {system.icon}\r\n              </text>\r\n              <text \r\n                x={0} y={10} \r\n                textAnchor=\"middle\" \r\n                fontSize={10} \r\n                fill={darkMode ? '#E5E7EB' : '#374151'}\r\n                fontWeight=\"600\"\r\n              >\r\n                {score}%\r\n              </text>\r\n              {/* System name */}\r\n              <text \r\n                x={0} y={50} \r\n                textAnchor=\"middle\" \r\n                fontSize={10} \r\n                fill={darkMode ? '#9CA3AF' : '#6B7280'}\r\n              >\r\n                {system.name}\r\n              </text>\r\n            </g>\r\n          );\r\n        })}\r\n        \r\n        {/* Central health indicator */}\r\n        <g transform={`translate(${cx},${cy})`}>\r\n          <circle r={20} fill={darkMode ? '#1F2937' : '#F9FAFB'} stroke={darkMode ? '#374151' : '#D1D5DB'} strokeWidth={2} />\r\n          <text x={0} y={-5} textAnchor=\"middle\" fontSize={10} fill={darkMode ? '#9CA3AF' : '#6B7280'}>Org</text>\r\n          <text x={0} y={8} textAnchor=\"middle\" fontSize={10} fill={darkMode ? '#E5E7EB' : '#374151'} fontWeight=\"600\">\r\n            {Math.round(Object.values(scores).reduce((a, b) => a + b, 0) / Object.keys(scores).length)}%\r\n          </text>\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Advanced Root Cause Analysis Tree\r\nfunction IntelligentRootCauseAnalysis({ systemKey, score, darkMode }) {\r\n  const [selectedCause, setSelectedCause] = useState(null);\r\n  \r\n  const generateRootCauses = (systemKey, score) => {\r\n    const system = CORE_SYSTEMS[systemKey];\r\n    const causes = [];\r\n    \r\n    if (score < 50) {\r\n      causes.push({\r\n        id: `${systemKey}-low-1`,\r\n        category: 'Critical',\r\n        title: `${system.focus} Breakdown`,\r\n        impact: 'High',\r\n        probability: 0.8,\r\n        description: `Fundamental ${system.focus.toLowerCase()} processes are failing`,\r\n        rootCauses: [\r\n          'Lack of clear ownership and accountability',\r\n          'Insufficient measurement and feedback loops', \r\n          'Poor cross-functional communication',\r\n          'Inadequate resource allocation'\r\n        ],\r\n        recommendations: [\r\n          'Implement weekly ownership review sessions',\r\n          'Establish clear KPIs and measurement frameworks',\r\n          'Create cross-functional collaboration protocols',\r\n          'Reassess resource allocation priorities'\r\n        ]\r\n      });\r\n    }\r\n    \r\n    if (score < 70) {\r\n      causes.push({\r\n        id: `${systemKey}-med-1`,\r\n        category: 'Moderate',\r\n        title: `${system.name} Inefficiency`,\r\n        impact: 'Medium',\r\n        probability: 0.6,\r\n        description: `${system.description} showing suboptimal performance`,\r\n        rootCauses: [\r\n          'Process gaps in current workflows',\r\n          'Skills or capability misalignments',\r\n          'Technology or tool limitations',\r\n          'Cultural resistance to change'\r\n        ],\r\n        recommendations: [\r\n          'Conduct detailed process mapping and optimization',\r\n          'Implement targeted skill development programs',\r\n          'Evaluate and upgrade supporting tools',\r\n          'Launch change management initiatives'\r\n        ]\r\n      });\r\n    }\r\n    \r\n    return causes;\r\n  };\r\n  \r\n  const rootCauses = generateRootCauses(systemKey, score);\r\n  \r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {rootCauses.map((cause) => (\r\n        <div key={cause.id} className={`border rounded-lg ${darkMode ? 'border-gray-700' : 'border-gray-200'}`}>\r\n          <button \r\n            onClick={() => setSelectedCause(selectedCause === cause.id ? null : cause.id)}\r\n            className={`w-full p-4 text-left flex items-center justify-between hover:bg-opacity-50 transition-colors ${\r\n              cause.category === 'Critical' \r\n                ? (darkMode ? 'hover:bg-red-900/20' : 'hover:bg-red-50')\r\n                : (darkMode ? 'hover:bg-yellow-900/20' : 'hover:bg-yellow-50')\r\n            }`}\r\n          >\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className={`w-3 h-3 rounded-full ${\r\n                cause.category === 'Critical' ? 'bg-red-500' : 'bg-yellow-500'\r\n              }`} />\r\n              <div>\r\n                <div className=\"font-medium\">{cause.title}</div>\r\n                <div className=\"text-sm text-gray-500 mt-1\">{cause.description}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"text-right text-sm\">\r\n                <div className={`font-medium ${cause.category === 'Critical' ? 'text-red-600' : 'text-yellow-600'}`}>\r\n                  {cause.impact} Impact\r\n                </div>\r\n                <div className=\"text-gray-500\">{Math.round(cause.probability * 100)}% likelihood</div>\r\n              </div>\r\n              <FaArrowRight className={`transition-transform ${selectedCause === cause.id ? 'rotate-90' : ''}`} />\r\n            </div>\r\n          </button>\r\n          \r\n          {selectedCause === cause.id && (\r\n            <div className={`p-4 border-t ${darkMode ? 'border-gray-700 bg-gray-800/50' : 'border-gray-200 bg-gray-50'}`}>\r\n              <div className=\"grid md:grid-cols-2 gap-6\">\r\n                <div>\r\n                  <h4 className=\"font-medium mb-3 flex items-center gap-2\">\r\n                    <FaSearch className=\"text-blue-600\" />\r\n                    Root Causes\r\n                  </h4>\r\n                  <ul className=\"space-y-2\">\r\n                    {cause.rootCauses.map((rc, idx) => (\r\n                      <li key={idx} className=\"flex items-start gap-2 text-sm\">\r\n                        <span className=\"w-1.5 h-1.5 bg-blue-600 rounded-full mt-2 flex-shrink-0\" />\r\n                        <span>{rc}</span>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"font-medium mb-3 flex items-center gap-2\">\r\n                    <FaLightbulb className=\"text-green-600\" />\r\n                    Recommended Actions\r\n                  </h4>\r\n                  <ul className=\"space-y-2\">\r\n                    {cause.recommendations.map((rec, idx) => (\r\n                      <li key={idx} className=\"flex items-start gap-2 text-sm\">\r\n                        <span className=\"w-1.5 h-1.5 bg-green-600 rounded-full mt-2 flex-shrink-0\" />\r\n                        <span>{rec}</span>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Performance Trends Analysis Component\r\nfunction PerformanceTrendsAnalysis({ systemKey, historicalData, darkMode }) {\r\n  const system = CORE_SYSTEMS[systemKey];\r\n  \r\n  return (\r\n    <div className=\"h-64\">\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <LineChart data={historicalData}>\r\n          <XAxis \r\n            dataKey=\"date\" \r\n            tickFormatter={(d) => new Date(d).toLocaleDateString()}\r\n            stroke={darkMode ? '#9CA3AF' : '#6B7280'}\r\n          />\r\n          <YAxis \r\n            domain={[0, 100]}\r\n            stroke={darkMode ? '#9CA3AF' : '#6B7280'}\r\n          />\r\n          <Tooltip \r\n            labelFormatter={(l) => new Date(l).toLocaleDateString()}\r\n            formatter={(v, name) => [`${v}%`, name]}\r\n            contentStyle={{\r\n              backgroundColor: darkMode ? '#1F2937' : '#FFFFFF',\r\n              borderColor: darkMode ? '#374151' : '#D1D5DB',\r\n              color: darkMode ? '#E5E7EB' : '#374151'\r\n            }}\r\n          />\r\n          <Line \r\n            type=\"monotone\" \r\n            dataKey=\"value\" \r\n            stroke={system.color} \r\n            strokeWidth={3} \r\n            dot={{ fill: system.color, strokeWidth: 0, r: 4 }}\r\n            activeDot={{ r: 6, fill: system.color }}\r\n          />\r\n          <Line \r\n            type=\"monotone\" \r\n            dataKey=\"benchmark\" \r\n            stroke={darkMode ? '#6B7280' : '#9CA3AF'} \r\n            strokeWidth={2} \r\n            strokeDasharray=\"5,5\"\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\n// System keys for the six core systems\r\nconst SYSTEM_KEYS = ['interdependency', 'iteration', 'investigation', 'interpretation', 'illustration', 'inlignment'];\r\n\r\n// Simple Dependency Map Component\r\nconst SimpleDependencyMap = ({ systems, scores }) => {\r\n  return (\r\n    <div className=\"w-full h-full flex items-center justify-center\">\r\n      <div className=\"grid grid-cols-3 gap-4\">\r\n        {systems.slice(0, 6).map((system, idx) => {\r\n          const score = scores[system.key] || 0;\r\n          const color = score > 70 ? '#10B981' : score > 50 ? '#F59E0B' : '#EF4444';\r\n          return (\r\n            <div key={system.key} className=\"text-center\">\r\n              <div \r\n                className=\"w-12 h-12 rounded-full flex items-center justify-center text-white text-xs font-bold mx-auto\"\r\n                style={{ backgroundColor: color }}\r\n              >\r\n                {system.key.charAt(0).toUpperCase()}\r\n              </div>\r\n              <div className=\"text-xs mt-1 text-gray-600\">{score}%</div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Root Cause Tree Component\r\nconst RootCauseTree = ({ rootCauses }) => {\r\n  return (\r\n    <div className=\"space-y-3\">\r\n      {rootCauses.map((cause, idx) => (\r\n        <div key={idx} className=\"border-l-2 border-red-300 pl-3\">\r\n          <div className=\"font-medium text-sm\">{cause.title}</div>\r\n          <div className=\"text-xs text-gray-500 mt-1\">\r\n            Impact: <span className={`px-1 py-0.5 rounded text-xs ${\r\n              cause.impact === 'high' ? 'bg-red-100 text-red-700' :\r\n              cause.impact === 'medium' ? 'bg-yellow-100 text-yellow-700' :\r\n              'bg-green-100 text-green-700'\r\n            }`}>{cause.impact}</span>\r\n          </div>\r\n          <ul className=\"text-xs text-gray-600 mt-2 space-y-1\">\r\n            {cause.causes.map((c, i) => (\r\n              <li key={i}>• {c}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function SystemDeepDive() {\r\n  const outlet = useOutletContext();\r\n  const darkMode = outlet?.darkMode ?? false;\r\n  \r\n  const [selectedSystem, setSelectedSystem] = useState('interdependency');\r\n  const [analysisMode, setAnalysisMode] = useState('organizational_intelligence'); // organizational_intelligence, predictive_health, cross_dependencies, transformation_readiness\r\n  const [scores, setScores] = useState({});\r\n  const [historicalData, setHistoricalData] = useState({});\r\n  const [crossSystemInsights, setCrossSystemInsights] = useState([]);\r\n  const [organizationalIntelligence, setOrganizationalIntelligence] = useState({});\r\n  const [predictiveHealth, setPredictiveHealth] = useState({});\r\n  const [transformationReadiness, setTransformationReadiness] = useState({});\r\n\r\n  // Advanced Organizational Health Analytics Engine\r\n  const generateAdvancedOrganizationalData = () => {\r\n    const baseScores = {\r\n      interdependency: 72,\r\n      iteration: 68, \r\n      investigation: 45,\r\n      interpretation: 78,\r\n      illustration: 63,\r\n      alignment: 52\r\n    };\r\n    \r\n    // Generate organizational intelligence metrics\r\n    const orgIntelligence = {\r\n      collaboration_index: 78,\r\n      innovation_velocity: 65,\r\n      communication_effectiveness: 82,\r\n      overall_culture_health: 75,\r\n      decision_quality: 68,\r\n      knowledge_transfer: 71,\r\n      strategic_coherence: 59,\r\n      change_readiness: 63,\r\n      leadership_effectiveness: 81\r\n    };\r\n\r\n    // Generate predictive health forecast\r\n    const healthForecast = {\r\n      current_health: Math.round(Object.values(baseScores).reduce((a, b) => a + b, 0) / Object.keys(baseScores).length),\r\n      next_30_days: 74,\r\n      risk_areas: [\r\n        { system: 'investigation', risk_level: 'high', probability: 0.85 },\r\n        { system: 'alignment', risk_level: 'moderate', probability: 0.65 }\r\n      ],\r\n      improvement_opportunities: [\r\n        { system: 'interpretation', leverage_potential: 'high', impact_score: 92 },\r\n        { system: 'interdependency', leverage_potential: 'medium', impact_score: 78 }\r\n      ],\r\n      cultural_health_trend: 'improving',\r\n      organizational_velocity: 'moderate'\r\n    };\r\n\r\n    // Generate transformation readiness assessment\r\n    const transformationReadiness = {\r\n      overall_score: 67,\r\n      leadership_commitment: 85,\r\n      organizational_capability: 62,\r\n      change_capacity: 58,\r\n      cultural_alignment: 71,\r\n      resource_availability: 54,\r\n      communication_infrastructure: 76,\r\n      feedback_mechanisms: 63,\r\n      readiness_factors: [\r\n        { factor: 'Leadership Alignment', score: 85, status: 'strong' },\r\n        { factor: 'Change Champions Network', score: 72, status: 'moderate' },\r\n        { factor: 'Process Adaptability', score: 58, status: 'needs_attention' },\r\n        { factor: 'Cultural Openness', score: 71, status: 'moderate' },\r\n        { factor: 'Resource Mobilization', score: 54, status: 'needs_attention' }\r\n      ]\r\n    };\r\n    \r\n    // Generate 90-day historical data with advanced patterns\r\n    const historical = {};\r\n    Object.keys(baseScores).forEach(systemKey => {\r\n      const data = [];\r\n      for (let i = 89; i >= 0; i--) {\r\n        const date = new Date();\r\n        date.setDate(date.getDate() - i);\r\n        const baseValue = baseScores[systemKey];\r\n        \r\n        // Add realistic organizational patterns\r\n        const weeklyPattern = Math.sin((i / 7) * Math.PI) * 3; // Weekly fluctuations\r\n        const monthlyTrend = (89 - i) * 0.1; // Slight improvement over time\r\n        const seasonalVariation = Math.cos((i / 30) * Math.PI) * 2; // Monthly cycles\r\n        const variation = (Math.random() - 0.5) * 8; // Random variation\r\n        \r\n        data.push({\r\n          date: date.getTime(),\r\n          value: Math.max(0, Math.min(100, baseValue + variation + weeklyPattern + monthlyTrend + seasonalVariation)),\r\n          benchmark: 75, // Industry benchmark\r\n          prediction: Math.max(0, Math.min(100, baseValue + monthlyTrend + 5)), // Future prediction\r\n          confidence: Math.min(1, 0.5 + (89 - i) / 180) // Increasing confidence\r\n        });\r\n      }\r\n      historical[systemKey] = data;\r\n    });\r\n    \r\n    return { \r\n      baseScores, \r\n      historical, \r\n      orgIntelligence, \r\n      healthForecast, \r\n      transformationReadiness \r\n    };\r\n  };\r\n\r\n  // Generate cross-system insights using AI-like analysis\r\n  const generateCrossSystemInsights = (scores) => {\r\n    const insights = [];\r\n    \r\n    // Identify critical dependencies\r\n    const lowPerformingSystems = Object.entries(scores).filter(([_, score]) => score < 60);\r\n    const highPerformingSystems = Object.entries(scores).filter(([_, score]) => score >= 75);\r\n    \r\n    if (lowPerformingSystems.length > 0) {\r\n      insights.push({\r\n        type: 'critical',\r\n        title: 'System Dependencies at Risk',\r\n        description: `Low performance in ${lowPerformingSystems.map(([name]) => CORE_SYSTEMS[name].name).join(', ')} is creating bottlenecks across the organization.`,\r\n        impact: 'High',\r\n        recommendation: 'Implement immediate intervention protocols for underperforming systems.',\r\n        affectedSystems: lowPerformingSystems.map(([name]) => name)\r\n      });\r\n    }\r\n    \r\n    if (highPerformingSystems.length > 0) {\r\n      insights.push({\r\n        type: 'opportunity',\r\n        title: 'Leverage High-Performing Systems',\r\n        description: `Strong performance in ${highPerformingSystems.map(([name]) => CORE_SYSTEMS[name].name).join(', ')} can be leveraged to improve weaker areas.`,\r\n        impact: 'Medium',\r\n        recommendation: 'Create cross-system improvement initiatives using high-performing areas as anchors.',\r\n        affectedSystems: highPerformingSystems.map(([name]) => name)\r\n      });\r\n    }\r\n    \r\n    // Cultural health assessment\r\n    const culturalScore = (scores.interpretation + scores.illustration + scores.alignment) / 3;\r\n    if (culturalScore < 60) {\r\n      insights.push({\r\n        type: 'cultural',\r\n        title: 'Cultural Transformation Required',\r\n        description: 'Communication, interpretation, and alignment systems suggest cultural challenges that need executive attention.',\r\n        impact: 'High',\r\n        recommendation: 'Launch comprehensive cultural transformation program with leadership alignment.',\r\n        affectedSystems: ['interpretation', 'illustration', 'alignment']\r\n      });\r\n    }\r\n    \r\n    return insights;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Load or generate advanced organizational data\r\n    const { \r\n      baseScores, \r\n      historical, \r\n      orgIntelligence, \r\n      healthForecast, \r\n      transformationReadiness \r\n    } = generateAdvancedOrganizationalData();\r\n    \r\n    setScores(baseScores);\r\n    setHistoricalData(historical);\r\n    setOrganizationalIntelligence(orgIntelligence);\r\n    setPredictiveHealth(healthForecast);\r\n    setTransformationReadiness(transformationReadiness);\r\n    setCrossSystemInsights(generateCrossSystemInsights(baseScores));\r\n  }, []);\r\n\r\n  // Get current system data\r\n  const currentSystem = CORE_SYSTEMS[selectedSystem];\r\n  const currentScore = scores[selectedSystem] || 0;\r\n\r\n  // Generate orchestration trend data with predictions\r\n  const orchestrationSeries = (historicalData[selectedSystem] || []).slice(-30).map(item => ({\r\n    date: new Date(item.date).toLocaleDateString(),\r\n    actual: item.value,\r\n    benchmark: item.benchmark,\r\n    prediction: item.prediction,\r\n    confidence: item.confidence\r\n  }));\r\n\r\n  // Enhanced root causes analysis\r\n  const rootCauses = SYSTEM_KEYS\r\n    .filter(key => scores[key] < 70)\r\n    .map(key => ({\r\n      title: CORE_SYSTEMS[key]?.name || key,\r\n      system_key: key,\r\n      current_score: scores[key],\r\n      impact: scores[key] >= 50 ? 'medium' : 'high',\r\n      urgency: scores[key] < 45 ? 'critical' : scores[key] < 60 ? 'high' : 'medium',\r\n      root_causes: [\r\n        `${CORE_SYSTEMS[key]?.focus} processes showing degradation`,\r\n        'Cross-functional coordination gaps identified',\r\n        'Resource allocation misalignment detected',\r\n        'Cultural resistance patterns emerging'\r\n      ],\r\n      business_impact: [\r\n        'Reduced organizational velocity',\r\n        'Increased operational friction',\r\n        'Stakeholder confidence erosion',\r\n        'Strategic execution delays'\r\n      ],\r\n      recommended_interventions: [\r\n        `Implement ${CORE_SYSTEMS[key]?.focus.toLowerCase()} optimization protocols`,\r\n        'Launch targeted capability development programs',\r\n        'Establish cross-system coordination mechanisms',\r\n        'Deploy cultural transformation initiatives'\r\n      ]\r\n    }));\r\n\r\n  // Render advanced analysis modes\r\n  const renderAnalysisMode = () => {\r\n    switch (analysisMode) {\r\n      case 'organizational_intelligence':\r\n        return (\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-6\">\r\n            {/* Organizational Intelligence Panel */}\r\n            <div className={`rounded-2xl p-6 ${darkMode ? 'bg-gradient-to-br from-blue-900/20 to-purple-900/20 border-blue-700/50' : 'bg-gradient-to-br from-blue-50 to-purple-50 border-blue-200'} border`}>\r\n              <div className=\"flex items-center gap-3 mb-4\">\r\n                <div className=\"w-10 h-10 rounded-full bg-blue-600 flex items-center justify-center\">\r\n                  <FaCog className=\"text-white\" />\r\n                </div>\r\n                <h4 className=\"text-lg font-semibold\">🧠 Organizational Intelligence</h4>\r\n              </div>\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                {Object.entries(organizationalIntelligence).map(([key, value]) => (\r\n                  <div key={key} className={`p-3 rounded-lg ${darkMode ? 'bg-gray-800/50' : 'bg-white/80'}`}>\r\n                    <div className=\"text-sm text-gray-500 capitalize\">{key.replace(/_/g, ' ')}</div>\r\n                    <div className=\"text-2xl font-bold mt-1 flex items-center gap-2\">\r\n                      {value}%\r\n                      <div className={`w-2 h-2 rounded-full ${value >= 75 ? 'bg-green-500' : value >= 60 ? 'bg-yellow-500' : 'bg-red-500'}`} />\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Cultural Analytics Deep Dive */}\r\n            <div className={`rounded-2xl p-6 ${darkMode ? 'bg-gradient-to-br from-green-900/20 to-teal-900/20 border-green-700/50' : 'bg-gradient-to-br from-green-50 to-teal-50 border-green-200'} border`}>\r\n              <div className=\"flex items-center gap-3 mb-4\">\r\n                <div className=\"w-10 h-10 rounded-full bg-green-600 flex items-center justify-center\">\r\n                  <FaUsers className=\"text-white\" />\r\n                </div>\r\n                <h4 className=\"text-lg font-semibold\">🎭 Cultural Analytics</h4>\r\n              </div>\r\n              <div className=\"space-y-4\">\r\n                <div className={`p-4 rounded-lg ${darkMode ? 'bg-gray-800/50' : 'bg-white/80'}`}>\r\n                  <div className=\"text-sm font-medium mb-2\">Innovation Velocity Index</div>\r\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                    <div \r\n                      className=\"bg-gradient-to-r from-orange-400 to-red-500 h-2 rounded-full transition-all duration-1000\"\r\n                      style={{ width: `${organizationalIntelligence.innovation_velocity}%` }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"text-xs text-gray-500 mt-1\">\r\n                    {organizationalIntelligence.innovation_velocity >= 70 ? 'High innovation capacity' : \r\n                     organizationalIntelligence.innovation_velocity >= 50 ? 'Moderate innovation flow' : 'Innovation bottlenecks detected'}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className={`p-4 rounded-lg ${darkMode ? 'bg-gray-800/50' : 'bg-white/80'}`}>\r\n                  <div className=\"text-sm font-medium mb-2\">Communication Effectiveness</div>\r\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                    <div \r\n                      className=\"bg-gradient-to-r from-blue-400 to-purple-500 h-2 rounded-full transition-all duration-1000\"\r\n                      style={{ width: `${organizationalIntelligence.communication_effectiveness}%` }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"text-xs text-gray-500 mt-1\">\r\n                    Cross-functional information flow analysis\r\n                  </div>\r\n                </div>\r\n\r\n                <div className={`p-4 rounded-lg ${darkMode ? 'bg-gray-800/50' : 'bg-white/80'}`}>\r\n                  <div className=\"text-sm font-medium mb-2\">Decision Quality Analytics</div>\r\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                    <div \r\n                      className=\"bg-gradient-to-r from-indigo-400 to-blue-500 h-2 rounded-full transition-all duration-1000\"\r\n                      style={{ width: `${organizationalIntelligence.decision_quality}%` }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"text-xs text-gray-500 mt-1\">\r\n                    Decision tracking & outcome correlation\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'predictive_health':\r\n        return (\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mt-6\">\r\n            {/* Health Forecast */}\r\n            <div className={`rounded-2xl p-6 ${darkMode ? 'bg-gradient-to-br from-purple-900/20 to-pink-900/20 border-purple-700/50' : 'bg-gradient-to-br from-purple-50 to-pink-50 border-purple-200'} border`}>\r\n              <div className=\"flex items-center gap-3 mb-4\">\r\n                <div className=\"w-10 h-10 rounded-full bg-purple-600 flex items-center justify-center\">\r\n                  <FaChartLine className=\"text-white\" />\r\n                </div>\r\n                <h4 className=\"text-lg font-semibold\">🔮 Predictive Health Forecast</h4>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <div className=\"text-4xl font-bold text-purple-600 mb-2\">{predictiveHealth.next_30_days}%</div>\r\n                <div className=\"text-sm text-gray-500\">30-Day Health Projection</div>\r\n                <div className={`mt-4 p-3 rounded-lg ${darkMode ? 'bg-gray-800/50' : 'bg-white/80'}`}>\r\n                  <div className=\"text-xs text-gray-500\">Trend: {predictiveHealth.cultural_health_trend}</div>\r\n                  <div className=\"text-xs text-gray-500\">Velocity: {predictiveHealth.organizational_velocity}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Risk Areas */}\r\n            <div className={`rounded-2xl p-6 ${darkMode ? 'bg-gradient-to-br from-red-900/20 to-orange-900/20 border-red-700/50' : 'bg-gradient-to-br from-red-50 to-orange-50 border-red-200'} border`}>\r\n              <div className=\"flex items-center gap-3 mb-4\">\r\n                <div className=\"w-10 h-10 rounded-full bg-red-600 flex items-center justify-center\">\r\n                  <FaExclamationTriangle className=\"text-white\" />\r\n                </div>\r\n                <h4 className=\"text-lg font-semibold\">⚠️ Risk Areas</h4>\r\n              </div>\r\n              <div className=\"space-y-3\">\r\n                {predictiveHealth.risk_areas?.map((risk, idx) => (\r\n                  <div key={idx} className={`p-3 rounded-lg ${darkMode ? 'bg-gray-800/50' : 'bg-white/80'}`}>\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"font-medium capitalize\">{risk.system.replace('_', ' ')}</div>\r\n                      <div className={`px-2 py-1 rounded text-xs ${\r\n                        risk.risk_level === 'high' ? 'bg-red-100 text-red-700' : 'bg-yellow-100 text-yellow-700'\r\n                      }`}>\r\n                        {risk.risk_level}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-xs text-gray-500 mt-1\">\r\n                      {Math.round(risk.probability * 100)}% probability\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Improvement Opportunities */}\r\n            <div className={`rounded-2xl p-6 ${darkMode ? 'bg-gradient-to-br from-green-900/20 to-emerald-900/20 border-green-700/50' : 'bg-gradient-to-br from-green-50 to-emerald-50 border-green-200'} border`}>\r\n              <div className=\"flex items-center gap-3 mb-4\">\r\n                <div className=\"w-10 h-10 rounded-full bg-green-600 flex items-center justify-center\">\r\n                  <FaLightbulb className=\"text-white\" />\r\n                </div>\r\n                <h4 className=\"text-lg font-semibold\">💡 Leverage Opportunities</h4>\r\n              </div>\r\n              <div className=\"space-y-3\">\r\n                {predictiveHealth.improvement_opportunities?.map((opp, idx) => (\r\n                  <div key={idx} className={`p-3 rounded-lg ${darkMode ? 'bg-gray-800/50' : 'bg-white/80'}`}>\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"font-medium capitalize\">{opp.system.replace('_', ' ')}</div>\r\n                      <div className={`px-2 py-1 rounded text-xs ${\r\n                        opp.leverage_potential === 'high' ? 'bg-green-100 text-green-700' : 'bg-blue-100 text-blue-700'\r\n                      }`}>\r\n                        {opp.leverage_potential}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-xs text-gray-500 mt-1\">\r\n                      Impact Score: {opp.impact_score}/100\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'cross_dependencies':\r\n        return (\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-6\">\r\n            {/* Advanced Dependency Network */}\r\n            <div className={`rounded-2xl p-6 ${darkMode ? 'bg-gray-800/50 border-gray-700' : 'bg-white border-gray-200'} border`}>\r\n              <div className=\"flex items-center gap-3 mb-4\">\r\n                <FaNetworkWired className=\"text-blue-600\" />\r\n                <h4 className=\"text-lg font-semibold\">🕸️ System Dependencies Network</h4>\r\n              </div>\r\n              <SystemDependencyNetwork systems={CORE_SYSTEMS} scores={scores} darkMode={darkMode} />\r\n            </div>\r\n\r\n            {/* Cross-System Impact Analysis */}\r\n            <div className={`rounded-2xl p-6 ${darkMode ? 'bg-gray-800/50 border-gray-700' : 'bg-white border-gray-200'} border`}>\r\n              <div className=\"flex items-center gap-3 mb-4\">\r\n                <FaSearch className=\"text-purple-600\" />\r\n                <h4 className=\"text-lg font-semibold\">🔍 Cross-System Insights</h4>\r\n              </div>\r\n              <div className=\"space-y-4\">\r\n                {crossSystemInsights.map((insight, idx) => (\r\n                  <div key={idx} className={`p-4 rounded-lg border-l-4 ${\r\n                    insight.type === 'critical' \r\n                      ? `border-red-500 ${darkMode ? 'bg-red-900/20' : 'bg-red-50'}` :\r\n                    insight.type === 'opportunity' \r\n                      ? `border-green-500 ${darkMode ? 'bg-green-900/20' : 'bg-green-50'}` :\r\n                      `border-yellow-500 ${darkMode ? 'bg-yellow-900/20' : 'bg-yellow-50'}`\r\n                  }`}>\r\n                    <div className={`font-medium text-sm mb-2 ${\r\n                      insight.type === 'critical' \r\n                        ? `${darkMode ? 'text-red-300' : 'text-red-800'}` :\r\n                      insight.type === 'opportunity' \r\n                        ? `${darkMode ? 'text-green-300' : 'text-green-800'}` :\r\n                        `${darkMode ? 'text-yellow-300' : 'text-yellow-800'}`\r\n                    }`}>{insight.title}</div>\r\n                    <div className={`text-xs mb-2 ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>{insight.description}</div>\r\n                    <div className={`text-xs font-medium ${darkMode ? 'text-gray-200' : 'text-gray-800'}`}>{insight.recommendation}</div>\r\n                    <div className=\"flex gap-1 mt-2\">\r\n                      {insight.affectedSystems?.map((system, i) => (\r\n                        <span key={i} className={`px-2 py-1 text-xs rounded ${\r\n                          darkMode \r\n                            ? 'bg-blue-900/30 text-blue-200' \r\n                            : 'bg-blue-100 text-blue-800'\r\n                        }`}>\r\n                          {CORE_SYSTEMS[system]?.name || system}\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'transformation_readiness':\r\n        return (\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mt-6\">\r\n            {/* Overall Readiness Score */}\r\n            <div className={`rounded-2xl p-6 ${darkMode ? 'bg-gradient-to-br from-indigo-900/20 to-blue-900/20 border-indigo-700/50' : 'bg-gradient-to-br from-indigo-50 to-blue-50 border-indigo-200'} border`}>\r\n              <div className=\"flex items-center gap-3 mb-4\">\r\n                <div className=\"w-10 h-10 rounded-full bg-indigo-600 flex items-center justify-center\">\r\n                  <FaCogs className=\"text-white\" />\r\n                </div>\r\n                <h4 className=\"text-lg font-semibold\">🚀 Transformation Readiness</h4>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <div className=\"text-5xl font-bold text-indigo-600 mb-2\">{transformationReadiness.overall_score}%</div>\r\n                <div className=\"text-sm text-gray-500 mb-4\">Overall Readiness Score</div>\r\n                <div className=\"grid grid-cols-2 gap-2 text-xs\">\r\n                  <div className={`p-2 rounded ${darkMode ? 'bg-gray-800/50' : 'bg-white/80'}`}>\r\n                    <div>Leadership</div>\r\n                    <div className=\"font-bold text-green-600\">{transformationReadiness.leadership_commitment}%</div>\r\n                  </div>\r\n                  <div className={`p-2 rounded ${darkMode ? 'bg-gray-800/50' : 'bg-white/80'}`}>\r\n                    <div>Capability</div>\r\n                    <div className=\"font-bold text-blue-600\">{transformationReadiness.organizational_capability}%</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Readiness Factors */}\r\n            <div className={`col-span-2 rounded-2xl p-6 ${darkMode ? 'bg-gray-800/50 border-gray-700' : 'bg-white border-gray-200'} border`}>\r\n              <div className=\"flex items-center gap-3 mb-4\">\r\n                <FaCheckCircle className=\"text-green-600\" />\r\n                <h4 className=\"text-lg font-semibold\">📊 Readiness Factors Analysis</h4>\r\n              </div>\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                {transformationReadiness.readiness_factors?.map((factor, idx) => (\r\n                  <div key={idx} className={`p-4 rounded-lg ${darkMode ? 'bg-gray-700/50' : 'bg-gray-50'}`}>\r\n                    <div className=\"flex items-center justify-between mb-2\">\r\n                      <div className=\"font-medium text-sm\">{factor.factor}</div>\r\n                      <div className={`px-2 py-1 rounded text-xs ${\r\n                        factor.status === 'strong' ? 'bg-green-100 text-green-700' :\r\n                        factor.status === 'moderate' ? 'bg-yellow-100 text-yellow-700' :\r\n                        'bg-red-100 text-red-700'\r\n                      }`}>\r\n                        {factor.status.replace('_', ' ')}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"w-full bg-gray-200 rounded-full h-2 mb-2\">\r\n                      <div \r\n                        className={`h-2 rounded-full transition-all duration-1000 ${\r\n                          factor.status === 'strong' ? 'bg-green-500' :\r\n                          factor.status === 'moderate' ? 'bg-yellow-500' :\r\n                          'bg-red-500'\r\n                        }`}\r\n                        style={{ width: `${factor.score}%` }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"text-xs text-gray-500\">{factor.score}% readiness</div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mt-6\">\r\n            <IntelligentRootCauseAnalysis systemKey={selectedSystem} score={currentScore} darkMode={darkMode} />\r\n            <PerformanceTrendsAnalysis systemKey={selectedSystem} historicalData={orchestrationSeries} darkMode={darkMode} />\r\n            <SystemDependencyNetwork systems={CORE_SYSTEMS} scores={scores} darkMode={darkMode} />\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header with ConseQ-X Branding */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h3 className={`text-2xl font-bold ${darkMode ? 'text-gray-100': 'text-gray-900'}`}>\r\n            🏥 ConseQ-X Deep Dive Analysis\r\n          </h3>\r\n          <p className={`text-sm ${darkMode ? 'text-gray-400' : 'text-gray-600'} mt-1`}>\r\n            Your Organization's Health Partner - Advanced Diagnostic Intelligence\r\n          </p>\r\n        </div>\r\n        <div className={`px-4 py-2 rounded-full ${darkMode ? 'bg-blue-900/30 text-blue-300' : 'bg-blue-100 text-blue-700'} text-sm font-medium`}>\r\n          Overall Health: {Math.round(Object.values(scores).reduce((a, b) => a + b, 0) / Object.keys(scores).length)}%\r\n        </div>\r\n      </div>\r\n\r\n      {/* Analysis Mode Selector */}\r\n      <div className=\"flex flex-wrap gap-2\">\r\n        {[\r\n          { key: 'organizational_intelligence', label: '🧠 Organizational Intelligence', color: 'blue' },\r\n          { key: 'predictive_health', label: '🔮 Predictive Health', color: 'purple' },\r\n          { key: 'cross_dependencies', label: '🕸️ Cross Dependencies', color: 'green' },\r\n          { key: 'transformation_readiness', label: '🚀 Transformation Readiness', color: 'indigo' }\r\n        ].map(mode => (\r\n          <button\r\n            key={mode.key}\r\n            onClick={() => setAnalysisMode(mode.key)}\r\n            className={`px-4 py-2 rounded-lg text-sm font-medium transition-all ${\r\n              analysisMode === mode.key\r\n                ? `bg-${mode.color}-600 text-white shadow-lg`\r\n                : darkMode \r\n                  ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' \r\n                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n            }`}\r\n          >\r\n            {mode.label}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Dynamic Analysis Content */}\r\n      {renderAnalysisMode()}\r\n\r\n      {/* Advanced Root Cause Analysis */}\r\n      {rootCauses.length > 0 && (\r\n        <div className={`rounded-2xl p-6 ${darkMode ? 'bg-gradient-to-br from-red-900/20 to-orange-900/20 border-red-700/50' : 'bg-gradient-to-br from-red-50 to-orange-50 border-red-200'} border`}>\r\n          <div className=\"flex items-center gap-3 mb-4\">\r\n            <div className=\"w-10 h-10 rounded-full bg-red-600 flex items-center justify-center\">\r\n              <FaExclamationTriangle className=\"text-white\" />\r\n            </div>\r\n            <h4 className=\"text-lg font-semibold\">🔬 Advanced Root Cause Analysis</h4>\r\n          </div>\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            {rootCauses.map((cause, idx) => (\r\n              <div key={idx} className={`p-6 rounded-xl ${darkMode ? 'bg-gray-800/50' : 'bg-white/80'} border-l-4 border-red-500`}>\r\n                <div className=\"flex items-center justify-between mb-3\">\r\n                  <div className=\"font-bold text-lg\">{cause.title}</div>\r\n                  <div className={`px-3 py-1 rounded-full text-xs font-medium ${\r\n                    cause.urgency === 'critical' ? 'bg-red-100 text-red-700' :\r\n                    cause.urgency === 'high' ? 'bg-orange-100 text-orange-700' :\r\n                    'bg-yellow-100 text-yellow-700'\r\n                  }`}>\r\n                    {cause.urgency} urgency\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-sm text-gray-600 dark:text-gray-300 mb-4\">\r\n                  Current Score: <span className=\"font-bold text-red-600\">{cause.current_score}%</span>\r\n                </div>\r\n                \r\n                {/* Root Causes */}\r\n                <div className=\"mb-4\">\r\n                  <div className=\"text-sm font-medium mb-2 flex items-center gap-2\">\r\n                    <FaSearch className=\"text-blue-600\" />\r\n                    Identified Root Causes\r\n                  </div>\r\n                  <ul className=\"space-y-1\">\r\n                    {cause.root_causes.map((rc, i) => (\r\n                      <li key={i} className=\"text-xs text-gray-600 dark:text-gray-400 flex items-start gap-2\">\r\n                        <span className=\"w-1.5 h-1.5 bg-blue-500 rounded-full mt-2 flex-shrink-0\" />\r\n                        {rc}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n\r\n                {/* Business Impact */}\r\n                <div className=\"mb-4\">\r\n                  <div className=\"text-sm font-medium mb-2 flex items-center gap-2\">\r\n                    <FaExclamationTriangle className=\"text-orange-600\" />\r\n                    Business Impact\r\n                  </div>\r\n                  <ul className=\"space-y-1\">\r\n                    {cause.business_impact.map((impact, i) => (\r\n                      <li key={i} className=\"text-xs text-gray-600 dark:text-gray-400 flex items-start gap-2\">\r\n                        <span className=\"w-1.5 h-1.5 bg-orange-500 rounded-full mt-2 flex-shrink-0\" />\r\n                        {impact}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n\r\n                {/* Recommended Interventions */}\r\n                <div>\r\n                  <div className=\"text-sm font-medium mb-2 flex items-center gap-2\">\r\n                    <FaLightbulb className=\"text-green-600\" />\r\n                    Recommended Interventions\r\n                  </div>\r\n                  <ul className=\"space-y-1\">\r\n                    {cause.recommended_interventions.map((intervention, i) => (\r\n                      <li key={i} className=\"text-xs text-gray-600 dark:text-gray-400 flex items-start gap-2\">\r\n                        <span className=\"w-1.5 h-1.5 bg-green-500 rounded-full mt-2 flex-shrink-0\" />\r\n                        {intervention}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\nimport { forwardRef } from 'react';\nimport { arrayTooltipSearcher } from '../state/optionsSlice';\nimport { CartesianChart } from './CartesianChart';\nvar allowedTooltipTypes = ['axis'];\nexport var LineChart = /*#__PURE__*/forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(CartesianChart, {\n    chartName: \"LineChart\",\n    defaultTooltipEventType: \"axis\",\n    validateTooltipEventTypes: allowedTooltipTypes,\n    tooltipPayloadSearcher: arrayTooltipSearcher,\n    categoricalChartProps: props,\n    ref: ref\n  });\n});"],"names":["CORE_SYSTEMS","interdependency","name","icon","color","focus","description","capabilities","keyMetrics","iteration","investigation","interpretation","illustration","alignment","SystemDependencyNetwork","_ref","systems","scores","darkMode","size","cx","cy","r","_jsx","className","children","_jsxs","width","height","Object","keys","map","systemKey","i","system","nextSystem","length","angle1","Math","PI","angle2","x1","cos","y1","sin","x2","y2","connectionStrength","stroke","strokeWidth","strokeOpacity","strokeDasharray","concat","entries","_ref2","angle","x","y","score","transform","fill","fillOpacity","textAnchor","fontSize","fontWeight","round","values","reduce","a","b","IntelligentRootCauseAnalysis","_ref3","selectedCause","setSelectedCause","useState","rootCauses","generateRootCauses","causes","push","id","category","title","impact","probability","toLowerCase","recommendations","cause","onClick","FaArrowRight","FaSearch","rc","idx","FaLightbulb","rec","PerformanceTrendsAnalysis","_ref4","historicalData","ResponsiveContainer","LineChart","data","XAxis","dataKey","tickFormatter","d","Date","toLocaleDateString","YAxis","domain","Tooltip","labelFormatter","l","formatter","v","contentStyle","backgroundColor","borderColor","Line","type","dot","activeDot","SYSTEM_KEYS","SystemDeepDive","_outlet$darkMode","outlet","useOutletContext","selectedSystem","setSelectedSystem","analysisMode","setAnalysisMode","setScores","setHistoricalData","crossSystemInsights","setCrossSystemInsights","organizationalIntelligence","setOrganizationalIntelligence","predictiveHealth","setPredictiveHealth","transformationReadiness","setTransformationReadiness","useEffect","baseScores","historical","orgIntelligence","healthForecast","generateAdvancedOrganizationalData","current_health","next_30_days","risk_areas","risk_level","improvement_opportunities","leverage_potential","impact_score","cultural_health_trend","organizational_velocity","forEach","date","setDate","getDate","baseValue","weeklyPattern","monthlyTrend","seasonalVariation","variation","random","getTime","value","max","min","benchmark","prediction","confidence","collaboration_index","innovation_velocity","communication_effectiveness","overall_culture_health","decision_quality","knowledge_transfer","strategic_coherence","change_readiness","leadership_effectiveness","overall_score","leadership_commitment","organizational_capability","change_capacity","cultural_alignment","resource_availability","communication_infrastructure","feedback_mechanisms","readiness_factors","factor","status","insights","lowPerformingSystems","filter","_ref7","_","highPerformingSystems","_ref8","_ref9","join","recommendation","affectedSystems","_ref0","_ref1","_ref10","generateCrossSystemInsights","currentScore","orchestrationSeries","slice","item","actual","key","_CORE_SYSTEMS$key","_CORE_SYSTEMS$key2","_CORE_SYSTEMS$key3","system_key","current_score","urgency","root_causes","business_impact","recommended_interventions","label","mode","renderAnalysisMode","_predictiveHealth$ris","_predictiveHealth$imp","_transformationReadin","FaCog","_ref11","replace","FaUsers","style","FaChartLine","FaExclamationTriangle","risk","opp","FaNetworkWired","insight","_insight$affectedSyst","_CORE_SYSTEMS$system","FaCogs","FaCheckCircle","intervention","allowedTooltipTypes","forwardRef","props","ref","React","CartesianChart","chartName","defaultTooltipEventType","validateTooltipEventTypes","tooltipPayloadSearcher","arrayTooltipSearcher","categoricalChartProps"],"sourceRoot":""}