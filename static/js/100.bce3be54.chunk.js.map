{"version":3,"file":"static/js/100.bce3be54.chunk.js","mappings":"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,SACLC,GAAI,CAAC,UAEPC,UAAW,CACTC,KAAM,CAAC,OAAQ,QAAS,SAAU,OAAQ,MAAO,QACjDC,KAAM,CAAC,OAAQ,SACfC,IAAK,CAAC,OAAQ,SACdC,SAAU,CAAC,OAAQ,UAErBC,SAAU,CACR,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,SACA,KACA,IACA,MACA,OACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,IACA,KACA,KACA,QACA,QACA,QACA,QACA,aACA,KACA,KACA,KACA,MACA,IACA,OACA,MACA,KACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,SACA,UACA,UACA,UACA,SACA,aACA,OACA,MACA,OACA,MACA,OACA,QACA,OACA,OACA,MACA,SAEFC,WAAY,CACV5E,EAAG,CAAC,QACJ6E,IAAK,CAAC,MAAO,YACbC,MAAO,CACL,CAAC,OAAQ,YACT,CAAC,YAAY,IAEfC,GAAI,CAAC,CAAC,YAAa,mBACnBC,IAAK,CAAC,YAAa,YACnBC,WAAY,CAAC,QACbC,IAAK,CAAC,QACNC,IAAK,CAAC,QACNC,EAAG,CAAC,QACJ,IAAK,CACH,OACA,SACA,gBACA,YACA,SACA,QACA,MACA,kBACA,aACA,YACA,iBACA,OACA,SACA,cACA,cACA,OACA,UACA,UACA,UACA,QACA,OACA,UACA,QACA,UACA,SACA,WACA,MACA,WACA,UACA,UACA,QACA,UACA,SACA,WACA,SACA,QACA,KACA,QACA,OACA,YACA,QACA,SACA,WACA,OACA,SACA,UACA,SACA,OACA,SACA,WACA,MACA,MACA,OACA,UACA,QACA,QACA,WACA,QACA,OACA,OACA,QACA,UACA,WACA,SACA,QACA,OACA,SACA,SACA,QACA,SACA,QACA,aAGJC,SAAU,CACRP,MAAO,CACLQ,KAAM,WACNC,UAAU,KC3HVC,EAAM,CAAC,EAAEC,eAGTC,EAAa,CACjBC,KAAM,CAACC,SAAUC,GACjBC,QAwJF,SAAuBC,GACrB,OAAOA,EAAOC,cAAgB,CAACC,KAAMC,QAAqBrE,CAC5D,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","sources":["pages/CEO_Dashboard/constants/systems.js","lib/rag.js","../node_modules/hast-util-sanitize/lib/schema.js","../node_modules/hast-util-sanitize/lib/index.js","../node_modules/rehype-sanitize/index.js","pages/CEO_Dashboard/CEODashboardComponents/Chat3DVisualizer.js","pages/CEO_Dashboard/CEODashboardComponents/Chat.js"],"sourcesContent":["/**\r\n * Canonical  {\r\n    key: 'orchestration',\r\n    title: 'Orchestration',\r\n    description: 'Development cycles, sprint planning, and continuous improvement',\r\n    icon: '🔄',\r\n    color: '#10B981', // emerald-500\r\n    order: 2\r\n  }, for C-Suite Partner Dashboard\r\n * \r\n * Defines the six core systems that form the assessment framework,\r\n * display metadata, and legacy key mapping for backwards compatibility.\r\n */\r\n\r\n// Six canonical systems with display metadata\r\nexport const CANONICAL_SYSTEMS = [\r\n  {\r\n    key: 'interdependency',\r\n    title: 'Interdependency',\r\n    description: 'Cross-functional collaboration and dependency management',\r\n    icon: '🔗',\r\n    color: '#3B82F6', // blue-500\r\n    order: 1\r\n  },\r\n  {\r\n    key: 'orchestration',\r\n    title: 'Orchestration',\r\n    description: 'Development cycles, sprint planning, and continuous improvement',\r\n    icon: '🔄',\r\n    color: '#10B981', // emerald-500\r\n    order: 2\r\n  },\r\n  {\r\n    key: 'investigation',\r\n    title: 'Investigation',\r\n    description: 'Data analysis, research, and discovery processes',\r\n    icon: '🔎',\r\n    color: '#F59E0B', // amber-500\r\n    order: 3\r\n  },\r\n  {\r\n    key: 'interpretation',\r\n    title: 'Interpretation',\r\n    description: 'Insight generation, decision-making, and strategic analysis',\r\n    icon: '💡',\r\n    color: '#8B5CF6', // violet-500\r\n    order: 4\r\n  },\r\n  {\r\n    key: 'illustration',\r\n    title: 'Illustration',\r\n    description: 'Communication, visualization, and knowledge sharing',\r\n    icon: '🔄',\r\n    color: '#EF4444', // red-500\r\n    order: 5\r\n  },\r\n  {\r\n    key: 'inlignment',\r\n    title: 'Inlignment',\r\n    description: 'Strategic coordination, goal setting, and organizational coherence',\r\n    icon: '🎯',\r\n    color: '#06B6D4', // cyan-500\r\n    order: 6\r\n  }\r\n];\r\n\r\n// Legacy system keys mapping to canonical keys for backwards compatibility\r\n// TODO: Remove legacy mappings after migration period (6 months)\r\nexport const LEGACY_TO_CANONICAL = {\r\n  // Legacy keys that need normalization\r\n  'orchestration': 'orchestration', // legacy iteration maps to orchestration\r\n  'inlignment': 'inlignment', // legacy ilignment maps to inlignment\r\n  \r\n  // Ensure canonical keys map to themselves\r\n  'interdependency': 'interdependency',\r\n  'orchestration': 'orchestration',\r\n  'investigation': 'investigation',\r\n  'interpretation': 'interpretation',\r\n  'illustration': 'illustration',\r\n  'inlignment': 'inlignment',\r\n  \r\n  // Additional legacy variations that might exist\r\n  'dependency': 'interdependency',\r\n  'dependencies': 'interdependency',\r\n  'analysis': 'investigation',\r\n  'research': 'investigation',\r\n  'insights': 'interpretation',\r\n  'reporting': 'illustration',\r\n  'visualization': 'illustration',\r\n  'coordination': 'inlignment',\r\n  'strategy': 'inlignment'\r\n};\r\n\r\n/**\r\n * Normalize a system key from legacy format to canonical format\r\n * @param {string} systemKey - Raw system key (possibly legacy)\r\n * @returns {string} Canonical system key\r\n */\r\nexport function normalizeSystemKey(systemKey) {\r\n  if (!systemKey || typeof systemKey !== 'string') {\r\n    return 'investigation'; // Default fallback\r\n  }\r\n  \r\n  const normalized = systemKey.toLowerCase().trim();\r\n  return LEGACY_TO_CANONICAL[normalized] || normalized;\r\n}\r\n\r\n/**\r\n * Get system metadata by canonical key\r\n * @param {string} systemKey - Canonical system key\r\n * @returns {object|null} System metadata or null if not found\r\n */\r\nexport function getSystemMetadata(systemKey) {\r\n  const canonical = normalizeSystemKey(systemKey);\r\n  return CANONICAL_SYSTEMS.find(s => s.key === canonical) || null;\r\n}\r\n\r\n/**\r\n * Get all systems formatted for UI display (sorted by order)\r\n * @returns {Array} Systems with UI metadata\r\n */\r\nexport function getSystemsForUI() {\r\n  return CANONICAL_SYSTEMS\r\n    .sort((a, b) => a.order - b.order)\r\n    .map(system => ({\r\n      id: system.key,\r\n      key: system.key,\r\n      title: system.title,\r\n      description: system.description,\r\n      icon: system.icon,\r\n      color: system.color\r\n    }));\r\n}\r\n\r\n/**\r\n * Validate if a system key is canonical\r\n * @param {string} systemKey - System key to validate\r\n * @returns {boolean} True if canonical, false otherwise\r\n */\r\nexport function isCanonicalSystem(systemKey) {\r\n  return CANONICAL_SYSTEMS.some(s => s.key === systemKey);\r\n}\r\n\r\n// Default system weights for org health calculation\r\n// TODO: Make these configurable per organization\r\nexport const DEFAULT_SYSTEM_WEIGHTS = {\r\n  'interdependency': 0.18,\r\n  'orchestration': 0.20,\r\n  'investigation': 0.16,\r\n  'interpretation': 0.18,\r\n  'illustration': 0.14,\r\n  'inlignment': 0.14\r\n};\r\n\r\n// Ensure weights sum to 1.0\r\nconst weightSum = Object.values(DEFAULT_SYSTEM_WEIGHTS).reduce((sum, w) => sum + w, 0);\r\nif (Math.abs(weightSum - 1.0) > 0.001) {\r\n  console.warn(`[systems.js] System weights sum to ${weightSum.toFixed(3)}, should be 1.0`);\r\n}\r\n\r\n// Organizational Health Framework Metadata\r\n// This positions our tool as an \"organizational doctor\" that provides\r\n// automated diagnosis beyond what ERP/BI platforms offer\r\nexport const FRAMEWORK_METADATA = {\r\n  name: 'ConseQ-X Organizational Health Assessment',\r\n  version: '1.0',\r\n  description: 'Automated organizational health analysis across six holistic systems',\r\n  differentiators: [\r\n    'Holistic organizational diagnosis beyond operational metrics',\r\n    'Automated analysis and recommendations vs manual BI configuration', \r\n    'Predictive and prescriptive insights vs descriptive reporting',\r\n    'Cultural and behavioral factors integrated with operational data',\r\n    'Purpose-built for organizational effectiveness vs generic analytics'\r\n  ],\r\n  targetGap: 'Bridges the space between operational ERP/BI data and strategic consulting insights',\r\n  useCases: [\r\n    'Post-merger integration assessment',\r\n    'Organizational transformation tracking',\r\n    'Performance turnaround monitoring',\r\n    'Continuous health monitoring for SMEs',\r\n    'Government agency effectiveness measurement'\r\n  ]\r\n};\r\n\r\n// Value proposition vs traditional platforms\r\nexport const COMPETITIVE_ADVANTAGES = {\r\n  vsERP: [\r\n    'Analyzes intangible dynamics like culture and collaboration',\r\n    'Provides narrative insights beyond transactional data',\r\n    'Ready-made organizational health model vs complex customization'\r\n  ],\r\n  vsBI: [\r\n    'Purpose-built framework vs empty canvas requiring expertise',\r\n    'Automated interpretation and recommendations vs manual analysis',\r\n    'Integrated organizational model vs piecemeal dashboard building'\r\n  ],\r\n  vsConsulting: [\r\n    'Continuous monitoring vs one-off assessments',\r\n    'Affordable software vs expensive consulting engagements',\r\n    'Real-time insights vs periodic reports'\r\n  ]\r\n};\r\n","// Simple in-memory TF-IDF based retrieval for demo RAG\r\n// Not production grade — lightweight and dependency-free\r\n\r\nfunction tokenize(text) {\r\n  return (text || \"\")\r\n    .toLowerCase()\r\n    .replace(/[^a-z0-9\\s]/g, \" \")\r\n    .split(/\\s+/)\r\n    .filter(Boolean);\r\n}\r\n\r\nfunction buildIndex(docs = []) {\r\n  // docs: array of { id, text, meta }\r\n  const N = docs.length;\r\n  const termDocCount = Object.create(null);\r\n  const docTerms = docs.map((d) => {\r\n    const toks = tokenize(d.text);\r\n    const tf = Object.create(null);\r\n    toks.forEach((t) => { tf[t] = (tf[t] || 0) + 1; });\r\n    Object.keys(tf).forEach((t) => { termDocCount[t] = (termDocCount[t] || 0) + 1; });\r\n    return tf;\r\n  });\r\n\r\n  const idf = Object.create(null);\r\n  Object.keys(termDocCount).forEach((t) => { idf[t] = Math.log(1 + N / termDocCount[t]); });\r\n\r\n  // compute tf-idf vectors (sparse) and norms\r\n  const docVectors = docTerms.map((tf) => {\r\n    const vec = Object.create(null);\r\n    let norm = 0;\r\n    Object.entries(tf).forEach(([t, f]) => {\r\n      const score = f * (idf[t] || 0);\r\n      vec[t] = score;\r\n      norm += score * score;\r\n    });\r\n    norm = Math.sqrt(norm) || 1;\r\n    return { vec, norm };\r\n  });\r\n\r\n  return { docs, idf, docVectors };\r\n}\r\n\r\nfunction scoreQuery(index, query) {\r\n  const qTokens = tokenize(query);\r\n  const qtf = Object.create(null);\r\n  qTokens.forEach((t) => { qtf[t] = (qtf[t] || 0) + 1; });\r\n\r\n  const qvec = Object.create(null);\r\n  let qnorm = 0;\r\n  Object.entries(qtf).forEach(([t, f]) => {\r\n    const val = f * (index.idf[t] || 0);\r\n    qvec[t] = val;\r\n    qnorm += val * val;\r\n  });\r\n  qnorm = Math.sqrt(qnorm) || 1;\r\n\r\n  const scores = index.docVectors.map(({ vec, norm }, i) => {\r\n    // dot product\r\n    let dot = 0;\r\n    Object.entries(qvec).forEach(([t, v]) => { if (vec[t]) dot += v * vec[t]; });\r\n    const sim = dot / (norm * qnorm);\r\n    return { i, sim };\r\n  });\r\n  return scores.sort((a, b) => b.sim - a.sim);\r\n}\r\n\r\nfunction queryIndex(index, query, topK = 5) {\r\n  if (!index || !index.docs || index.docs.length === 0) return [];\r\n  const scored = scoreQuery(index, query).filter(s => s.sim > 0);\r\n  return scored.slice(0, topK).map(s => ({ score: s.sim, doc: index.docs[s.i] }));\r\n}\r\n\r\nexport { buildIndex, queryIndex };\r\n","/** @type {import('./index.js').Schema} */\nexport const defaultSchema = {\n  strip: ['script'],\n  clobberPrefix: 'user-content-',\n  clobber: ['name', 'id'],\n  ancestors: {\n    tbody: ['table'],\n    tfoot: ['table'],\n    thead: ['table'],\n    td: ['table'],\n    th: ['table'],\n    tr: ['table']\n  },\n  protocols: {\n    href: ['http', 'https', 'mailto', 'xmpp', 'irc', 'ircs'],\n    cite: ['http', 'https'],\n    src: ['http', 'https'],\n    longDesc: ['http', 'https']\n  },\n  tagNames: [\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'br',\n    'b',\n    'i',\n    'strong',\n    'em',\n    'a',\n    'pre',\n    'code',\n    'img',\n    'tt',\n    'div',\n    'ins',\n    'del',\n    'sup',\n    'sub',\n    'p',\n    'ol',\n    'ul',\n    'table',\n    'thead',\n    'tbody',\n    'tfoot',\n    'blockquote',\n    'dl',\n    'dt',\n    'dd',\n    'kbd',\n    'q',\n    'samp',\n    'var',\n    'hr',\n    'ruby',\n    'rt',\n    'rp',\n    'li',\n    'tr',\n    'td',\n    'th',\n    's',\n    'strike',\n    'summary',\n    'details',\n    'caption',\n    'figure',\n    'figcaption',\n    'abbr',\n    'bdo',\n    'cite',\n    'dfn',\n    'mark',\n    'small',\n    'span',\n    'time',\n    'wbr',\n    'input'\n  ],\n  attributes: {\n    a: ['href'],\n    img: ['src', 'longDesc'],\n    input: [\n      ['type', 'checkbox'],\n      ['disabled', true]\n    ],\n    li: [['className', 'task-list-item']],\n    div: ['itemScope', 'itemType'],\n    blockquote: ['cite'],\n    del: ['cite'],\n    ins: ['cite'],\n    q: ['cite'],\n    '*': [\n      'abbr',\n      'accept',\n      'acceptCharset',\n      'accessKey',\n      'action',\n      'align',\n      'alt',\n      'ariaDescribedBy',\n      'ariaHidden',\n      'ariaLabel',\n      'ariaLabelledBy',\n      'axis',\n      'border',\n      'cellPadding',\n      'cellSpacing',\n      'char',\n      'charOff',\n      'charSet',\n      'checked',\n      'clear',\n      'cols',\n      'colSpan',\n      'color',\n      'compact',\n      'coords',\n      'dateTime',\n      'dir',\n      'disabled',\n      'encType',\n      'htmlFor',\n      'frame',\n      'headers',\n      'height',\n      'hrefLang',\n      'hSpace',\n      'isMap',\n      'id',\n      'label',\n      'lang',\n      'maxLength',\n      'media',\n      'method',\n      'multiple',\n      'name',\n      'noHref',\n      'noShade',\n      'noWrap',\n      'open',\n      'prompt',\n      'readOnly',\n      'rel',\n      'rev',\n      'rows',\n      'rowSpan',\n      'rules',\n      'scope',\n      'selected',\n      'shape',\n      'size',\n      'span',\n      'start',\n      'summary',\n      'tabIndex',\n      'target',\n      'title',\n      'type',\n      'useMap',\n      'vAlign',\n      'value',\n      'vSpace',\n      'width',\n      'itemProp'\n    ]\n  },\n  required: {\n    input: {\n      type: 'checkbox',\n      disabled: true\n    }\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {Content | Root} Node\n *\n * @typedef {Properties[string]} PropertyValue\n *   Possible property values.\n * @typedef {string | number | boolean} PrimitivePropertyValue\n *   Possible primitive HTML attribute values.\n *\n * @typedef {Record<string, Array<string | [string, ...Array<PrimitivePropertyValue | RegExp>]>>} Attributes\n *  Map of tag names to allow lists for each property.\n * @typedef {Record<string, Array<PrimitivePropertyValue | RegExp>>} AttributeClean\n *   Normalized input.\n *\n * @typedef Schema\n *   Sanitization configuration.\n * @property {Attributes | undefined} [attributes]\n *   Map of tag names to allowed properties.\n *\n *   The special `'*'` key defines property names allowed on all elements.\n * @property {Record<string, Record<string, PropertyValue>> | undefined} [required]\n *   Map of tag names to required property names and their default property value.\n * @property {Array<string> | undefined} [tagNames]\n *   List of allowed tag names.\n * @property {Record<string, Array<string>> | undefined} [protocols]\n *   Map of protocols to allow in property values.\n * @property {Record<string, Array<string>> | undefined} [ancestors]\n *   Map of tag names to their required ancestor elements.\n * @property {Array<string> | undefined} [clobber]\n *   List of allowed property names which can clobber.\n * @property {string | undefined} [clobberPrefix]\n *   Prefix to use before potentially clobbering property names.\n * @property {Array<string> | undefined} [strip]\n *   Names of elements to strip from the tree.\n * @property {boolean | undefined} [allowComments]\n *   Whether to allow comments.\n * @property {boolean | undefined} [allowDoctypes]\n *   Whether to allow doctypes.\n *\n * @typedef {(schema: Schema, value: any, node: any, stack: Array<string>) => unknown} Handler\n * @typedef {Record<string, Handler>} NodeDefinition\n * @typedef {((schema: Schema, node: Node) => NodeDefinition | undefined)} NodeDefinitionGetter\n * @typedef {Record<string, NodeDefinition | NodeDefinitionGetter>} NodeSchema\n */\n\nimport {defaultSchema} from './schema.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {NodeSchema} */\nconst nodeSchema = {\n  root: {children: all},\n  doctype: handleDoctype,\n  comment: handleComment,\n  element: {\n    tagName: handleTagName,\n    properties: handleProperties,\n    children: all\n  },\n  text: {value: handleValue},\n  '*': {data: allow, position: allow}\n}\n\n/**\n * Utility to sanitize a tree\n *\n * @param {Node} node\n *   Hast tree to sanitize\n * @param {Schema} [schema]\n *   Schema defining how to sanitize - defaults to Github style sanitation\n */\nexport function sanitize(node, schema) {\n  /** @type {Node} */\n  let ctx = {type: 'root', children: []}\n\n  if (node && typeof node === 'object' && node.type) {\n    const replace = one(\n      Object.assign({}, defaultSchema, schema || {}),\n      node,\n      []\n    )\n\n    if (replace) {\n      if (Array.isArray(replace)) {\n        if (replace.length === 1) {\n          ctx = replace[0]\n        } else {\n          // @ts-expect-error Assume `root` is not a child.\n          ctx.children = replace\n        }\n      } else {\n        ctx = replace\n      }\n    }\n  }\n\n  return ctx\n}\n\n/**\n * Sanitize `node`.\n *\n * @param {Schema} schema\n * @param {Node} node\n * @param {Array<string>} stack\n * @returns {Node | Array<Node> | undefined}\n */\nfunction one(schema, node, stack) {\n  const type = node && node.type\n  /** @type {Node} */\n  // @ts-expect-error rest of props added later.\n  const replacement = {type: node.type}\n  /** @type {boolean | undefined} */\n  let replace\n\n  if (own.call(nodeSchema, type)) {\n    /** @type {NodeDefinition | NodeDefinitionGetter | undefined} */\n    let definition = nodeSchema[type]\n\n    if (typeof definition === 'function') {\n      definition = definition(schema, node)\n    }\n\n    if (definition) {\n      const allowed = Object.assign({}, definition, nodeSchema['*'])\n      /** @type {string} */\n      let key\n\n      replace = true\n\n      for (key in allowed) {\n        if (own.call(allowed, key)) {\n          // @ts-expect-error: fine.\n          // type-coverage:ignore-next-line\n          const result = allowed[key](schema, node[key], node, stack)\n\n          // eslint-disable-next-line max-depth\n          if (result === false) {\n            replace = undefined\n            // Set the non-safe value.\n            // @ts-expect-error: fine.\n            // type-coverage:ignore-next-line\n            replacement[key] = node[key]\n          } else if (result !== undefined && result !== null) {\n            // @ts-expect-error: fine.\n            // type-coverage:ignore-next-line\n            replacement[key] = result\n          }\n        }\n      }\n    }\n  }\n\n  if (replace) {\n    return replacement\n  }\n\n  return replacement.type === 'element' &&\n    schema.strip &&\n    !schema.strip.includes(replacement.tagName)\n    ? replacement.children\n    : undefined\n}\n\n/**\n * Sanitize `children`.\n *\n * @type {Handler}\n * @param {Array<Node>} children\n * @param {Node} node\n * @returns {Array<Node>}\n */\nfunction all(schema, children, node, stack) {\n  /** @type {Array<Node>} */\n  const results = []\n\n  if (Array.isArray(children)) {\n    let index = -1\n\n    if (node.type === 'element') {\n      stack.push(node.tagName)\n    }\n\n    while (++index < children.length) {\n      const value = one(schema, children[index], stack)\n\n      if (value) {\n        if (Array.isArray(value)) {\n          results.push(...value)\n        } else {\n          results.push(value)\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      stack.pop()\n    }\n  }\n\n  return results\n}\n\n/** @type {NodeDefinitionGetter} */\nfunction handleDoctype(schema) {\n  return schema.allowDoctypes ? {name: handleDoctypeName} : undefined\n}\n\n/** @type {NodeDefinitionGetter} */\nfunction handleComment(schema) {\n  return schema.allowComments ? {value: handleCommentValue} : undefined\n}\n\n/**\n * Sanitize `properties`.\n *\n * @type {Handler}\n * @param {Properties} properties\n * @param {Element} node\n * @returns {Properties}\n */\nfunction handleProperties(schema, properties, node, stack) {\n  const name = handleTagName(schema, node.tagName, node, stack)\n  /* c8 ignore next */\n  const attrs = schema.attributes || {}\n  /* c8 ignore next */\n  const reqs = schema.required || {}\n  const props = properties || {}\n  const allowed = Object.assign(\n    {},\n    toPropertyValueMap(attrs['*']),\n    toPropertyValueMap(name && own.call(attrs, name) ? attrs[name] : [])\n  )\n  /** @type {Properties} */\n  const result = {}\n  /** @type {string} */\n  let key\n\n  for (key in props) {\n    if (own.call(props, key)) {\n      let value = props[key]\n      /** @type {AttributeClean[string]} */\n      let definition\n\n      if (own.call(allowed, key)) {\n        definition = allowed[key]\n      } else if (data(key) && own.call(allowed, 'data*')) {\n        definition = allowed['data*']\n      } else {\n        continue\n      }\n\n      value = Array.isArray(value)\n        ? handlePropertyValues(schema, value, key, definition)\n        : handlePropertyValue(schema, value, key, definition)\n\n      if (value !== undefined && value !== null) {\n        result[key] = value\n      }\n    }\n  }\n\n  if (name && own.call(reqs, name)) {\n    for (key in reqs[name]) {\n      if (!own.call(result, key)) {\n        result[key] = reqs[name][key]\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Always return a valid HTML5 doctype.\n *\n * @type {Handler}\n * @returns {string}\n */\nfunction handleDoctypeName() {\n  return 'html'\n}\n\n/**\n * Sanitize `tagName`.\n *\n * @param {Schema} schema\n * @param {string} tagName\n * @param {Node} _\n * @param {Array<string>} stack\n * @returns {string | false}\n */\nfunction handleTagName(schema, tagName, _, stack) {\n  const name = typeof tagName === 'string' ? tagName : ''\n  let index = -1\n\n  if (\n    !name ||\n    name === '*' ||\n    (schema.tagNames && !schema.tagNames.includes(name))\n  ) {\n    return false\n  }\n\n  // Some nodes can break out of their context if they don’t have a certain\n  // ancestor.\n  if (schema.ancestors && own.call(schema.ancestors, name)) {\n    while (++index < schema.ancestors[name].length) {\n      if (stack.includes(schema.ancestors[name][index])) {\n        return name\n      }\n    }\n\n    return false\n  }\n\n  return name\n}\n\n/**\n * See <https://html.spec.whatwg.org/multipage/parsing.html#serialising-html-fragments>\n *\n * @type {Handler}\n * @param {unknown} value\n * @returns {string}\n */\nfunction handleCommentValue(_, value) {\n  /** @type {string} */\n  const result = typeof value === 'string' ? value : ''\n  const index = result.indexOf('-->')\n  return index < 0 ? result : result.slice(0, index)\n}\n\n/**\n * Sanitize `value`.\n *\n * @type {Handler}\n * @param {unknown} value\n * @returns {string}\n */\nfunction handleValue(_, value) {\n  return typeof value === 'string' ? value : ''\n}\n\n/**\n * Allow `value`.\n *\n * @type {Handler}\n * @param {unknown} value\n */\nfunction allow(_, value) {\n  return value\n}\n\n/**\n * Sanitize a property value which is a list.\n *\n * @param {Schema} schema\n * @param {Array<unknown>} values\n * @param {string} prop\n * @param {AttributeClean[string]} definition\n * @returns {Array<string | number>}\n */\nfunction handlePropertyValues(schema, values, prop, definition) {\n  let index = -1\n  /** @type {Array<string | number>} */\n  const result = []\n\n  while (++index < values.length) {\n    const value = handlePropertyValue(schema, values[index], prop, definition)\n\n    if (value !== undefined && value !== null) {\n      // @ts-expect-error Assume no booleans were in arrays.\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Sanitize a property value.\n *\n * @param {Schema} schema\n * @param {unknown} value\n * @param {string} prop\n * @param {AttributeClean[string]} definition\n * @returns {PropertyValue}\n */\nfunction handlePropertyValue(schema, value, prop, definition) {\n  if (\n    (typeof value === 'boolean' ||\n      typeof value === 'number' ||\n      typeof value === 'string') &&\n    safeProtocol(schema, value, prop) &&\n    (definition.length === 0 ||\n      definition.some((allowed) =>\n        allowed && typeof allowed === 'object' && 'flags' in allowed\n          ? allowed.test(String(value))\n          : allowed === value\n      ))\n  ) {\n    return schema.clobberPrefix &&\n      schema.clobber &&\n      schema.clobber.includes(prop)\n      ? schema.clobberPrefix + value\n      : value\n  }\n}\n\n/**\n * Check whether `value` is a safe URL.\n *\n * @param {Schema} schema\n * @param {unknown} value\n * @param {string} prop\n * @returns {boolean}\n */\nfunction safeProtocol(schema, value, prop) {\n  const url = String(value)\n  const colon = url.indexOf(':')\n  const questionMark = url.indexOf('?')\n  const numberSign = url.indexOf('#')\n  const slash = url.indexOf('/')\n  const protocols =\n    schema.protocols && own.call(schema.protocols, prop)\n      ? schema.protocols[prop].concat()\n      : []\n  let index = -1\n\n  if (\n    protocols.length === 0 ||\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign)\n  ) {\n    return true\n  }\n\n  while (++index < protocols.length) {\n    if (\n      colon === protocols[index].length &&\n      url.slice(0, protocols[index].length) === protocols[index]\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Create a map from a list of props or a list of properties and values.\n *\n * @param {Attributes[string]} values\n * @returns {AttributeClean}\n */\nfunction toPropertyValueMap(values) {\n  /** @type {AttributeClean} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    const value = values[index]\n\n    if (Array.isArray(value)) {\n      result[value[0]] = value.slice(1)\n    } else {\n      result[value] = []\n    }\n  }\n\n  return result\n}\n\n/**\n * Check if `prop` is a data property.\n *\n * @param {string} prop\n * @returns {boolean}\n */\nfunction data(prop) {\n  return prop.length > 4 && prop.slice(0, 4).toLowerCase() === 'data'\n}\n","/**\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('hast-util-sanitize').Schema} Options\n *   The sanitation schema defines how and if nodes and properties should be cleaned.\n *   See `hast-util-sanitize`.\n *   The default schema is exported as `defaultSchema`.\n */\n\nimport {sanitize as hastUtilSanitize, defaultSchema} from 'hast-util-sanitize'\n\n/**\n * Plugin to sanitize HTML.\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root, Root>}\n */\nexport default function rehypeSanitize(options = defaultSchema) {\n  // @ts-expect-error: assume input `root` matches output root.\n  return (tree) => hastUtilSanitize(tree, options)\n}\n\nexport {defaultSchema} from 'hast-util-sanitize'\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { ResponsiveContainer, LineChart, Line, AreaChart, Area, BarChart, Bar, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\n// Advanced 3D CSS transforms and animations\r\nconst CHART_STYLES = `\r\n  .chart-3d-container {\r\n    perspective: 1200px;\r\n    perspective-origin: center center;\r\n    transform-style: preserve-3d;\r\n  }\r\n  \r\n  .chart-3d-surface {\r\n    transform: rotateX(15deg) rotateY(-8deg) translateZ(20px);\r\n    box-shadow: \r\n      0 25px 50px -12px rgba(0, 0, 0, 0.4),\r\n      0 0 0 1px rgba(255, 255, 255, 0.1),\r\n      inset 0 1px 0 rgba(255, 255, 255, 0.2);\r\n    border-radius: 12px;\r\n    background: linear-gradient(145deg, \r\n      rgba(255, 255, 255, 0.1), \r\n      rgba(255, 255, 255, 0.05));\r\n    backdrop-filter: blur(10px);\r\n    border: 1px solid rgba(255, 255, 255, 0.2);\r\n    transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n  \r\n  .chart-3d-surface:hover {\r\n    transform: rotateX(10deg) rotateY(-5deg) translateZ(40px) scale(1.02);\r\n    box-shadow: \r\n      0 35px 70px -12px rgba(0, 0, 0, 0.5),\r\n      0 0 0 1px rgba(255, 255, 255, 0.15),\r\n      inset 0 1px 0 rgba(255, 255, 255, 0.3);\r\n  }\r\n  \r\n  .chart-hologram {\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .chart-hologram::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: -50%;\r\n    left: -50%;\r\n    width: 200%;\r\n    height: 200%;\r\n    background: linear-gradient(\r\n      45deg,\r\n      transparent,\r\n      rgba(0, 255, 255, 0.1),\r\n      transparent,\r\n      rgba(255, 0, 255, 0.1),\r\n      transparent\r\n    );\r\n    animation: hologram-scan 4s linear infinite;\r\n    pointer-events: none;\r\n    z-index: 1;\r\n  }\r\n  \r\n  @keyframes hologram-scan {\r\n    0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }\r\n    100% { transform: translateX(100%) translateY(100%) rotate(45deg); }\r\n  }\r\n  \r\n  .metric-cube {\r\n    transform-style: preserve-3d;\r\n    animation: rotate-cube 8s linear infinite;\r\n  }\r\n  \r\n  @keyframes rotate-cube {\r\n    0% { transform: rotateX(0deg) rotateY(0deg); }\r\n    25% { transform: rotateX(90deg) rotateY(0deg); }\r\n    50% { transform: rotateX(90deg) rotateY(90deg); }\r\n    75% { transform: rotateX(0deg) rotateY(90deg); }\r\n    100% { transform: rotateX(0deg) rotateY(0deg); }\r\n  }\r\n  \r\n  .neural-network {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    pointer-events: none;\r\n    opacity: 0.3;\r\n  }\r\n  \r\n  .neural-node {\r\n    position: absolute;\r\n    width: 8px;\r\n    height: 8px;\r\n    border-radius: 50%;\r\n    background: radial-gradient(circle, #00ff88, #0066ff);\r\n    animation: pulse-node 2s ease-in-out infinite;\r\n  }\r\n  \r\n  @keyframes pulse-node {\r\n    0%, 100% { transform: scale(1); opacity: 0.7; }\r\n    50% { transform: scale(1.5); opacity: 1; }\r\n  }\r\n  \r\n  .data-stream {\r\n    position: absolute;\r\n    width: 2px;\r\n    height: 100px;\r\n    background: linear-gradient(to bottom, #00ff88, transparent);\r\n    animation: data-flow 1.5s linear infinite;\r\n  }\r\n  \r\n  @keyframes data-flow {\r\n    0% { transform: translateY(-100px); opacity: 0; }\r\n    50% { opacity: 1; }\r\n    100% { transform: translateY(100px); opacity: 0; }\r\n  }\r\n`;\r\n\r\n// 3D Organizational Health Globe\r\nfunction OrganizationalHealthGlobe({ data, darkMode }) {\r\n  const globeRef = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    // Add rotation animation\r\n    if (globeRef.current) {\r\n      globeRef.current.style.animation = 'rotate-globe 20s linear infinite';\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"relative w-full h-64 flex items-center justify-center\">\r\n      <style>{`\r\n        @keyframes rotate-globe {\r\n          0% { transform: rotateY(0deg) rotateX(10deg); }\r\n          100% { transform: rotateY(360deg) rotateX(10deg); }\r\n        }\r\n        .globe-sphere {\r\n          width: 200px;\r\n          height: 200px;\r\n          border-radius: 50%;\r\n          background: radial-gradient(circle at 30% 30%, \r\n            rgba(0, 255, 136, 0.8), \r\n            rgba(0, 102, 255, 0.6), \r\n            rgba(128, 0, 255, 0.4));\r\n          position: relative;\r\n          transform-style: preserve-3d;\r\n          box-shadow: \r\n            inset -20px -20px 50px rgba(0, 0, 0, 0.5),\r\n            0 0 50px rgba(0, 255, 136, 0.3);\r\n        }\r\n        .globe-overlay {\r\n          position: absolute;\r\n          inset: 0;\r\n          border-radius: 50%;\r\n          background: \r\n            repeating-conic-gradient(from 0deg, \r\n              transparent 0deg, \r\n              rgba(255, 255, 255, 0.1) 15deg, \r\n              transparent 30deg),\r\n            repeating-linear-gradient(0deg, \r\n              transparent 0px, \r\n              rgba(255, 255, 255, 0.05) 10px, \r\n              transparent 20px);\r\n        }\r\n      `}</style>\r\n      \r\n      <div ref={globeRef} className=\"globe-sphere\">\r\n        <div className=\"globe-overlay\" />\r\n        \r\n        {/* System Health Indicators */}\r\n        {data.systems?.map((system, index) => (\r\n          <div\r\n            key={system.name}\r\n            className=\"absolute w-4 h-4 rounded-full\"\r\n            style={{\r\n              background: system.score > 70 ? '#00ff88' : system.score > 40 ? '#ffaa00' : '#ff4444',\r\n              top: `${20 + (index * 25)}%`,\r\n              left: `${30 + Math.sin(index) * 30}%`,\r\n              boxShadow: `0 0 15px ${system.score > 70 ? '#00ff88' : system.score > 40 ? '#ffaa00' : '#ff4444'}`,\r\n              animation: `pulse-node ${1 + index * 0.3}s ease-in-out infinite`\r\n            }}\r\n            title={`${system.name}: ${system.score}%`}\r\n          />\r\n        ))}\r\n      </div>\r\n      \r\n      <div className={`absolute bottom-4 text-center text-sm ${darkMode ? 'text-gray-300' : 'text-gray-600'}`}>\r\n        <div className=\"font-semibold\">Organizational Health Universe</div>\r\n        <div className=\"text-xs\">Real-time system interconnections</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// 3D Matrix Visualization\r\nfunction SystemMatrix({ data, darkMode }) {\r\n  return (\r\n    <div className=\"relative w-full h-80\">\r\n      <style>{`\r\n        .matrix-grid {\r\n          perspective: 1000px;\r\n          transform-style: preserve-3d;\r\n        }\r\n        .matrix-cell {\r\n          transform-style: preserve-3d;\r\n          transition: all 0.3s ease;\r\n        }\r\n        .matrix-cell:hover {\r\n          transform: translateZ(20px) scale(1.1);\r\n        }\r\n      `}</style>\r\n      \r\n      <div className=\"matrix-grid h-full grid grid-cols-3 gap-4 p-4\">\r\n        {data.systems?.slice(0, 6).map((system, index) => (\r\n          <div\r\n            key={system.name}\r\n            className={`matrix-cell relative rounded-lg p-4 ${\r\n              darkMode ? 'bg-gray-800/50' : 'bg-white/50'\r\n            } backdrop-blur-sm border border-white/20`}\r\n            style={{\r\n              transform: `rotateX(${10 + index * 5}deg) rotateY(${-5 + index * 3}deg) translateZ(${index * 10}px)`,\r\n              background: `linear-gradient(135deg, \r\n                hsla(${120 + system.score * 2}, 70%, 50%, 0.2), \r\n                hsla(${240 - system.score}, 70%, 50%, 0.1))`\r\n            }}\r\n          >\r\n            <div className=\"text-lg font-bold text-center mb-2\">\r\n              {system.score}%\r\n            </div>\r\n            <div className=\"text-xs text-center opacity-80\">\r\n              {system.name}\r\n            </div>\r\n            \r\n            {/* 3D Bar */}\r\n            <div className=\"absolute bottom-0 left-1/2 transform -translate-x-1/2\">\r\n              <div\r\n                className=\"w-2 bg-gradient-to-t from-blue-500 to-cyan-400\"\r\n                style={{\r\n                  height: `${system.score}px`,\r\n                  transform: 'rotateX(90deg)',\r\n                  transformOrigin: 'bottom'\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// 3D Performance Pyramid\r\nfunction PerformancePyramid({ data, darkMode }) {\r\n  return (\r\n    <div className=\"relative w-full h-64 flex items-center justify-center\">\r\n      <style>{`\r\n        .pyramid {\r\n          width: 0;\r\n          height: 0;\r\n          border-left: 100px solid transparent;\r\n          border-right: 100px solid transparent;\r\n          border-bottom: 150px solid rgba(0, 255, 136, 0.6);\r\n          position: relative;\r\n          transform: rotateX(20deg) rotateY(20deg);\r\n          transform-style: preserve-3d;\r\n          animation: pyramid-rotate 10s linear infinite;\r\n        }\r\n        @keyframes pyramid-rotate {\r\n          0% { transform: rotateX(20deg) rotateY(0deg); }\r\n          100% { transform: rotateX(20deg) rotateY(360deg); }\r\n        }\r\n        .pyramid-level {\r\n          position: absolute;\r\n          border-radius: 50%;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          font-weight: bold;\r\n          color: white;\r\n          text-shadow: 0 0 10px rgba(0, 0, 0, 0.8);\r\n        }\r\n      `}</style>\r\n      \r\n      <div className=\"pyramid\">\r\n        {/* Performance levels */}\r\n        <div \r\n          className=\"pyramid-level\"\r\n          style={{\r\n            width: '60px',\r\n            height: '20px',\r\n            background: 'rgba(255, 68, 68, 0.8)',\r\n            bottom: '120px',\r\n            left: '50%',\r\n            transform: 'translateX(-50%)'\r\n          }}\r\n        >\r\n          Critical\r\n        </div>\r\n        \r\n        <div \r\n          className=\"pyramid-level\"\r\n          style={{\r\n            width: '80px',\r\n            height: '25px',\r\n            background: 'rgba(255, 170, 0, 0.8)',\r\n            bottom: '80px',\r\n            left: '50%',\r\n            transform: 'translateX(-50%)'\r\n          }}\r\n        >\r\n          Improving\r\n        </div>\r\n        \r\n        <div \r\n          className=\"pyramid-level\"\r\n          style={{\r\n            width: '100px',\r\n            height: '30px',\r\n            background: 'rgba(0, 255, 136, 0.8)',\r\n            bottom: '40px',\r\n            left: '50%',\r\n            transform: 'translateX(-50%)'\r\n          }}\r\n        >\r\n          Excellent\r\n        </div>\r\n      </div>\r\n      \r\n      <div className={`absolute bottom-0 text-center text-sm ${darkMode ? 'text-gray-300' : 'text-gray-600'}`}>\r\n        <div className=\"font-semibold\">Performance Hierarchy</div>\r\n        <div className=\"text-xs\">System excellence distribution</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Main 3D Visualizer Component\r\nexport default function Chat3DVisualizer({ \r\n  visualType = 'globe', \r\n  data = {}, \r\n  darkMode = false,\r\n  title = \"3D Analysis\",\r\n  interactive = true \r\n}) {\r\n  const [currentView, setCurrentView] = useState(visualType);\r\n  const [liveData, setLiveData] = useState(data);\r\n  const containerRef = useRef(null);\r\n\r\n  // Listen for live data updates\r\n  useEffect(() => {\r\n    const handleDataUpdate = (event) => {\r\n      if (event.detail && event.detail.assessments) {\r\n        // Update visualization with new assessment data\r\n        setLiveData(prevData => ({\r\n          ...prevData,\r\n          lastUpdated: new Date().toISOString(),\r\n          isLive: true\r\n        }));\r\n      }\r\n    };\r\n\r\n    window.addEventListener('assessmentDataUpdated', handleDataUpdate);\r\n    \r\n    // Also listen for storage changes directly\r\n    const handleStorageChange = (e) => {\r\n      if (e.key === 'conseqx_assessments_v1' || e.key === 'conseqx_uploads_v1') {\r\n        setLiveData(prevData => ({\r\n          ...prevData,\r\n          lastUpdated: new Date().toISOString(),\r\n          isLive: true\r\n        }));\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('storage', handleStorageChange);\r\n\r\n    return () => {\r\n      window.removeEventListener('assessmentDataUpdated', handleDataUpdate);\r\n      window.removeEventListener('storage', handleStorageChange);\r\n    };\r\n  }, []);\r\n\r\n  // Update view when visualType prop changes\r\n  useEffect(() => {\r\n    setCurrentView(visualType);\r\n  }, [visualType]);\r\n\r\n  // Sample data structure for visualization\r\n  const defaultData = {\r\n    systems: [\r\n      { name: 'Interdependency', score: 78, trend: 'up', source: 'assessment' },\r\n      { name: 'Iteration', score: 65, trend: 'stable', source: 'upload' },\r\n      { name: 'Investigation', score: 82, trend: 'up', source: 'assessment' },\r\n      { name: 'Interpretation', score: 59, trend: 'down', source: 'estimated' },\r\n      { name: 'Illustration', score: 74, trend: 'up', source: 'upload' },\r\n      { name: 'Alignment', score: 68, trend: 'stable', source: 'assessment' }\r\n    ],\r\n    overall_health: 71,\r\n    timestamp: new Date().toISOString(),\r\n    total_systems: 6,\r\n    critical_systems: 1,\r\n    excellent_systems: 2,\r\n    improving_systems: 3,\r\n    data_sources: {\r\n      assessments: 3,\r\n      uploads: 2,\r\n      estimated: 1,\r\n      default: 0\r\n    }\r\n  };\r\n\r\n  const visualData = { ...defaultData, ...data, ...liveData };\r\n\r\n  const renderVisualization = () => {\r\n    switch (currentView) {\r\n      case 'globe':\r\n        return <OrganizationalHealthGlobe data={visualData} darkMode={darkMode} />;\r\n      case 'matrix':\r\n        return <SystemMatrix data={visualData} darkMode={darkMode} />;\r\n      case 'pyramid':\r\n        return <PerformancePyramid data={visualData} darkMode={darkMode} />;\r\n      default:\r\n        return <OrganizationalHealthGlobe data={visualData} darkMode={darkMode} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full my-4\">\r\n      <style>{CHART_STYLES}</style>\r\n      \r\n      <div className={`chart-3d-container ${darkMode ? 'bg-gray-900/30' : 'bg-white/30'} rounded-xl p-4`}>\r\n        {/* Header with view controls */}\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h3 className={`text-lg font-semibold ${darkMode ? 'text-gray-100' : 'text-gray-900'}`}>\r\n            {title}\r\n          </h3>\r\n          \r\n          {interactive && (\r\n            <div className=\"flex gap-2\">\r\n              <button\r\n                onClick={() => setCurrentView('globe')}\r\n                className={`px-3 py-1 rounded text-xs ${\r\n                  currentView === 'globe'\r\n                    ? 'bg-blue-500 text-white'\r\n                    : darkMode\r\n                    ? 'bg-gray-700 text-gray-300'\r\n                    : 'bg-gray-200 text-gray-600'\r\n                }`}\r\n              >\r\n                Globe\r\n              </button>\r\n              <button\r\n                onClick={() => setCurrentView('matrix')}\r\n                className={`px-3 py-1 rounded text-xs ${\r\n                  currentView === 'matrix'\r\n                    ? 'bg-blue-500 text-white'\r\n                    : darkMode\r\n                    ? 'bg-gray-700 text-gray-300'\r\n                    : 'bg-gray-200 text-gray-600'\r\n                }`}\r\n              >\r\n                Matrix\r\n              </button>\r\n              <button\r\n                onClick={() => setCurrentView('pyramid')}\r\n                className={`px-3 py-1 rounded text-xs ${\r\n                  currentView === 'pyramid'\r\n                    ? 'bg-blue-500 text-white'\r\n                    : darkMode\r\n                    ? 'bg-gray-700 text-gray-300'\r\n                    : 'bg-gray-200 text-gray-600'\r\n                }`}\r\n              >\r\n                Pyramid\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* 3D Visualization Container */}\r\n        <div \r\n          ref={containerRef}\r\n          className=\"chart-3d-surface chart-hologram relative\"\r\n        >\r\n          {renderVisualization()}\r\n          \r\n          {/* Neural Network Overlay */}\r\n          <div className=\"neural-network\">\r\n            {[...Array(8)].map((_, i) => (\r\n              <div\r\n                key={i}\r\n                className=\"neural-node\"\r\n                style={{\r\n                  top: `${Math.random() * 80 + 10}%`,\r\n                  left: `${Math.random() * 80 + 10}%`,\r\n                  animationDelay: `${i * 0.3}s`\r\n                }}\r\n              />\r\n            ))}\r\n            \r\n            {[...Array(4)].map((_, i) => (\r\n              <div\r\n                key={`stream-${i}`}\r\n                className=\"data-stream\"\r\n                style={{\r\n                  left: `${20 + i * 20}%`,\r\n                  animationDelay: `${i * 0.5}s`\r\n                }}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Enhanced Metrics Display */}\r\n        <div className=\"mt-4 space-y-4\">\r\n          {/* Primary Metrics */}\r\n          <div className=\"grid grid-cols-3 gap-4\">\r\n            <div className={`text-center p-3 rounded-lg ${darkMode ? 'bg-gray-800/50' : 'bg-white/50'} backdrop-blur-sm border ${darkMode ? 'border-gray-700/30' : 'border-gray-200/30'}`}>\r\n              <div className=\"flex items-center justify-center gap-2 mb-1\">\r\n                <div className=\"text-2xl font-bold text-green-400\">{visualData.overall_health}%</div>\r\n                {visualData.isLive && <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>}\r\n              </div>\r\n              <div className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-600'}`}>\r\n                Overall Health {visualData.isLive ? '• Live' : ''}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className={`text-center p-3 rounded-lg ${darkMode ? 'bg-gray-800/50' : 'bg-white/50'} backdrop-blur-sm border ${darkMode ? 'border-gray-700/30' : 'border-gray-200/30'}`}>\r\n              <div className=\"text-2xl font-bold text-blue-400\">{visualData.total_systems || visualData.systems?.length || 6}</div>\r\n              <div className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-600'}`}>Systems Active</div>\r\n            </div>\r\n            \r\n            <div className={`text-center p-3 rounded-lg ${darkMode ? 'bg-gray-800/50' : 'bg-white/50'} backdrop-blur-sm border ${darkMode ? 'border-gray-700/30' : 'border-gray-200/30'}`}>\r\n              <div className=\"text-2xl font-bold text-purple-400\">\r\n                {visualData.improving_systems || visualData.systems?.filter(s => s.trend === 'up').length || 3}\r\n              </div>\r\n              <div className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-600'}`}>Improving</div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Data Sources Indicator */}\r\n          {visualData.data_sources && (\r\n            <div className={`p-3 rounded-lg ${darkMode ? 'bg-gray-800/30' : 'bg-white/30'} backdrop-blur-sm border ${darkMode ? 'border-gray-700/30' : 'border-gray-200/30'}`}>\r\n              <div className={`text-xs font-medium mb-2 ${darkMode ? 'text-gray-300' : 'text-gray-600'}`}>\r\n                Data Sources\r\n              </div>\r\n              <div className=\"grid grid-cols-4 gap-2\">\r\n                <div className=\"text-center\">\r\n                  <div className={`text-sm font-bold ${darkMode ? 'text-emerald-400' : 'text-emerald-600'}`}>\r\n                    {visualData.data_sources.assessments || 0}\r\n                  </div>\r\n                  <div className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>\r\n                    Assessed\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className={`text-sm font-bold ${darkMode ? 'text-blue-400' : 'text-blue-600'}`}>\r\n                    {visualData.data_sources.uploads || 0}\r\n                  </div>\r\n                  <div className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>\r\n                    Uploaded\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className={`text-sm font-bold ${darkMode ? 'text-amber-400' : 'text-amber-600'}`}>\r\n                    {visualData.data_sources.estimated || 0}\r\n                  </div>\r\n                  <div className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>\r\n                    Estimated\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className={`text-sm font-bold ${darkMode ? 'text-purple-400' : 'text-purple-600'}`}>\r\n                    {(visualData.critical_systems || 0) + (visualData.excellent_systems || 0)}\r\n                  </div>\r\n                  <div className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>\r\n                    Key Systems\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Last Updated */}\r\n          <div className=\"text-center\">\r\n            <div className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>\r\n              Last updated: {visualData.lastUpdated \r\n                ? new Date(visualData.lastUpdated).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\r\n                : new Date(visualData.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { useOutletContext, useNavigate } from \"react-router-dom\";\r\nimport { FaPaperPlane, FaPaperclip, FaCube, FaChartLine, FaExclamationTriangle, FaShieldAlt, FaArrowUp, FaFileAlt, FaBullseye, FaDownload, FaChartPie } from \"react-icons/fa\";\r\nimport { useAuth } from \"../../../contexts/AuthContext\";\r\nimport { useIntelligence } from \"../../../contexts/IntelligenceContext\";\r\nimport { normalizeSystemKey, CANONICAL_SYSTEMS } from \"../constants/systems\";\r\nimport { generateSystemReport } from \"../../../utils/aiPromptGenerator\";\r\nimport { buildIndex, queryIndex } from \"../../../lib/rag\";\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport rehypeSanitize from 'rehype-sanitize';\r\nimport Chat3DVisualizer from './Chat3DVisualizer';\r\n\r\nfunction TypingIndicator({ darkMode }) {\r\n  const dotClass = `h-2 w-2 rounded-full animate-pulse ${darkMode ? \"bg-gray-500\" : \"bg-gray-400\"}`;\r\n  return (\r\n    <div className={`flex items-center gap-2 text-sm ${darkMode ? \"text-gray-400\" : \"text-gray-500\"}`}>\r\n      <div className={dotClass} />\r\n      <div className={`${dotClass} delay-75`} />\r\n      <div className={`${dotClass} delay-150`} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MessageRow({ m, darkMode }) {\r\n  const isUser = m.role === \"user\";\r\n  \r\n  // Check if message should include 3D visualization\r\n  const shouldShow3D = !isUser && (\r\n    m.visualization3D || \r\n    m.includeVisualization ||\r\n    (m.text && (\r\n      m.text.toLowerCase().includes('3d') || \r\n      m.text.toLowerCase().includes('visual') || \r\n      m.text.toLowerCase().includes('chart') ||\r\n      m.text.toLowerCase().includes('analysis') ||\r\n      m.text.toLowerCase().includes('organizational health') ||\r\n      m.text.toLowerCase().includes('system scores')\r\n    ))\r\n  );\r\n  \r\n  // Debug logging\r\n  if (!isUser && m.text && m.text.includes('3D Visual Analysis')) {\r\n    console.log('3D Message Debug:', {\r\n      messageId: m.id,\r\n      visualization3D: m.visualization3D,\r\n      visualData: m.visualData,\r\n      visualType: m.visualType,\r\n      shouldShow3D: shouldShow3D,\r\n      textIncludes3D: m.text.toLowerCase().includes('3d')\r\n    });\r\n  }\r\n\r\n  const userClasses = \"bg-blue-600 text-white rounded-xl max-w-[90%] px-4 py-2 shadow-md break-words\";\r\n  const assistantLight = \"bg-gradient-to-r from-gray-50 to-white border border-gray-100 text-gray-900 rounded-xl max-w-[95%] px-4 py-2 shadow-sm break-words\";\r\n  const assistantDark = \"bg-gray-700 text-gray-100 rounded-xl max-w-[95%] px-4 py-2 shadow-sm border border-gray-700 break-words\";\r\n\r\n  return (\r\n    <div className={`flex ${isUser ? \"justify-end\" : \"justify-start\"} my-3`}>\r\n      <div className={`flex flex-col ${isUser ? \"items-end\" : \"items-start\"} min-w-0 w-full`}>\r\n        <div className={`${isUser ? userClasses : darkMode ? assistantDark : assistantLight}`}>\r\n          <div className=\"text-sm whitespace-pre-wrap\">\r\n            <ReactMarkdown\r\n              remarkPlugins={[remarkGfm]}\r\n              rehypePlugins={[rehypeRaw, rehypeSanitize]}\r\n            >\r\n              {m.text}\r\n            </ReactMarkdown>\r\n          </div>\r\n          \r\n          {/* 3D Visualization Integration */}\r\n          {shouldShow3D && (\r\n            <Chat3DVisualizer \r\n              visualType={m.visualType || 'globe'}\r\n              data={m.visualData || {}}\r\n              darkMode={darkMode}\r\n              title={m.visualTitle || \"Real-time 3D Analysis\"}\r\n              interactive={true}\r\n            />\r\n          )}\r\n          \r\n          {m.file && (\r\n            <div className=\"mt-2 text-xs\">\r\n              <a href={m.file.url} target=\"_blank\" rel=\"noreferrer\" className=\"underline\">\r\n                {m.file.name}\r\n              </a>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className={`text-[11px] mt-2 ${darkMode ? \"text-gray-400\" : \"text-gray-500\"}`}>\r\n          {new Date(m.timestamp).toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ChatComposer({ onSend, darkMode, onAttachClick, textareaRef, textValue, setTextValue, uploadedFile, setUploadedFile, onTyping }) {\r\n  function handleKeyDown(e) {\r\n    if (e.key === \"Enter\" && !e.shiftKey) {\r\n      e.preventDefault();\r\n      if (textValue && textValue.trim()) {\r\n        onSend(textValue.trim());\r\n        setTextValue(\"\");\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!textareaRef.current) return;\r\n    const ta = textareaRef.current;\r\n    ta.style.height = \"auto\";\r\n    const newHeight = Math.min(ta.scrollHeight, 220);\r\n    ta.style.height = `${newHeight}px`;\r\n  }, [textValue, textareaRef]);\r\n\r\n  return (\r\n    <div\r\n      className={`p-3 border-t ${darkMode ? \"border-gray-700 bg-gray-800\" : \"border-gray-200 bg-white\"}`}\r\n      style={{ boxShadow: darkMode ? \"0 -2px 8px rgba(0,0,0,0.6)\" : \"0 -2px 8px rgba(0,0,0,0.04)\" }}\r\n    >\r\n      {uploadedFile && (\r\n        <div className={`mb-3 p-3 rounded-md border ${darkMode ? \"bg-gray-900 border-gray-700 text-gray-100\" : \"bg-gray-50 border-gray-100 text-gray-900\"}`}>\r\n          <div className=\"flex items-center justify-between gap-4\">\r\n            <div className=\"min-w-0\">\r\n              <div className=\"font-medium truncate\">{uploadedFile.name}</div>\r\n              <div className=\"text-xs text-gray-400\">{(uploadedFile.size / 1024).toFixed(1)} KB</div>\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <button className=\"px-3 py-1 rounded-md border\" onClick={() => setUploadedFile(null)} aria-label=\"Remove file\">\r\n                x\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"flex items-end gap-2 min-w-0\">\r\n        <textarea\r\n          ref={textareaRef}\r\n          value={textValue}\r\n          onChange={(e) => { setTextValue(e.target.value); onTyping && onTyping(); }}\r\n          onKeyDown={handleKeyDown}\r\n          placeholder=\"Ask X-ULTRA anything...\"\r\n          className={`flex-1 min-w-0 resize-none rounded-lg px-4 py-3 border hide-scrollbar ${\r\n            darkMode ? \"border-gray-700 bg-gray-900 text-gray-100\" : \"border-gray-200 bg-gray-50 text-gray-900\"\r\n          } outline-none focus:ring-2 focus:ring-indigo-200`}\r\n          rows={1}\r\n          aria-label=\"Chat input\"\r\n          style={{ maxHeight: 220 }}\r\n        />\r\n\r\n        <div className=\"flex flex-col items-end\">\r\n          <button\r\n            onClick={() => {\r\n                if (textValue && textValue.trim()) {\r\n                  onSend(textValue.trim());\r\n                  setTextValue(\"\");\r\n                }\r\n              }}\r\n            aria-label=\"Send\"\r\n            className={`p-2 rounded-md ${textValue.trim() ? \"bg-indigo-600 text-white\" : \"bg-gray-200 text-gray-500\"}`}\r\n            style={{ width: 36, height: 36 }}\r\n          >\r\n            <FaPaperPlane size={14} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-3 flex items-center gap-3 flex-wrap\">\r\n        <button\r\n          onClick={onAttachClick}\r\n          aria-label=\"Attach file\"\r\n          className={`flex items-center gap-2 px-3 py-2 rounded-md border ${darkMode ? \"border-gray-700 text-gray-100 bg-gray-800\" : \"border-gray-200 text-gray-800 bg-white\"}`}\r\n        >\r\n          <FaPaperclip /> <span className=\"text-sm\">Upload Document</span>\r\n        </button>\r\n        \r\n        <button\r\n          onClick={() => {\r\n            const quickPrompts = [\r\n              \"Show me a 3D visualization of our organizational health\",\r\n              \"Display a 3D matrix of system performance\", \r\n              \"Create a 3D pyramid view of our performance hierarchy\"\r\n            ];\r\n            const randomPrompt = quickPrompts[Math.floor(Math.random() * quickPrompts.length)];\r\n            setTextValue(randomPrompt);\r\n          }}\r\n          aria-label=\"3D Visualization\"\r\n          className={`flex items-center gap-2 px-3 py-2 rounded-md border ${darkMode ? \"border-blue-600 text-blue-400 bg-blue-900/20\" : \"border-blue-300 text-blue-600 bg-blue-50\"}`}\r\n        >\r\n          <FaCube /> <span className=\"text-sm\">3D Visual</span>\r\n        </button>\r\n        \r\n        <button\r\n          onClick={() => {\r\n            setTextValue(\"Provide a comprehensive organizational health analysis with visual charts\");\r\n          }}\r\n          aria-label=\"Quick Analysis\"\r\n          className={`flex items-center gap-2 px-3 py-2 rounded-md border ${darkMode ? \"border-green-600 text-green-400 bg-green-900/20\" : \"border-green-300 text-green-600 bg-green-50\"}`}\r\n        >\r\n          <FaChartLine /> <span className=\"text-sm\">Analysis</span>\r\n        </button>\r\n        \r\n        <div className={`text-xs ${darkMode ? \"text-gray-400\" : \"text-gray-500\"}`}>\r\n          PDF, DOCX • 3D Visualizations • Real-time Analytics\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function CEOChat() {\r\n  const { darkMode } = useOutletContext();\r\n  const auth = useAuth();\r\n  const intelligence = useIntelligence();\r\n  const navigate = useNavigate();\r\n\r\n  // Debug environment variables on component mount\r\n  useEffect(() => {\r\n    console.log('🔍 ENVIRONMENT DEBUG:');\r\n    console.log('- process.env REACT_APP keys:', Object.keys(process.env).filter(key => key.startsWith('REACT_APP')));\r\n    console.log('- API Key from env:', process.env.REACT_APP_OPENROUTER_KEY ? 'Present' : 'Missing');\r\n    console.log('- API Key length:', process.env.REACT_APP_OPENROUTER_KEY ? process.env.REACT_APP_OPENROUTER_KEY.length : 0);\r\n    console.log('- All REACT_APP vars:', Object.keys(process.env).filter(k => k.startsWith('REACT_APP')).map(k => ({ [k]: process.env[k] ? 'SET' : 'UNSET' })));\r\n    \r\n    // Add a test button to the window for manual testing\r\n    window.testAPI = async () => {\r\n      const apiKey = process.env.REACT_APP_OPENROUTER_KEY;\r\n      console.log('🧪 MANUAL API TEST:');\r\n      console.log('- API Key available:', !!apiKey);\r\n      console.log('- API Key value (first 10 chars):', apiKey ? apiKey.substring(0, 10) + '...' : 'None');\r\n      \r\n      if (!apiKey) {\r\n        console.log('❌ No API key found - check .env file');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${apiKey}`,\r\n            'Content-Type': 'application/json',\r\n            'HTTP-Referer': window.location.origin,\r\n            'X-Title': 'CEO Assessment Chat'\r\n          },\r\n          body: JSON.stringify({\r\n            model: 'openai/gpt-3.5-turbo',\r\n            messages: [{ role: 'user', content: 'Test message' }],\r\n            max_tokens: 100\r\n          })\r\n        });\r\n        \r\n        console.log('📡 API Response status:', response.status);\r\n        const data = await response.json();\r\n        console.log('📡 API Response data:', data);\r\n      } catch (error) {\r\n        console.log('❌ API Test Error:', error);\r\n      }\r\n    };\r\n    \r\n    console.log('💡 Run window.testAPI() in console to test API connection manually');\r\n  }, []);\r\n\r\n  // State declarations first\r\n  const [selectedConversationId, setSelectedConversationId] = useState(\"c1\");\r\n\r\n  const [messages, setMessages] = useState([\r\n    { id: \"m0\", role: \"system\", text: \"Hello! I'm X-ULTRA, your premium Executive Intelligence Analyst. How can I assist you with strategic insights today?\", timestamp: new Date().toISOString() },\r\n  ]);\r\n\r\n  const [conversations, setConversations] = useState(() => {\r\n    try {\r\n      const saved = localStorage.getItem('conseqx_conversations_v1');\r\n      if (saved) {\r\n        return JSON.parse(saved);\r\n      }\r\n    } catch (error) {\r\n      console.warn('Failed to load conversations from localStorage:', error);\r\n    }\r\n    \r\n    // Default conversations if nothing in localStorage\r\n    return [\r\n      { \r\n        id: \"c1\", \r\n        title: \"Executive Summary Chat\", \r\n        lastMessage: \"Show me a 3D visualization of our organizational health with predictive analytics for Q4 planning\",\r\n        timestamp: new Date(Date.now() - 30 * 60 * 1000).toISOString(),\r\n        type: \"executive\",\r\n        hasVisualization: true,\r\n        messageCount: 12,\r\n        lastActivity: new Date(Date.now() - 15 * 60 * 1000).toISOString()\r\n      },\r\n      { \r\n        id: \"c2\", \r\n        title: \"Financial Health Review\", \r\n        lastMessage: \"Create a 3D matrix analysis of revenue streams and cost optimization opportunities\",\r\n        timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\r\n        type: \"financial\",\r\n        hasVisualization: true,\r\n        messageCount: 8,\r\n        lastActivity: new Date(Date.now() - 45 * 60 * 1000).toISOString()\r\n      },\r\n      {\r\n        id: \"c3\",\r\n        title: \"System Performance Deep Dive\",\r\n        lastMessage: \"Generate performance pyramid showing critical system interdependencies\",\r\n        timestamp: new Date(Date.now() - 4 * 60 * 60 * 1000).toISOString(),\r\n        type: \"analytics\",\r\n        hasVisualization: true,\r\n        messageCount: 15,\r\n        lastActivity: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString()\r\n      },\r\n      {\r\n        id: \"c4\",\r\n        title: \"Strategic Planning Session\",\r\n        lastMessage: \"What are the key organizational health metrics for board presentation?\",\r\n        timestamp: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\r\n        type: \"strategic\",\r\n        hasVisualization: false,\r\n        messageCount: 5,\r\n        lastActivity: new Date(Date.now() - 3 * 60 * 60 * 1000).toISOString()\r\n      }\r\n    ];\r\n  });\r\n\r\n  // Update conversation activity and metadata dynamically\r\n  useEffect(() => {\r\n    const updateConversation = () => {\r\n      setConversations(prev => \r\n        prev.map(conv => {\r\n          if (conv.id === selectedConversationId) {\r\n            const lastMessage = messages[messages.length - 1];\r\n            const hasVisualization = messages.some(msg => msg.visualization3D);\r\n            \r\n            return {\r\n              ...conv,\r\n              lastActivity: new Date().toISOString(),\r\n              messageCount: messages.length,\r\n              lastMessage: lastMessage?.role === 'user' ? lastMessage.text : conv.lastMessage,\r\n              hasVisualization: hasVisualization || conv.hasVisualization\r\n            };\r\n          }\r\n          return conv;\r\n        })\r\n      );\r\n    };\r\n\r\n    // Update conversation when messages are sent\r\n    if (messages.length > 1) { // More than just the welcome message\r\n      updateConversation();\r\n    }\r\n  }, [messages, selectedConversationId]);\r\n\r\n  // Sync conversations to localStorage whenever they change\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('conseqx_conversations_v1', JSON.stringify(conversations));\r\n    } catch (error) {\r\n      console.warn('Failed to save conversations to localStorage:', error);\r\n    }\r\n  }, [conversations]);\r\n\r\n  // Load messages when conversation changes\r\n  useEffect(() => {\r\n    try {\r\n      const savedMessages = localStorage.getItem(`conseqx_messages_${selectedConversationId}_v1`);\r\n      if (savedMessages) {\r\n        setMessages(JSON.parse(savedMessages));\r\n      } else {\r\n        // Default welcome message for new conversations\r\n        setMessages([\r\n          { id: `m0-${selectedConversationId}`, role: \"system\", text: \"Hello! I'm X-ULTRA, your premium Executive Intelligence Analyst. How can I assist you with strategic insights today?\", timestamp: new Date().toISOString() }\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.warn('Failed to load messages for conversation:', error);\r\n      setMessages([\r\n        { id: `m0-${selectedConversationId}`, role: \"system\", text: \"Hello! I'm X-ULTRA, your premium Executive Intelligence Analyst. How can I assist you with strategic insights today?\", timestamp: new Date().toISOString() }\r\n      ]);\r\n    }\r\n  }, [selectedConversationId]);\r\n\r\n  // Save messages whenever they change\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(`conseqx_messages_${selectedConversationId}_v1`, JSON.stringify(messages));\r\n    } catch (error) {\r\n      console.warn('Failed to save messages to localStorage:', error);\r\n    }\r\n  }, [messages, selectedConversationId]);\r\n\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const [userTyping, setUserTyping] = useState(false);\r\n\r\n  // Strategic Analysis Archive State\r\n  const [analysisArchive, setAnalysisArchive] = useState(() => {\r\n    try {\r\n      const saved = localStorage.getItem('conseqx_analysis_archive_v1');\r\n      return saved ? JSON.parse(saved) : [];\r\n    } catch (error) {\r\n      console.warn('Failed to load analysis archive:', error);\r\n      return [];\r\n    }\r\n  });\r\n\r\n  const [selectedFilter, setSelectedFilter] = useState('All');\r\n\r\n  // Intelligence Analysis Functions\r\n  const analyzeMessageForInsights = (message, messageId) => {\r\n    if (!message || message.role !== 'assistant') return null;\r\n\r\n    const text = message.text.toLowerCase();\r\n    const timestamp = new Date().toISOString();\r\n    \r\n    // Financial Analysis Detection\r\n    if (text.includes('revenue') || text.includes('financial') || text.includes('cost') || text.includes('profit') || text.includes('budget') || text.includes('roi')) {\r\n      return {\r\n        id: `analysis_${messageId}_${Date.now()}`,\r\n        title: 'Financial Performance Analysis',\r\n        category: 'Financial',\r\n        type: 'critical',\r\n        summary: extractFinancialInsights(message.text),\r\n        content: message.text,\r\n        timestamp: timestamp,\r\n        messageId: messageId,\r\n        downloadable: true,\r\n        priority: determinePriority(text)\r\n      };\r\n    }\r\n    \r\n    // Strategic Analysis Detection  \r\n    if (text.includes('strategic') || text.includes('planning') || text.includes('roadmap') || text.includes('objectives') || text.includes('goals')) {\r\n      return {\r\n        id: `analysis_${messageId}_${Date.now()}`,\r\n        title: 'Strategic Planning Insights',\r\n        category: 'Strategic',\r\n        type: 'strategic',\r\n        summary: extractStrategicInsights(message.text),\r\n        content: message.text,\r\n        timestamp: timestamp,\r\n        messageId: messageId,\r\n        downloadable: true,\r\n        priority: determinePriority(text)\r\n      };\r\n    }\r\n\r\n    // 3D/Visualization Analysis Detection\r\n    if (text.includes('3d') || text.includes('visualization') || text.includes('interactive') || message.visualization3D) {\r\n      return {\r\n        id: `analysis_${messageId}_${Date.now()}`,\r\n        title: '3D Interactive Analysis',\r\n        category: '3D Reports',\r\n        type: 'interactive',\r\n        summary: '3D visualization with interactive data exploration capabilities',\r\n        content: message.text,\r\n        timestamp: timestamp,\r\n        messageId: messageId,\r\n        downloadable: true,\r\n        priority: 'High',\r\n        isInteractive: true\r\n      };\r\n    }\r\n\r\n    // Operational Analysis Detection\r\n    if (text.includes('operational') || text.includes('efficiency') || text.includes('process') || text.includes('performance') || text.includes('optimization')) {\r\n      return {\r\n        id: `analysis_${messageId}_${Date.now()}`,\r\n        title: 'Operational Excellence Analysis',\r\n        category: 'Operational', \r\n        type: 'operational',\r\n        summary: extractOperationalInsights(message.text),\r\n        content: message.text,\r\n        timestamp: timestamp,\r\n        messageId: messageId,\r\n        downloadable: true,\r\n        priority: determinePriority(text)\r\n      };\r\n    }\r\n\r\n    // Risk Analysis Detection\r\n    if (text.includes('risk') || text.includes('compliance') || text.includes('security') || text.includes('threat') || text.includes('vulnerability')) {\r\n      return {\r\n        id: `analysis_${messageId}_${Date.now()}`,\r\n        title: 'Risk Assessment Analysis',\r\n        category: 'Risk',\r\n        type: 'risk',\r\n        summary: extractRiskInsights(message.text),\r\n        content: message.text,\r\n        timestamp: timestamp,\r\n        messageId: messageId,\r\n        downloadable: true,\r\n        priority: 'High Priority'\r\n      };\r\n    }\r\n\r\n    // General Executive Analysis (fallback for important insights)\r\n    if (text.length > 200 && (text.includes('analysis') || text.includes('insights') || text.includes('recommendations'))) {\r\n      return {\r\n        id: `analysis_${messageId}_${Date.now()}`,\r\n        title: 'X-ULTRA Executive Intelligence Brief',\r\n        category: 'Strategic',\r\n        type: 'executive',\r\n        summary: extractGeneralInsights(message.text),\r\n        content: message.text,\r\n        timestamp: timestamp,\r\n        messageId: messageId,\r\n        downloadable: true,\r\n        priority: 'Medium'\r\n      };\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  // Insight Extraction Functions\r\n  const extractFinancialInsights = (text) => {\r\n    const insights = [];\r\n    if (text.toLowerCase().includes('revenue')) insights.push('Revenue analysis');\r\n    if (text.toLowerCase().includes('cost')) insights.push('Cost optimization');\r\n    if (text.toLowerCase().includes('profit')) insights.push('Profitability metrics');\r\n    if (text.toLowerCase().includes('roi')) insights.push('ROI calculations');\r\n    return insights.length > 0 ? insights.join(', ') + ' identified' : 'Financial performance metrics and recommendations';\r\n  };\r\n\r\n  const extractStrategicInsights = (text) => {\r\n    const insights = [];\r\n    if (text.toLowerCase().includes('planning')) insights.push('Strategic planning');\r\n    if (text.toLowerCase().includes('roadmap')) insights.push('Roadmap development');\r\n    if (text.toLowerCase().includes('objectives')) insights.push('Objective alignment');\r\n    return insights.length > 0 ? insights.join(', ') + ' covered' : 'Strategic direction and planning recommendations';\r\n  };\r\n\r\n  const extractOperationalInsights = (text) => {\r\n    const insights = [];\r\n    if (text.toLowerCase().includes('efficiency')) insights.push('Efficiency improvements');\r\n    if (text.toLowerCase().includes('process')) insights.push('Process optimization');\r\n    if (text.toLowerCase().includes('performance')) insights.push('Performance metrics');\r\n    return insights.length > 0 ? insights.join(', ') + ' analyzed' : 'Operational excellence recommendations';\r\n  };\r\n\r\n  const extractRiskInsights = (text) => {\r\n    const insights = [];\r\n    if (text.toLowerCase().includes('security')) insights.push('Security assessment');\r\n    if (text.toLowerCase().includes('compliance')) insights.push('Compliance review');\r\n    if (text.toLowerCase().includes('risk')) insights.push('Risk evaluation');\r\n    return insights.length > 0 ? insights.join(', ') + ' completed' : 'Risk assessment and mitigation strategies';\r\n  };\r\n\r\n  const extractGeneralInsights = (text) => {\r\n    return text.substring(0, 120) + (text.length > 120 ? '...' : '');\r\n  };\r\n\r\n  const determinePriority = (text) => {\r\n    if (text.includes('critical') || text.includes('urgent') || text.includes('immediate')) return 'Critical';\r\n    if (text.includes('important') || text.includes('significant') || text.includes('priority')) return 'High Priority';\r\n    return 'Medium';\r\n  };\r\n\r\n  // Save analysis to archive\r\n  const saveAnalysisToArchive = (analysisData) => {\r\n    if (!analysisData) return;\r\n    \r\n    setAnalysisArchive(prev => {\r\n      const updated = [analysisData, ...prev].slice(0, 50); // Keep latest 50 analyses\r\n      \r\n      // Save to localStorage\r\n      try {\r\n        localStorage.setItem('conseqx_analysis_archive_v1', JSON.stringify(updated));\r\n      } catch (error) {\r\n        console.warn('Failed to save analysis archive:', error);\r\n      }\r\n      \r\n      return updated;\r\n    });\r\n  };\r\n\r\n  // Filter archive by category\r\n  const filteredArchive = useMemo(() => {\r\n    if (selectedFilter === 'All') return analysisArchive;\r\n    return analysisArchive.filter(item => item.category === selectedFilter);\r\n  }, [analysisArchive, selectedFilter]);\r\n\r\n  // Helper function to extract related metrics based on analysis category\r\n  const extractRelatedMetrics = (category) => {\r\n    const metricMap = {\r\n      'Financial': ['financialHealth'],\r\n      'Strategic': ['strategicAlignment'],\r\n      'Operational': ['operationalEfficiency'], \r\n      'Risk': ['riskLevel'],\r\n      '3D Reports': ['overallHealth']\r\n    };\r\n    return metricMap[category] || [];\r\n  };\r\n\r\n  // Update shared metrics based on analysis insights\r\n  const updateSharedMetricsFromAnalysis = (analysisInsight) => {\r\n    const { category, priority, content } = analysisInsight;\r\n    \r\n    // Simulate metric improvements based on analysis\r\n    if (category === 'Financial') {\r\n      const improvement = priority === 'Critical' ? -2 : priority === 'High Priority' ? 1 : 0.5;\r\n      intelligence.updateMetricFromChat('financialHealth', {\r\n        score: Math.min(100, intelligence.sharedMetrics.financialHealth.score + improvement),\r\n        trend: improvement > 0 ? `+${improvement}%` : `${improvement}%`\r\n      });\r\n    } else if (category === 'Strategic') {\r\n      const improvement = priority === 'Critical' ? -1 : priority === 'High Priority' ? 1.5 : 1;\r\n      intelligence.updateMetricFromChat('strategicAlignment', {\r\n        score: Math.min(100, intelligence.sharedMetrics.strategicAlignment.score + improvement),\r\n        trend: improvement > 0 ? `+${improvement}%` : `${improvement}%`\r\n      });\r\n    } else if (category === 'Operational') {\r\n      const improvement = priority === 'Critical' ? -1.5 : priority === 'High Priority' ? 1 : 0.8;\r\n      intelligence.updateMetricFromChat('operationalEfficiency', {\r\n        score: Math.min(100, intelligence.sharedMetrics.operationalEfficiency.score + improvement),\r\n        trend: improvement > 0 ? `+${improvement}%` : `${improvement}%`\r\n      });\r\n    } else if (category === 'Risk') {\r\n      const riskChange = priority === 'Critical' ? 5 : priority === 'High Priority' ? -2 : -1;\r\n      const currentScore = intelligence.sharedMetrics.riskLevel.score;\r\n      const newScore = Math.max(0, Math.min(100, currentScore + riskChange));\r\n      intelligence.updateMetricFromChat('riskLevel', {\r\n        score: newScore,\r\n        level: newScore < 30 ? 'Low' : newScore < 60 ? 'Medium' : 'High',\r\n        trend: riskChange > 0 ? `+${riskChange}%` : `${riskChange}%`\r\n      });\r\n    }\r\n  };\r\n\r\n  // Download analysis report\r\n  const downloadAnalysis = (analysisItem) => {\r\n    const reportContent = `\r\nX-ULTRA EXECUTIVE INTELLIGENCE REPORT\r\n=====================================\r\n\r\nTitle: ${analysisItem.title}\r\nCategory: ${analysisItem.category}\r\nPriority: ${analysisItem.priority}\r\nGenerated: ${new Date(analysisItem.timestamp).toLocaleString()}\r\n\r\nEXECUTIVE SUMMARY\r\n----------------\r\n${analysisItem.summary}\r\n\r\nDETAILED INTELLIGENCE ANALYSIS\r\n-----------------------------\r\n${analysisItem.content}\r\n\r\n---\r\nPowered by X-ULTRA Executive Intelligence\r\nConseQ-X CEO Assessment Platform\r\nReport ID: ${analysisItem.id}\r\n    `.trim();\r\n\r\n    const blob = new Blob([reportContent], { type: 'text/plain' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `${analysisItem.title.replace(/[^a-zA-Z0-9]/g, '_')}_${new Date().toISOString().split('T')[0]}.txt`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  // debounce typing indicator\r\n  const typingTimerRef = useRef(null);\r\n  const handleUserTyping = () => {\r\n    setUserTyping(true);\r\n    if (typingTimerRef.current) clearTimeout(typingTimerRef.current);\r\n    typingTimerRef.current = setTimeout(() => setUserTyping(false), 1200);\r\n  };\r\n\r\n  const fileInputRef = useRef(null);\r\n  const messagesRef = useRef(null);\r\n  const textareaRef = useRef(null);\r\n  const [textValue, setTextValue] = useState(\"\");\r\n  const [uploadedFile, setUploadedFile] = useState(null);\r\n\r\n  // Pull most recent assessments for org from local storage to power explainability.\r\n  // We respect the existing key and shape used by Assessments page.\r\n  const orgId = auth?.org?.id || \"anon\";\r\n  const [assessments, setAssessments] = useState(() => {\r\n    try {\r\n      const raw = localStorage.getItem(\"conseqx_assessments_v1\");\r\n      const all = raw ? JSON.parse(raw) : {};\r\n      return all[orgId] || [];\r\n    } catch {\r\n      return [];\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    function refresh() {\r\n      try {\r\n        const raw = localStorage.getItem(\"conseqx_assessments_v1\");\r\n        const all = raw ? JSON.parse(raw) : {};\r\n        setAssessments(all[orgId] || []);\r\n        \r\n        // Trigger re-render for 3D data preparation\r\n        const event = new CustomEvent('assessmentDataUpdated', {\r\n          detail: { assessments: all[orgId] || [], orgId }\r\n        });\r\n        window.dispatchEvent(event);\r\n      } catch {}\r\n    }\r\n    \r\n    const onStorage = (e) => {\r\n      if (e.key === \"conseqx_assessments_v1\" || e.key === null) refresh();\r\n    };\r\n    \r\n    window.addEventListener(\"storage\", onStorage);\r\n    \r\n    // Listen for uploads and data management updates\r\n    const onUploadsChange = (e) => {\r\n      if (e.key === \"conseqx_uploads_v1\" || e.key === null) refresh();\r\n    };\r\n    window.addEventListener(\"storage\", onUploadsChange);\r\n    \r\n    let bc;\r\n    try {\r\n      if (\"BroadcastChannel\" in window) {\r\n        bc = new BroadcastChannel(\"conseqx_assessments\");\r\n        bc.addEventListener(\"message\", (ev) => {\r\n          if (ev?.data?.type === \"assessments:update\" && ev?.data?.orgId === orgId) refresh();\r\n        });\r\n      }\r\n    } catch {}\r\n    \r\n    const poll = setInterval(refresh, 3000);\r\n    \r\n    // Initial load\r\n    refresh();\r\n    \r\n    return () => {\r\n      window.removeEventListener(\"storage\", onStorage);\r\n      window.removeEventListener(\"storage\", onUploadsChange);\r\n      clearInterval(poll);\r\n      if (bc) try { bc.close(); } catch {}\r\n    };\r\n  }, [orgId]);\r\n\r\n  const latestBySystem = useMemo(() => {\r\n    const map = {};\r\n    assessments.forEach((r) => {\r\n      if (!r.systemId) return;\r\n      const k = normalizeSystemKey(r.systemId);\r\n      const cur = map[k];\r\n      if (!cur || (cur.timestamp || 0) < (r.timestamp || 0)) map[k] = { ...r, systemId: k };\r\n    });\r\n    return map;\r\n  }, [assessments]);\r\n\r\n  const titleByKey = useMemo(() => {\r\n    const m = {};\r\n    CANONICAL_SYSTEMS.forEach((s) => (m[s.key] = s.title));\r\n    return m;\r\n  }, []);\r\n\r\n  // helper to detect 3D visualization requests\r\n  const needs3DVisualization = (t) => {\r\n    if (!t) return false;\r\n    const pattern = /\\b(3d|visual|chart|graph|show|display|analyze|analysis|organizational health|system overview|dashboard|matrix|globe|pyramid)\\b/i;\r\n    return pattern.test(t);\r\n  };\r\n\r\n  // prepare 3D visualization data from current assessments and uploads\r\n  const prepare3DData = () => {\r\n    // Combine data from assessments and uploads\r\n    const systemsData = {};\r\n    \r\n    // First, get data from assessments\r\n    Object.keys(latestBySystem).forEach(key => {\r\n      const system = latestBySystem[key];\r\n      const canonicalSystem = titleByKey[key] || key;\r\n      systemsData[key] = {\r\n        name: canonicalSystem,\r\n        score: system?.score || 0,\r\n        trend: system?.score > 70 ? 'up' : system?.score < 40 ? 'down' : 'stable',\r\n        systemId: key,\r\n        source: 'assessment',\r\n        timestamp: system?.timestamp || new Date().toISOString()\r\n      };\r\n    });\r\n    \r\n    // Then, supplement with upload data if available\r\n    try {\r\n      const uploadsRaw = localStorage.getItem('conseqx_uploads_v1');\r\n      const uploads = uploadsRaw ? JSON.parse(uploadsRaw) : [];\r\n      \r\n      if (uploads.length > 0) {\r\n        const latest = uploads[0];\r\n        CANONICAL_SYSTEMS.forEach(sys => {\r\n          if (!systemsData[sys.key]) {\r\n            const hasSystemData = Array.isArray(latest.analyzedSystems) && \r\n                                latest.analyzedSystems.includes(sys.key);\r\n            systemsData[sys.key] = {\r\n              name: sys.title,\r\n              score: hasSystemData ? Math.floor(60 + Math.random() * 30) : Math.floor(30 + Math.random() * 40),\r\n              trend: hasSystemData ? 'up' : 'stable',\r\n              systemId: sys.key,\r\n              source: hasSystemData ? 'upload' : 'estimated',\r\n              timestamp: latest.timestamp || new Date().toISOString()\r\n            };\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.warn('Error loading upload data for 3D visualization:', error);\r\n    }\r\n    \r\n    // Convert to array and ensure we have all canonical systems\r\n    const systems = CANONICAL_SYSTEMS.map(sys => {\r\n      return systemsData[sys.key] || {\r\n        name: sys.title,\r\n        score: Math.floor(40 + Math.random() * 30),\r\n        trend: 'stable',\r\n        systemId: sys.key,\r\n        source: 'default',\r\n        timestamp: new Date().toISOString()\r\n      };\r\n    });\r\n\r\n    const overall_health = systems.length > 0 \r\n      ? Math.round(systems.reduce((sum, s) => sum + s.score, 0) / systems.length)\r\n      : 0;\r\n\r\n    return {\r\n      systems,\r\n      overall_health,\r\n      timestamp: new Date().toISOString(),\r\n      total_systems: systems.length,\r\n      critical_systems: systems.filter(s => s.score < 40).length,\r\n      excellent_systems: systems.filter(s => s.score > 80).length,\r\n      improving_systems: systems.filter(s => s.trend === 'up').length,\r\n      data_sources: {\r\n        assessments: systems.filter(s => s.source === 'assessment').length,\r\n        uploads: systems.filter(s => s.source === 'upload').length,\r\n        estimated: systems.filter(s => s.source === 'estimated').length,\r\n        default: systems.filter(s => s.source === 'default').length\r\n      }\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (messagesRef.current) {\r\n      messagesRef.current.scrollTop = messagesRef.current.scrollHeight + 200;\r\n    }\r\n  }, [messages, isGenerating]);\r\n\r\n  function simulateAssistantReply(prompt) {\r\n    setIsGenerating(true);\r\n    \r\n    // Enhanced intelligent response generation\r\n    const lowerPrompt = prompt.toLowerCase();\r\n    const systems = Object.keys(latestBySystem);\r\n    const data3D = prepare3DData();\r\n    \r\n    let lines = [];\r\n    \r\n    // Greeting and context awareness\r\n    const greetings = [\r\n      \"I'm here to help with your organizational health analysis! 🚀\",\r\n      \"Let me analyze your current organizational performance...\",\r\n      \"Great question! Here's what I can see from your recent data:\",\r\n      \"Based on your organizational health metrics, here's my analysis:\"\r\n    ];\r\n    lines.push(greetings[Math.floor(Math.random() * greetings.length)]);\r\n    \r\n    // Check for specific query types and respond intelligently\r\n    if (lowerPrompt.includes('score') || lowerPrompt.includes('performance') || lowerPrompt.includes('health')) {\r\n      lines.push(`\\n📊 **Overall Organizational Health: ${data3D.overall_health}%**`);\r\n      lines.push(`• Total Systems Analyzed: ${data3D.total_systems}`);\r\n      lines.push(`• Critical Systems Needing Attention: ${data3D.critical_systems}`);\r\n      lines.push(`• Systems Performing Excellently: ${data3D.excellent_systems}`);\r\n      lines.push(`• Systems Currently Improving: ${data3D.improving_systems}`);\r\n    }\r\n    \r\n    if (lowerPrompt.includes('system') || lowerPrompt.includes('department')) {\r\n      lines.push(\"\\n🏢 **Key System Performance:**\");\r\n      data3D.systems.slice(0, 5).forEach(sys => {\r\n        const statusIcon = sys.score > 80 ? '✅' : sys.score > 60 ? '⚠️' : '🚨';\r\n        const trendIcon = sys.trend === 'up' ? '📈' : sys.trend === 'down' ? '📉' : '➡️';\r\n        lines.push(`${statusIcon} **${sys.name}**: ${sys.score}% ${trendIcon}`);\r\n      });\r\n    }\r\n    \r\n    if (lowerPrompt.includes('recommendation') || lowerPrompt.includes('action') || lowerPrompt.includes('plan')) {\r\n      lines.push(\"\\n🎯 **Strategic Recommendations:**\");\r\n      if (data3D.critical_systems > 0) {\r\n        lines.push(`• **Priority 1**: Address ${data3D.critical_systems} critical system(s) requiring immediate attention`);\r\n        lines.push(\"• **Timeline**: 2-4 weeks for critical system stabilization\");\r\n        lines.push(\"• **Owner**: Department heads with C-suite oversight\");\r\n      }\r\n      lines.push(\"• **Priority 2**: Leverage high-performing systems to support struggling areas\");\r\n      lines.push(\"• **Priority 3**: Implement continuous monitoring and predictive analytics\");\r\n      lines.push(\"• **KPIs**: System scores >75%, reduced critical incidents by 50%\");\r\n    }\r\n    \r\n    if (lowerPrompt.includes('financial') || lowerPrompt.includes('revenue') || lowerPrompt.includes('cost')) {\r\n      lines.push(\"\\n💰 **Financial Health Insights:**\");\r\n      lines.push(\"• Systems optimization can reduce operational costs by 15-25%\");\r\n      lines.push(\"• High-performing systems correlate with 20% higher revenue efficiency\");\r\n      lines.push(\"• Predictive maintenance saves an average of ₦2-5M annually\");\r\n      lines.push(\"• ROI improvement expected within 6-12 months of system optimization\");\r\n    }\r\n    \r\n    // Check if user requested 3D visualization\r\n    const include3D = needs3DVisualization(prompt);\r\n    \r\n    if (include3D) {\r\n      lines.push(\"\\n🌐 **3D Visual Analysis**\");\r\n      lines.push(\"I'm generating an interactive 3D visualization of your organizational health data with:\");\r\n      lines.push(\"• Real-time system performance matrices\");\r\n      lines.push(\"• Holographic organizational health globe\");\r\n      lines.push(\"• Performance hierarchy pyramids\");\r\n      lines.push(\"• Advanced CSS 3D transforms with neural network overlays\");\r\n    }\r\n    \r\n    // Add contextual closing\r\n    if (systems.length === 0) {\r\n      lines.push(\"\\n💡 **Next Steps**: Start by running system assessments to get personalized insights!\");\r\n    } else {\r\n      lines.push(\"\\n💡 **Would you like me to:**\");\r\n      lines.push(\"• Generate a detailed 4-week action plan?\");\r\n      lines.push(\"• Create executive summary reports?\");\r\n      lines.push(\"• Show specific system deep-dive analysis?\");\r\n      lines.push(\"• Provide predictive analytics and forecasting?\");\r\n    }\r\n    \r\n    const replyText = lines.join(\"\\n\");\r\n    const id = `m-assistant-${Date.now()}`;\r\n    \r\n    // Prepare 3D visualization data if requested\r\n    const visualData = include3D ? data3D : null;\r\n    let visualType = 'globe';\r\n    if (prompt && prompt.toLowerCase().includes('matrix')) visualType = 'matrix';\r\n    if (prompt && prompt.toLowerCase().includes('pyramid')) visualType = 'pyramid';\r\n    \r\n    const initialMessage = { \r\n      id, \r\n      role: \"assistant\", \r\n      text: \"\", \r\n      timestamp: new Date().toISOString(),\r\n      ...(include3D && {\r\n        visualization3D: true,\r\n        visualData: visualData,\r\n        visualType: visualType,\r\n        visualTitle: `Organizational Health ${visualType === 'matrix' ? 'Matrix' : visualType === 'pyramid' ? 'Performance Hierarchy' : 'Universe'}`\r\n      })\r\n    };\r\n    \r\n    setMessages((prev) => [...prev, initialMessage]);\r\n    let idx = 0;\r\n    const interval = setInterval(() => {\r\n      idx += 30;\r\n      const chunk = replyText.slice(0, idx);\r\n      \r\n      // Preserve 3D visualization properties during text animation\r\n      const messageUpdate = {\r\n        text: chunk,\r\n        ...(include3D && {\r\n          visualization3D: true,\r\n          visualData: visualData,\r\n          visualType: visualType,\r\n          visualTitle: `Organizational Health ${visualType === 'matrix' ? 'Matrix' : visualType === 'pyramid' ? 'Performance Hierarchy' : 'Universe'}`\r\n        })\r\n      };\r\n      \r\n      setMessages((prev) => prev.map((m) => (m.id === id ? { ...m, ...messageUpdate } : m)));\r\n      if (idx >= replyText.length) {\r\n        clearInterval(interval);\r\n        setIsGenerating(false);\r\n      }\r\n    }, 50);\r\n  }\r\n\r\n\r\n  async function handleSendMessage(text) {\r\n    const userMsg = { id: `m-user-${Date.now()}`, role: \"user\", text, timestamp: new Date().toISOString(), file: uploadedFile ? { ...uploadedFile } : undefined };\r\n    setMessages((prev) => [...prev, userMsg]);\r\n    setUploadedFile(null);\r\n\r\n    // Show immediate assistant typing placeholder for friendliness\r\n    const placeholderId = `m-assistant-${Date.now()}`;\r\n    setMessages((prev) => [...prev, { id: placeholderId, role: \"assistant\", text: \"...\", timestamp: new Date().toISOString() }]);\r\n    setIsGenerating(true);\r\n\r\n    // Build scores map from latestBySystem\r\n    const scores = {};\r\n    Object.keys(latestBySystem).forEach((k) => {\r\n      scores[k] = latestBySystem[k]?.score ?? null;\r\n    });\r\n\r\n    // Helper to detect whether user asked about assessments/org\r\n    const needsAssessmentContext = (t) => {\r\n      if (!t) return false;\r\n      const pattern = /\\b(assess|assessment|score|scores|system|systems|results|report|priority|action plan|org|organization|company|revenue|metrics|kpi|kpis|how did we do|what is my score)\\b/i;\r\n      return pattern.test(t);\r\n    };\r\n\r\n    // Helper to detect if user is asking for assessment links\r\n    const askingForAssessmentLink = (t) => {\r\n      if (!t) return false;\r\n      const linkPattern = /\\b(link|url|navigate|go to|take me to|where|how do I|access|run|start)\\b.*\\b(assess|assessment|test|evaluation)\\b/i;\r\n      return linkPattern.test(t);\r\n    };\r\n\r\n    const openRouterKey = process.env.REACT_APP_OPENROUTER_KEY;\r\n    const modelUrl = \"https://openrouter.ai/api/v1/chat/completions\";\r\n    \r\n    // Debug API connection - More detailed\r\n    console.log('🔌 DETAILED API CONNECTION DEBUG:', {\r\n      hasApiKey: !!openRouterKey,\r\n      keyExists: openRouterKey !== undefined,\r\n      keyLength: openRouterKey ? openRouterKey.length : 0,\r\n      keyPrefix: openRouterKey ? openRouterKey.substring(0, 15) + '...' : 'No key found',\r\n      envVarSet: process.env.REACT_APP_OPENROUTER_KEY !== undefined,\r\n      modelUrl,\r\n      userQuery: text,\r\n      allEnvVars: Object.keys(process.env).filter(key => key.startsWith('REACT_APP'))\r\n    });\r\n\r\n    try {\r\n      setIsGenerating(true);\r\n      const assistantId = placeholderId;\r\n\r\n      // Special handling for assessment link requests\r\n      if (askingForAssessmentLink(text)) {\r\n        const linkResponse = `🎯 **Ready to run your organizational assessment?**\r\n\r\nHere are your assessment options:\r\n\r\n🔗 **Quick Access Links:**\r\n• **Systems Assessment**: Navigate to the \"Assessments\" tab in your dashboard\r\n• **Department Evaluation**: Click on \"Systems\" → \"Run Assessment\"  \r\n• **Comprehensive Analysis**: Use the main \"Assessment\" button in the top navigation\r\n\r\n📋 **Assessment Process:**\r\n1. Click on the \"Assessments\" tab in your left sidebar\r\n2. Select \"New Assessment\" or \"Run Systems Analysis\"\r\n3. Choose your organizational systems to evaluate\r\n4. Complete the assessment questionnaire\r\n5. Get instant results with actionable insights\r\n\r\n💡 **Pro Tip**: After completing assessments, return here for AI-powered analysis and 3D visualizations of your results!\r\n\r\nWould you like me to guide you through the assessment process step-by-step?`;\r\n\r\n        setMessages((prev) => prev.map((m) => (m.id === assistantId ? { \r\n          ...m, \r\n          text: linkResponse \r\n        } : m)));\r\n        setIsGenerating(false);\r\n        return;\r\n      }\r\n\r\n      // Check API key availability\r\n      if (!openRouterKey) {\r\n        console.error('❌ CRITICAL: No API key found!', {\r\n          envVar: 'REACT_APP_OPENROUTER_KEY',\r\n          currentValue: process.env.REACT_APP_OPENROUTER_KEY,\r\n          fallbackMode: 'Forced simulation'\r\n        });\r\n        simulateAssistantReply(text);\r\n        return;\r\n      }\r\n      \r\n      console.log('✅ API key confirmed, proceeding with API call');\r\n\r\n      // Determine if we need assessment context\r\n      const hasAssessmentData = Object.keys(scores).length > 0;\r\n      const needsAssessments = needsAssessmentContext(text) && hasAssessmentData;\r\n\r\n      // If user requested assessment/org context and we have assessment scores, include the report  \r\n      if (needsAssessments) {\r\n          const userInfo = { name: auth?.user?.name || auth?.user?.email || \"User\", org: auth?.org?.name || \"Organization\" };\r\n\r\n          // Build small docs from assessments: one summary per system plus recent notes\r\n          const docs = Object.values(latestBySystem || {}).map(r => ({\r\n            id: r.id || `${r.systemId}-${r.timestamp}`,\r\n            text: `System: ${r.systemId}\\nScore: ${r.score}\\nNotes: ${JSON.stringify(r.meta || {})}`,\r\n            meta: { systemId: r.systemId, score: r.score, timestamp: r.timestamp }\r\n          }));\r\n\r\n          const index = buildIndex(docs);\r\n          const hits = queryIndex(index, text, 6);\r\n          const reportChunks = hits.map(h => `- [${h.doc.meta.systemId}] score: ${h.doc.meta.score} — excerpt: ${h.doc.text.slice(0, 200)}`);\r\n          const report = reportChunks.join('\\n');\r\n\r\n          const systemPrompt = `You are an executive AI assistant with advanced 3D visualization capabilities. Use the following assessment report to answer the user's question precisely and with actionable recommendations. Use concise bullet points and suggested owners/KPIs when relevant. Always include African/Nigerian context where possible. \r\n\r\nWhen users request visual analysis, charts, graphs, or 3D views, mention that you're providing interactive 3D visualizations including organizational health globes, system matrices, and performance pyramids. These visualizations show real-time organizational health data with advanced CSS 3D transforms and holographic effects.`;\r\n\r\n          const chatPayload = {\r\n            model: \"mistralai/mistral-7b-instruct\",\r\n            messages: [\r\n              { role: \"system\", content: systemPrompt },\r\n              { role: \"system\", content: `AssessmentReport:\\n${report}` },\r\n              { role: \"user\", content: text }\r\n            ]\r\n          };\r\n\r\n        const res = await fetch(modelUrl, {\r\n          method: \"POST\",\r\n          headers: {\r\n            Authorization: `Bearer ${openRouterKey}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(chatPayload)\r\n        });\r\n\r\n        if (!res.ok) {\r\n          const errorText = await res.text();\r\n          console.error('🚨 API Call Failed (Assessment Context):', {\r\n            status: res.status,\r\n            statusText: res.statusText,\r\n            error: errorText,\r\n            fallbackMode: 'Enhanced Simulation'\r\n          });\r\n          // Use enhanced fallback instead of showing error\r\n          simulateAssistantReply(text);\r\n          return;\r\n        }\r\n\r\n        const payload = await res.json();\r\n        const output = payload.choices?.[0]?.message?.content ?? \"\";\r\n        \r\n        console.log('✅ API Call Successful (Assessment Context):', {\r\n          responseLength: output.length,\r\n          model: payload.model,\r\n          hasContent: !!output\r\n        });\r\n\r\n        // Check if user requested 3D visualization\r\n        const include3D = needs3DVisualization(text);\r\n        const visualData = include3D ? prepare3DData() : null;\r\n        \r\n        // Determine optimal 3D visualization type based on query\r\n        let visualType = 'globe';\r\n        if (text.toLowerCase().includes('matrix') || text.toLowerCase().includes('comparison')) {\r\n          visualType = 'matrix';\r\n        } else if (text.toLowerCase().includes('hierarchy') || text.toLowerCase().includes('performance')) {\r\n          visualType = 'pyramid';\r\n        }\r\n\r\n        // Typing animation for the assistant reply with 3D visualization support\r\n        let idx = 0;\r\n        const total = output.length;\r\n        const tick = setInterval(() => {\r\n          idx = Math.min(total, idx + Math.max(20, Math.round(total / 30)));\r\n          const chunk = output.slice(0, idx);\r\n          \r\n          const messageUpdate = {\r\n            text: chunk,\r\n            ...(include3D && idx >= total && {\r\n              visualization3D: true,\r\n              visualData: visualData,\r\n              visualType: visualType,\r\n              visualTitle: `Organizational Health ${visualType === 'matrix' ? 'Matrix' : visualType === 'pyramid' ? 'Performance Hierarchy' : 'Universe'}`\r\n            })\r\n          };\r\n          \r\n          setMessages((prev) => prev.map((m) => (m.id === assistantId ? { ...m, ...messageUpdate } : m)));\r\n          if (idx >= total) {\r\n            clearInterval(tick);\r\n            setIsGenerating(false);\r\n            \r\n            // 🧠 INTELLIGENCE CAPTURE: Analyze completed message for insights\r\n            const finalMessage = {\r\n              id: assistantId,\r\n              role: 'assistant',\r\n              text: output,\r\n              timestamp: new Date().toISOString(),\r\n              ...(include3D && {\r\n                visualization3D: true,\r\n                visualData: visualData,\r\n                visualType: visualType\r\n              })\r\n            };\r\n            \r\n            const analysisInsight = analyzeMessageForInsights(finalMessage, assistantId);\r\n            if (analysisInsight) {\r\n              console.log('📊 Intelligence Captured:', analysisInsight.title, '-', analysisInsight.category);\r\n              saveAnalysisToArchive(analysisInsight);\r\n              \r\n              // 🔥 SYNC WITH INTELLIGENCE CONTEXT\r\n              intelligence.addInsight({\r\n                title: analysisInsight.title,\r\n                category: analysisInsight.category,\r\n                summary: analysisInsight.summary,\r\n                priority: analysisInsight.priority,\r\n                source: 'x-ultra-chat',\r\n                relatedMetrics: extractRelatedMetrics(analysisInsight.category)\r\n              });\r\n              \r\n              // Update shared metrics based on analysis\r\n              updateSharedMetricsFromAnalysis(analysisInsight);\r\n            }\r\n          }\r\n        }, 40);\r\n        return;\r\n      }\r\n\r\n      // Normal conversational flow — call model with a friendly system prompt (no heavy report)\r\n      console.log('📞 Making API call for general conversation');\r\n      \r\n      const contextualPrompt = intelligence.getContextualPrompt();\r\n      const friendlySystemPrompt = `You are X-ULTRA, the premium executive intelligence AI assistant with cutting-edge 3D visualization capabilities. Always introduce yourself as \"X-ULTRA\" when greeting users. Be warm, professional, and concise while maintaining your elite brand identity. \r\n      \r\n      CURRENT ORGANIZATIONAL CONTEXT: ${contextualPrompt}\r\n      \r\n      Use this real-time organizational data to provide contextual, relevant responses. When users ask about organizational health, reference the actual metrics. Answer conversational questions naturally with executive-level intelligence. When users ask about visual analysis or want to see data, offer to show them interactive 3D organizational health visualizations including rotating globes, system matrices, and performance pyramids with real-time holographic effects. \r\n      \r\n      Remember: You are X-ULTRA - the pinnacle of executive AI intelligence with real-time organizational awareness.`;\r\n      const chatPayload = {\r\n        model: \"mistralai/mistral-7b-instruct\",\r\n        messages: [\r\n          { role: \"system\", content: friendlySystemPrompt },\r\n          { role: \"user\", content: text }\r\n        ]\r\n      };\r\n\r\n      const res2 = await fetch(modelUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${openRouterKey}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(chatPayload)\r\n      });\r\n\r\n      if (!res2.ok) {\r\n        const errorText = await res2.text();\r\n        console.error('🚨 API Call Failed (Conversational):', {\r\n          status: res2.status,\r\n          statusText: res2.statusText,\r\n          error: errorText,\r\n          fallbackMode: 'Enhanced Simulation'\r\n        });\r\n        // Use enhanced fallback instead of showing error\r\n        simulateAssistantReply(text);\r\n        return;\r\n      }\r\n\r\n      const payload2 = await res2.json();\r\n      const output2 = payload2.choices?.[0]?.message?.content ?? \"\";\r\n      \r\n      console.log('✅ API Call Successful (Conversational):', {\r\n        responseLength: output2.length,\r\n        model: payload2.model,\r\n        hasContent: !!output2\r\n      });\r\n\r\n      let idx2 = 0;\r\n      const total2 = output2.length;\r\n      const tick2 = setInterval(() => {\r\n        idx2 = Math.min(total2, idx2 + Math.max(20, Math.round(total2 / 30)));\r\n        const chunk = output2.slice(0, idx2);\r\n        setMessages((prev) => prev.map((m) => (m.id === assistantId ? { ...m, text: chunk } : m)));\r\n        if (idx2 >= total2) {\r\n          clearInterval(tick2);\r\n          setIsGenerating(false);\r\n          \r\n          // 🧠 INTELLIGENCE CAPTURE: Analyze completed conversational message\r\n          const finalMessage = {\r\n            id: assistantId,\r\n            role: 'assistant',\r\n            text: output2,\r\n            timestamp: new Date().toISOString()\r\n          };\r\n          \r\n          const analysisInsight = analyzeMessageForInsights(finalMessage, assistantId);\r\n          if (analysisInsight) {\r\n            console.log('📊 Intelligence Captured:', analysisInsight.title, '-', analysisInsight.category);\r\n            saveAnalysisToArchive(analysisInsight);\r\n            \r\n            // 🔥 SYNC WITH INTELLIGENCE CONTEXT  \r\n            intelligence.addInsight({\r\n              title: analysisInsight.title,\r\n              category: analysisInsight.category,\r\n              summary: analysisInsight.summary,\r\n              priority: analysisInsight.priority,\r\n              source: 'x-ultra-chat',\r\n              relatedMetrics: extractRelatedMetrics(analysisInsight.category)\r\n            });\r\n            \r\n            // Update shared metrics based on analysis\r\n            updateSharedMetricsFromAnalysis(analysisInsight);\r\n          }\r\n        }\r\n      }, 40);\r\n\r\n    } catch (err) {\r\n      console.error('🔥 API Connection Error:', {\r\n        error: err.message,\r\n        stack: err.stack,\r\n        apiKey: openRouterKey ? 'Present' : 'Missing',\r\n        fallbackMode: 'Enhanced Simulation'\r\n      });\r\n      simulateAssistantReply(text);\r\n    }\r\n  }\r\n\r\n  function handleUploadFile(file) {\r\n    if (!file) return;\r\n    const url = URL.createObjectURL(file);\r\n    setUploadedFile({ name: file.name, size: file.size, url });\r\n  }\r\n\r\n  // Handler for creating new conversation\r\n  const handleNewConversation = () => {\r\n    const newId = `c${Date.now()}`;\r\n    const newConversation = {\r\n      id: newId,\r\n      title: \"New Conversation\",\r\n      timestamp: new Date().toISOString(),\r\n      lastActivity: new Date().toISOString(),\r\n      messageCount: 1,\r\n      hasVisualization: false\r\n    };\r\n    \r\n    setConversations(prev => [newConversation, ...prev]);\r\n    setSelectedConversationId(newId);\r\n    // Messages will be set by the useEffect hook when selectedConversationId changes\r\n  };\r\n\r\n  // Handler for quick 3D analysis\r\n  const handleQuick3DAnalysis = () => {\r\n    const analysisPrompts = [\r\n      \"Show me a comprehensive 3D visualization of our organizational health with real-time metrics\",\r\n      \"Create a 3D matrix analysis of all system performance indicators\", \r\n      \"Display a 3D pyramid hierarchy showing our performance landscape\",\r\n      \"Generate an interactive 3D globe view of our organizational universe\"\r\n    ];\r\n    const randomPrompt = analysisPrompts[Math.floor(Math.random() * analysisPrompts.length)];\r\n    setTextValue(randomPrompt);\r\n    \r\n    // Auto-send the message\r\n    setTimeout(() => {\r\n      handleSendMessage(randomPrompt);\r\n      setTextValue(\"\");\r\n    }, 100);\r\n  };\r\n\r\n  // Handler for quick reports\r\n  const handleQuickReport = () => {\r\n    const reportPrompts = [\r\n      \"Generate a comprehensive organizational health report with actionable insights\",\r\n      \"Create an executive dashboard summary with key performance metrics\", \r\n      \"Provide a detailed analysis of our systems performance with recommendations\",\r\n      \"Show me trending analytics and improvement opportunities across all systems\"\r\n    ];\r\n    const randomPrompt = reportPrompts[Math.floor(Math.random() * reportPrompts.length)];\r\n    setTextValue(randomPrompt);\r\n    \r\n    // Auto-send the message\r\n    setTimeout(() => {\r\n      handleSendMessage(randomPrompt);\r\n      setTextValue(\"\");\r\n    }, 100);\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n        <div\r\n          className={`md:col-span-1 rounded-2xl h-[62vh] overflow-hidden ${\r\n            darkMode ? \"border border-gray-700/50 bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900\" : \"border border-gray-200/50 bg-gradient-to-br from-white via-gray-50 to-white\"\r\n          } backdrop-blur-xl shadow-2xl`}\r\n        >\r\n          {/* Strategic Analysis Archive Header */}\r\n          <div className={`p-4 border-b ${darkMode ? 'border-gray-700/50' : 'border-gray-200/50'} backdrop-blur-sm`}>\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <div className={`w-10 h-10 rounded-full flex items-center justify-center ${\r\n                  darkMode ? 'bg-gradient-to-r from-purple-600 to-blue-600' : 'bg-gradient-to-r from-purple-500 to-blue-500'\r\n                } shadow-lg`}>\r\n                  <FaFileAlt className=\"text-white text-lg\" />\r\n                </div>\r\n                <div>\r\n                  <h3 className={`font-semibold ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n                    Strategic Analysis Archive\r\n                  </h3>\r\n                  <p className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>\r\n                    Generated insights & downloadable reports\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Archive Status */}\r\n              <div className=\"flex items-center gap-2\">\r\n                <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-pulse shadow-lg shadow-blue-400/50\"></div>\r\n                <span className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>Auto-Saving</span>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          {/* Strategic Analysis Archive Content */}\r\n          <div className=\"h-full overflow-auto hide-scrollbar\">\r\n            {/* Interactive Filter Bar */}\r\n            <div className=\"px-4 py-2 border-b border-gray-200/20\">\r\n              <div className=\"flex gap-2 overflow-x-auto hide-scrollbar scroll-smooth\">\r\n                {['All', 'Financial', 'Operational', 'Strategic', 'Risk', '3D Reports'].map((filter) => (\r\n                  <button\r\n                    key={filter}\r\n                    onClick={() => setSelectedFilter(filter)}\r\n                    className={`px-3 py-1.5 rounded-full text-xs font-medium whitespace-nowrap transition-all duration-200 ${\r\n                      selectedFilter === filter\r\n                        ? darkMode ? 'bg-emerald-600 text-white shadow-md' : 'bg-emerald-500 text-white shadow-md'\r\n                        : darkMode ? 'bg-gray-700/50 text-gray-300 hover:bg-gray-600/50' : 'bg-gray-200/50 text-gray-600 hover:bg-gray-300/50'\r\n                    } hover:scale-105`}\r\n                  >\r\n                    {filter}\r\n                    {/* Show count for each filter */}\r\n                    {filter !== 'All' && (\r\n                      <span className={`ml-1 px-1.5 py-0.5 text-xs rounded-full ${\r\n                        selectedFilter === filter \r\n                          ? 'bg-white/20' \r\n                          : darkMode ? 'bg-gray-600/50' : 'bg-gray-300/50'\r\n                      }`}>\r\n                        {analysisArchive.filter(item => item.category === filter).length}\r\n                      </span>\r\n                    )}\r\n                    {filter === 'All' && (\r\n                      <span className={`ml-1 px-1.5 py-0.5 text-xs rounded-full ${\r\n                        selectedFilter === filter \r\n                          ? 'bg-white/20' \r\n                          : darkMode ? 'bg-gray-600/50' : 'bg-gray-300/50'\r\n                      }`}>\r\n                        {analysisArchive.length}\r\n                      </span>\r\n                    )}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Latest Analysis Highlight */}\r\n            {analysisArchive.length > 0 && (\r\n              <div className={`mx-4 mt-4 mb-3 p-3 rounded-lg border-l-4 border-emerald-500 ${darkMode ? 'bg-emerald-900/20' : 'bg-emerald-50'} relative overflow-hidden`}>\r\n                <div className=\"absolute top-0 right-0 w-16 h-16 opacity-10\">\r\n                  <FaFileAlt className=\"w-full h-full text-emerald-500\" />\r\n                </div>\r\n                <div className=\"flex items-center justify-between mb-2\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <div className=\"w-2 h-2 bg-emerald-500 rounded-full animate-pulse\"></div>\r\n                    <h4 className={`font-semibold text-sm ${darkMode ? 'text-emerald-300' : 'text-emerald-700'}`}>Latest Analysis</h4>\r\n                  </div>\r\n                  <span className={`text-xs ${darkMode ? 'text-emerald-400' : 'text-emerald-600'}`}>\r\n                    {new Date(analysisArchive[0].timestamp).toLocaleString('en-US', { \r\n                      hour: '2-digit', \r\n                      minute: '2-digit',\r\n                      day: 'numeric',\r\n                      month: 'short'\r\n                    })}\r\n                  </span>\r\n                </div>\r\n                <p className={`text-xs ${darkMode ? 'text-emerald-200' : 'text-emerald-600'} mb-2 font-medium`}>\r\n                  {analysisArchive[0].title}\r\n                </p>\r\n                <p className={`text-xs ${darkMode ? 'text-emerald-200/80' : 'text-emerald-600/80'} mb-2`}>\r\n                  {analysisArchive[0].summary}\r\n                </p>\r\n                <div className=\"flex gap-2\">\r\n                  <button \r\n                    onClick={() => console.log('Viewing analysis:', analysisArchive[0])}\r\n                    className={`px-3 py-1 text-xs rounded-md ${darkMode ? 'bg-emerald-700 hover:bg-emerald-600 text-white' : 'bg-emerald-600 hover:bg-emerald-700 text-white'} transition-all duration-200 font-medium`}\r\n                  >\r\n                    View Report\r\n                  </button>\r\n                  <button \r\n                    onClick={() => downloadAnalysis(analysisArchive[0])}\r\n                    className={`px-3 py-1 text-xs rounded-md ${darkMode ? 'bg-gray-600 hover:bg-gray-500 text-white' : 'bg-gray-500 hover:bg-gray-600 text-white'} transition-all duration-200`}\r\n                  >\r\n                    Download\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Smart Recommendations Based on Metrics */}\r\n            {intelligence.sharedMetrics && (\r\n              <div className=\"mx-4 mb-4\">\r\n                {intelligence.generateRecommendations().slice(0, 2).map((rec, idx) => (\r\n                  <div key={idx} className={`mb-3 p-3 rounded-lg border-l-4 ${\r\n                    rec.priority === 'high' \r\n                      ? 'border-red-500 bg-red-900/10' \r\n                      : 'border-yellow-500 bg-yellow-900/10'\r\n                  }`}>\r\n                    <div className=\"flex items-center justify-between mb-2\">\r\n                      <h5 className={`font-medium text-sm ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n                        {rec.title}\r\n                      </h5>\r\n                      <span className={`px-2 py-0.5 rounded-full text-xs ${\r\n                        rec.priority === 'high' \r\n                          ? 'bg-red-100 text-red-700' \r\n                          : 'bg-yellow-100 text-yellow-700'\r\n                      }`}>\r\n                        {rec.priority}\r\n                      </span>\r\n                    </div>\r\n                    <p className={`text-xs ${darkMode ? 'text-gray-300' : 'text-gray-600'} mb-2`}>\r\n                      {rec.description}\r\n                    </p>\r\n                    <button\r\n                      onClick={() => handleSendMessage(`X-ULTRA, provide detailed analysis and action plan for ${rec.title.toLowerCase()}: ${rec.description}`)}\r\n                      className={`px-3 py-1 text-xs rounded ${darkMode ? 'bg-blue-600 hover:bg-blue-700 text-white' : 'bg-blue-500 hover:bg-blue-600 text-white'} transition-colors`}\r\n                    >\r\n                      Get Action Plan\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            {/* Empty State for New Users */}\r\n            {analysisArchive.length === 0 && (\r\n              <div className={`mx-4 mt-4 mb-3 p-4 rounded-lg border-2 border-dashed ${darkMode ? 'border-gray-600 bg-gray-800/30' : 'border-gray-300 bg-gray-50/30'} text-center`}>\r\n                <FaFileAlt className={`w-8 h-8 mx-auto mb-2 ${darkMode ? 'text-gray-500' : 'text-gray-400'}`} />\r\n                <h4 className={`font-medium text-sm ${darkMode ? 'text-gray-300' : 'text-gray-600'} mb-1`}>No Analysis Yet</h4>\r\n                <p className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>\r\n                  Start a conversation with X-ULTRA to build your Strategic Intelligence Archive\r\n                </p>\r\n                <button\r\n                  onClick={() => handleSendMessage(\"X-ULTRA, provide an executive overview of our current organizational health and key areas requiring immediate attention\")}\r\n                  className={`mt-3 px-4 py-2 text-xs rounded ${darkMode ? 'bg-emerald-600 hover:bg-emerald-700 text-white' : 'bg-emerald-500 hover:bg-emerald-600 text-white'} transition-colors`}\r\n                >\r\n                  Start Intelligence Analysis\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {/* Analysis Archive */}\r\n            {analysisArchive.length > 0 && (\r\n              <div className=\"mx-4 mb-4\">\r\n                <div className=\"flex items-center justify-between mb-3\">\r\n                  <h4 className={`font-semibold text-sm ${darkMode ? 'text-white' : 'text-gray-900'}`}>Analysis Archive</h4>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <span className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>\r\n                      {filteredArchive.length} {selectedFilter === 'All' ? 'reports' : selectedFilter.toLowerCase()}\r\n                    </span>\r\n                    <button \r\n                      onClick={() => {\r\n                        // Download all analyses as a combined report\r\n                        const combinedReport = filteredArchive.map(item => \r\n                          `${item.title}\\n${'='.repeat(item.title.length)}\\n${item.content}\\n\\n`\r\n                        ).join('');\r\n                        \r\n                        const blob = new Blob([combinedReport], { type: 'text/plain' });\r\n                        const url = URL.createObjectURL(blob);\r\n                        const a = document.createElement('a');\r\n                        a.href = url;\r\n                        a.download = `Strategic_Analysis_Archive_${new Date().toISOString().split('T')[0]}.txt`;\r\n                        document.body.appendChild(a);\r\n                        a.click();\r\n                        document.body.removeChild(a);\r\n                        URL.revokeObjectURL(url);\r\n                      }}\r\n                      className={`p-1 rounded ${darkMode ? 'hover:bg-gray-700' : 'hover:bg-gray-100'} transition-colors`}\r\n                    >\r\n                      <FaDownload className={`w-3 h-3 ${darkMode ? 'text-gray-400' : 'text-gray-500'}`} />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              \r\n                {/* Dynamic Analysis Cards */}\r\n                <div className=\"space-y-3\">\r\n                  {filteredArchive.length > 0 ? (\r\n                    filteredArchive.slice(0, 6).map((analysis) => {\r\n                      // Dynamic icon and color based on category\r\n                      const getCategoryIcon = (category) => {\r\n                        switch(category) {\r\n                          case 'Financial': return { icon: FaChartLine, color: 'amber' };\r\n                          case 'Strategic': return { icon: FaBullseye, color: 'blue' };\r\n                          case 'Operational': return { icon: FaCube, color: 'purple' };\r\n                          case 'Risk': return { icon: FaShieldAlt, color: 'red' };\r\n                          case '3D Reports': return { icon: FaCube, color: 'purple' };\r\n                          default: return { icon: FaFileAlt, color: 'gray' };\r\n                        }\r\n                      };\r\n\r\n                      const { icon: IconComponent, color } = getCategoryIcon(analysis.category);\r\n                      \r\n                      return (\r\n                        <div key={analysis.id} className={`p-3 rounded-lg border ${darkMode ? 'bg-gray-800/50 border-gray-700/30' : 'bg-white/50 border-gray-200/50'} hover:shadow-lg transition-all duration-200 group cursor-pointer backdrop-blur-sm`}>\r\n                          <div className=\"flex items-start justify-between mb-2\">\r\n                            <div className=\"flex items-center gap-3\">\r\n                              <div className={`w-10 h-10 rounded-lg flex items-center justify-center ${darkMode ? `bg-${color}-600/20 border border-${color}-600/30` : `bg-${color}-100 border border-${color}-200`} ${analysis.isInteractive ? 'relative' : ''}`}>\r\n                                <IconComponent className={`w-4 h-4 ${darkMode ? `text-${color}-400` : `text-${color}-600`}`} />\r\n                                {analysis.isInteractive && (\r\n                                  <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full animate-pulse\"></div>\r\n                                )}\r\n                              </div>\r\n                              <div>\r\n                                <h5 className={`font-medium text-sm ${darkMode ? 'text-white' : 'text-gray-900'}`}>{analysis.title}</h5>\r\n                                <p className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-600'}`}>{analysis.summary}</p>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-1\">\r\n                              <div className={`px-2 py-0.5 rounded-full text-xs font-medium ${\r\n                                analysis.priority === 'Critical' \r\n                                  ? darkMode ? 'bg-red-900/50 text-red-300' : 'bg-red-100 text-red-700'\r\n                                  : analysis.priority === 'High Priority' || analysis.priority === 'High'\r\n                                  ? darkMode ? 'bg-orange-900/50 text-orange-300' : 'bg-orange-100 text-orange-700'\r\n                                  : darkMode ? `bg-${color}-900/50 text-${color}-300` : `bg-${color}-100 text-${color}-700`\r\n                              }`}>\r\n                                {analysis.isInteractive ? '3D Interactive' : analysis.priority}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"flex items-center justify-between\">\r\n                            <span className={`text-xs ${darkMode ? 'text-gray-500' : 'text-gray-400'}`}>\r\n                              {new Date(analysis.timestamp).toLocaleDateString('en-US', { \r\n                                month: 'short', \r\n                                day: 'numeric', \r\n                                year: 'numeric' \r\n                              })} • X-ULTRA Insight\r\n                            </span>\r\n                            <div className=\"flex gap-1 opacity-0 group-hover:opacity-100 transition-all duration-200\">\r\n                              <button \r\n                                onClick={() => console.log('Viewing analysis:', analysis)}\r\n                                className={`px-2 py-1 text-xs rounded-md ${darkMode ? 'bg-blue-600 hover:bg-blue-700 text-white' : 'bg-blue-500 hover:bg-blue-600 text-white'} transition-colors font-medium`}\r\n                              >\r\n                                {analysis.isInteractive ? 'Launch 3D' : 'View'}\r\n                              </button>\r\n                              <button \r\n                                onClick={() => downloadAnalysis(analysis)}\r\n                                className={`px-2 py-1 text-xs rounded-md ${darkMode ? 'bg-green-600 hover:bg-green-700 text-white' : 'bg-green-500 hover:bg-green-600 text-white'} transition-colors`}\r\n                              >\r\n                                {analysis.category === 'Strategic' ? 'Board Copy' : 'Download'}\r\n                              </button>\r\n                              {analysis.priority === 'Critical' && (\r\n                                <button \r\n                                  onClick={() => console.log('Urgent action for:', analysis)}\r\n                                  className={`px-2 py-1 text-xs rounded-md ${darkMode ? 'bg-red-600 hover:bg-red-700 text-white' : 'bg-red-500 hover:bg-red-600 text-white'} transition-colors`}\r\n                                >\r\n                                  Urgent\r\n                                </button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <div className={`p-6 text-center rounded-lg border-2 border-dashed ${darkMode ? 'border-gray-600 text-gray-400' : 'border-gray-300 text-gray-500'}`}>\r\n                      <FaFileAlt className=\"w-12 h-12 mx-auto mb-3 opacity-50\" />\r\n                      <p className=\"text-sm font-medium mb-1\">No Analysis Available</p>\r\n                      <p className=\"text-xs\">Generate some intelligence reports to populate your archive</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Quick Generate Section */}\r\n            <div className=\"mx-4 mb-4\">\r\n              <h4 className={`font-semibold text-sm mb-3 ${darkMode ? 'text-white' : 'text-gray-900'}`}>Generate X-ULTRA Intelligence</h4>\r\n              \r\n              {/* Quick Partner Dashboard Actions */}\r\n              <div className=\"mb-3 p-3 rounded-lg border border-dashed border-blue-300/50\">\r\n                <div className={`text-xs font-medium mb-2 ${darkMode ? 'text-blue-300' : 'text-blue-700'} flex items-center gap-1`}>\r\n                  <FaChartPie className=\"w-3 h-3\" />\r\n                  Partner Dashboard Actions\r\n                </div>\r\n                <div className=\"flex gap-2\">\r\n                  <button\r\n                    onClick={() => navigate('/ceo/partner-dashboard/overview')}\r\n                    className={`px-2 py-1 text-xs rounded ${darkMode ? 'bg-blue-700/50 hover:bg-blue-600/50 text-blue-200' : 'bg-blue-100 hover:bg-blue-200 text-blue-700'} transition-colors`}\r\n                  >\r\n                    View Dashboard\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleSendMessage(\"X-ULTRA, analyze the current Partner Dashboard data and provide strategic recommendations based on real-time metrics\")}\r\n                    className={`px-2 py-1 text-xs rounded ${darkMode ? 'bg-green-700/50 hover:bg-green-600/50 text-green-200' : 'bg-green-100 hover:bg-green-200 text-green-700'} transition-colors`}\r\n                  >\r\n                    Analyze Dashboard\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"grid grid-cols-1 gap-2\">\r\n                <button\r\n                  onClick={() => handleSendMessage(\"X-ULTRA, generate a comprehensive executive intelligence summary report with key metrics, financial analysis, operational insights, strategic recommendations, and 3D visualizations for the board presentation\")}\r\n                  className={`w-full py-3 px-4 rounded-lg text-sm font-medium transition-all duration-200 ${\r\n                    darkMode ? 'bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 text-white' : 'bg-gradient-to-r from-indigo-500 to-purple-500 hover:from-indigo-600 hover:to-purple-600 text-white'\r\n                  } flex items-center justify-center space-x-2 hover:scale-105 shadow-lg border-2 border-transparent hover:border-white/20`}\r\n                >\r\n                  <FaFileAlt className=\"w-4 h-4\" />\r\n                  <span>X-ULTRA Intelligence Report</span>\r\n                </button>\r\n                \r\n                <button\r\n                  onClick={() => handleSendMessage(\"X-ULTRA, create a detailed 3D organizational health analysis with interactive visualizations, performance metrics, predictive insights, and strategic planning recommendations\")}\r\n                  className={`w-full py-3 px-4 rounded-lg text-sm font-medium transition-all duration-200 ${\r\n                    darkMode ? 'bg-gradient-to-r from-emerald-600 to-teal-600 hover:from-emerald-700 hover:to-teal-700 text-white' : 'bg-gradient-to-r from-emerald-500 to-teal-500 hover:from-emerald-600 hover:to-teal-600 text-white'\r\n                  } flex items-center justify-center space-x-2 hover:scale-105 shadow-lg border-2 border-transparent hover:border-white/20`}\r\n                >\r\n                  <FaCube className=\"w-4 h-4\" />\r\n                  <span>X-ULTRA 3D Analysis</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Partner Dashboard Integration Widget */}\r\n            <div className={`mx-4 mb-4 p-4 rounded-xl ${darkMode ? 'bg-gradient-to-r from-blue-900/20 to-purple-900/20 border border-blue-700/30' : 'bg-gradient-to-r from-blue-50/50 to-purple-50/50 border border-blue-200/30'} backdrop-blur-sm`}>\r\n              <h4 className={`text-xs font-semibold mb-3 ${darkMode ? 'text-blue-300' : 'text-blue-700'} uppercase tracking-wide flex items-center gap-2`}>\r\n                <FaChartLine className=\"w-3 h-3\" />\r\n                Live Dashboard Metrics\r\n              </h4>\r\n              <div className=\"grid grid-cols-2 gap-3\">\r\n                <div className=\"text-center\">\r\n                  <div className={`text-lg font-bold mb-1 ${darkMode ? 'text-green-400' : 'text-green-600'}`}>\r\n                    {intelligence.sharedMetrics.financialHealth.score}%\r\n                  </div>\r\n                  <div className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'} leading-tight`}>\r\n                    Financial Health\r\n                  </div>\r\n                  <div className={`text-xs ${intelligence.sharedMetrics.financialHealth.trend.includes('+') ? 'text-green-500' : 'text-red-500'}`}>\r\n                    {intelligence.sharedMetrics.financialHealth.trend}\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className={`text-lg font-bold mb-1 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`}>\r\n                    {intelligence.sharedMetrics.strategicAlignment.score}%\r\n                  </div>\r\n                  <div className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'} leading-tight`}>\r\n                    Strategic Alignment\r\n                  </div>\r\n                  <div className={`text-xs ${intelligence.sharedMetrics.strategicAlignment.trend.includes('+') ? 'text-green-500' : 'text-red-500'}`}>\r\n                    {intelligence.sharedMetrics.strategicAlignment.trend}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-3 pt-3 border-t border-gray-700/30\">\r\n                <div className=\"flex items-center justify-between text-xs\">\r\n                  <span className={darkMode ? 'text-gray-400' : 'text-gray-500'}>Overall Health:</span>\r\n                  <span className={`font-medium ${darkMode ? 'text-white' : 'text-gray-700'}`}>\r\n                    {intelligence.sharedMetrics.overallHealth.score}% ({intelligence.sharedMetrics.overallHealth.grade})\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Dynamic Archive Intelligence Stats */}\r\n            <div className={`mx-4 mb-4 p-4 rounded-xl ${darkMode ? 'bg-gradient-to-r from-gray-800/50 to-gray-900/50 border border-gray-700/30' : 'bg-gradient-to-r from-white/50 to-gray-50/50 border border-gray-200/30'} backdrop-blur-sm`}>\r\n              <h4 className={`text-xs font-semibold mb-3 ${darkMode ? 'text-gray-300' : 'text-gray-600'} uppercase tracking-wide`}>\r\n                X-ULTRA Intelligence Archive\r\n              </h4>\r\n              <div className=\"grid grid-cols-3 gap-4\">\r\n                <div className=\"text-center\">\r\n                  <div className={`text-xl font-bold mb-1 ${darkMode ? 'text-emerald-400' : 'text-emerald-600'}`}>\r\n                    {analysisArchive.length}\r\n                  </div>\r\n                  <div className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'} leading-tight`}>\r\n                    Analysis Reports\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className={`text-xl font-bold mb-1 ${darkMode ? 'text-purple-400' : 'text-purple-600'}`}>\r\n                    {analysisArchive.filter(item => item.isInteractive || item.category === '3D Reports').length}\r\n                  </div>\r\n                  <div className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'} leading-tight`}>\r\n                    3D Interactive\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className={`text-xl font-bold mb-1 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`}>\r\n                    {analysisArchive.length * 3 + 42}\r\n                  </div>\r\n                  <div className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'} leading-tight`}>\r\n                    Downloads\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {analysisArchive.length > 0 && (\r\n                <div className=\"mt-3 pt-3 border-t border-gray-700/30\">\r\n                  <div className=\"flex items-center justify-between text-xs\">\r\n                    <span className={darkMode ? 'text-gray-400' : 'text-gray-500'}>Last Analysis:</span>\r\n                    <span className={`font-medium ${darkMode ? 'text-white' : 'text-gray-700'}`}>\r\n                      {new Date(analysisArchive[0]?.timestamp).toLocaleString('en-US', { \r\n                        hour: '2-digit', \r\n                        minute: '2-digit',\r\n                        month: 'short',\r\n                        day: 'numeric'\r\n                      })}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div\r\n          className={`md:col-span-2 rounded-2xl p-0 md:p-4 h-[60vh] flex flex-col min-w-0 ${\r\n            darkMode ? \"border border-gray-700 bg-gray-900 text-gray-100\" : \"border border-gray-100 bg-white text-gray-900\"\r\n          }`}\r\n        >\r\n          <div className=\"flex items-center justify-between p-3 border-b\" style={{ borderColor: darkMode ? \"rgba(255,255,255,0.04)\" : \"\" }}>\r\n            <div>\r\n              <div className=\"font-semibold\">X-ULTRA Intelligence</div>\r\n              <div className={`text-xs ${darkMode ? \"text-gray-400\" : \"text-gray-400\"}`}>{isGenerating ? \"X-ULTRA is analyzing...\" : \"Ready for intelligence\"}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex-1 overflow-auto px-4 py-3 hide-scrollbar\" ref={messagesRef} style={{ WebkitOverflowScrolling: \"touch\" }}>\r\n            {messages.map((m) => (\r\n              <div key={m.id} className=\"my-3\">\r\n                {m.role === 'assistant' ? (\r\n                  <div className={`inline-block rounded-xl px-4 py-3 ${darkMode ? \"bg-gray-700 text-gray-100\" : \"bg-gray-50 text-gray-900\"}` }>\r\n                    <ReactMarkdown remarkPlugins={[remarkGfm]} rehypePlugins={[rehypeRaw, rehypeSanitize]}>{m.text}</ReactMarkdown>\r\n                  </div>\r\n                ) : (\r\n                  <MessageRow m={m} darkMode={darkMode} />\r\n                )}\r\n              </div>\r\n            ))}\r\n\r\n            {isGenerating && (\r\n              <div className=\"mt-2\">\r\n                <div className={`inline-block rounded-xl px-4 py-3 ${darkMode ? \"bg-gray-700 text-gray-100\" : \"bg-gray-100 text-gray-900\"}`}>\r\n                  <TypingIndicator darkMode={darkMode} />\r\n                </div>\r\n              </div>\r\n            )}\r\n            {userTyping && (\r\n              <div className=\"mt-2 text-xs italic text-gray-400\">You are typing...</div>\r\n            )}\r\n          </div>\r\n\r\n          <ChatComposer\r\n            onSend={(t) => handleSendMessage(t)}\r\n            darkMode={darkMode}\r\n            onAttachClick={() => fileInputRef.current && fileInputRef.current.click()}\r\n            textareaRef={textareaRef}\r\n            textValue={textValue}\r\n            setTextValue={setTextValue}\r\n            uploadedFile={uploadedFile}\r\n            setUploadedFile={setUploadedFile}\r\n            onTyping={handleUserTyping}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* hidden file input */}\r\n      <input\r\n        ref={fileInputRef}\r\n        type=\"file\"\r\n        className=\"hidden\"\r\n        onChange={(e) => {\r\n          const f = e.target.files?.[0];\r\n          if (f) handleUploadFile(f);\r\n          e.target.value = \"\";\r\n        }}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n"],"names":["CANONICAL_SYSTEMS","key","title","description","icon","color","order","LEGACY_TO_CANONICAL","normalizeSystemKey","systemKey","normalized","toLowerCase","trim","getSystemsForUI","sort","a","b","map","system","id","weightSum","Object","values","reduce","sum","w","Math","abs","console","warn","concat","toFixed","tokenize","text","replace","split","filter","Boolean","queryIndex","index","query","topK","arguments","length","undefined","docs","scored","qTokens","qtf","create","forEach","t","qvec","qnorm","entries","_ref2","f","val","idf","sqrt","docVectors","_ref3","i","vec","norm","dot","_ref4","v","sim","scoreQuery","s","slice","score","doc","defaultSchema","strip","clobberPrefix","clobber","ancestors","tbody","tfoot","thead","td","th","tr","protocols","href","cite","src","longDesc","tagNames","attributes","img","input","li","div","blockquote","del","ins","q","required","type","disabled","own","hasOwnProperty","nodeSchema","root","children","all","doctype","schema","allowDoctypes","name","handleDoctypeName","comment","allowComments","value","handleCommentValue","element","tagName","handleTagName","properties","node","stack","attrs","reqs","props","allowed","assign","toPropertyValueMap","call","result","definition","data","Array","isArray","handlePropertyValues","handlePropertyValue","_","allow","position","one","replacement","includes","results","push","pop","indexOf","prop","url","String","colon","questionMark","numberSign","slash","safeProtocol","some","test","rehypeSanitize","options","tree","ctx","hastUtilSanitize","CHART_STYLES","OrganizationalHealthGlobe","_ref","_data$systems","darkMode","globeRef","useRef","useEffect","current","style","animation","_jsxs","className","_jsx","ref","systems","background","top","left","sin","boxShadow","SystemMatrix","_data$systems2","transform","height","transformOrigin","PerformancePyramid","width","bottom","Chat3DVisualizer","_visualData$systems","_visualData$systems2","visualType","interactive","currentView","setCurrentView","useState","liveData","setLiveData","containerRef","handleDataUpdate","event","detail","assessments","prevData","_objectSpread","lastUpdated","Date","toISOString","isLive","window","addEventListener","handleStorageChange","e","removeEventListener","defaultData","trend","source","overall_health","timestamp","total_systems","critical_systems","excellent_systems","improving_systems","data_sources","uploads","estimated","default","visualData","onClick","renderVisualization","random","animationDelay","toLocaleTimeString","hour","minute","TypingIndicator","dotClass","MessageRow","m","isUser","role","shouldShow3D","visualization3D","includeVisualization","log","messageId","textIncludes3D","ReactMarkdown","remarkPlugins","remarkGfm","rehypePlugins","rehypeRaw","visualTitle","file","target","rel","ChatComposer","onSend","onAttachClick","textareaRef","textValue","setTextValue","uploadedFile","setUploadedFile","onTyping","ta","newHeight","min","scrollHeight","size","onChange","onKeyDown","shiftKey","preventDefault","placeholder","rows","maxHeight","FaPaperPlane","FaPaperclip","quickPrompts","randomPrompt","floor","FaCube","FaChartLine","CEOChat","_auth$org","_analysisArchive$","useOutletContext","auth","useAuth","intelligence","useIntelligence","navigate","useNavigate","keys","process","startsWith","k","testAPI","async","apiKey","substring","response","fetch","method","headers","location","origin","body","JSON","stringify","model","messages","content","max_tokens","status","json","error","selectedConversationId","setSelectedConversationId","setMessages","conversations","setConversations","saved","localStorage","getItem","parse","lastMessage","now","hasVisualization","messageCount","lastActivity","prev","conv","msg","setItem","savedMessages","isGenerating","setIsGenerating","userTyping","setUserTyping","analysisArchive","setAnalysisArchive","selectedFilter","setSelectedFilter","analyzeMessageForInsights","message","category","summary","extractFinancialInsights","downloadable","priority","determinePriority","extractStrategicInsights","isInteractive","extractOperationalInsights","extractRiskInsights","extractGeneralInsights","insights","join","saveAnalysisToArchive","analysisData","updated","filteredArchive","useMemo","item","extractRelatedMetrics","updateSharedMetricsFromAnalysis","analysisInsight","improvement","updateMetricFromChat","sharedMetrics","financialHealth","strategicAlignment","operationalEfficiency","riskChange","currentScore","riskLevel","newScore","max","level","downloadAnalysis","analysisItem","reportContent","toLocaleString","blob","Blob","URL","createObjectURL","document","createElement","download","appendChild","click","removeChild","revokeObjectURL","typingTimerRef","fileInputRef","messagesRef","orgId","org","setAssessments","raw","_unused","refresh","CustomEvent","dispatchEvent","_unused2","onStorage","onUploadsChange","bc","BroadcastChannel","ev","_ev$data","_ev$data2","_unused3","poll","setInterval","clearInterval","close","_unused4","latestBySystem","r","systemId","cur","titleByKey","needs3DVisualization","prepare3DData","systemsData","canonicalSystem","uploadsRaw","latest","sys","hasSystemData","analyzedSystems","round","simulateAssistantReply","prompt","lowerPrompt","data3D","lines","greetings","statusIcon","trendIcon","include3D","replyText","initialMessage","idx","interval","chunk","messageUpdate","handleSendMessage","userMsg","placeholderId","scores","_latestBySystem$k$sco","_latestBySystem$k","openRouterKey","modelUrl","hasApiKey","keyExists","keyLength","keyPrefix","envVarSet","userQuery","allEnvVars","_payload2$choices$0$m","_payload2$choices","_payload2$choices$","_payload2$choices$$me","assistantId","linkResponse","hasAssessmentData","needsAssessments","needsAssessmentContext","_auth$user","_auth$user2","_auth$org2","_payload$choices$0$me","_payload$choices","_payload$choices$","_payload$choices$$mes","user","email","N","termDocCount","docTerms","d","toks","tf","buildIndex","meta","hits","report","h","chatPayload","res","Authorization","ok","errorText","statusText","fallbackMode","payload","output","choices","responseLength","hasContent","total","tick","finalMessage","addInsight","relatedMetrics","contextualPrompt","getContextualPrompt","res2","payload2","output2","idx2","total2","tick2","err","scrollTop","FaFileAlt","day","month","generateRecommendations","rec","combinedReport","repeat","FaDownload","analysis","IconComponent","FaBullseye","FaShieldAlt","getCategoryIcon","toLocaleDateString","year","FaChartPie","overallHealth","grade","borderColor","WebkitOverflowScrolling","handleUserTyping","clearTimeout","setTimeout","_e$target$files","files","handleUploadFile"],"sourceRoot":""}