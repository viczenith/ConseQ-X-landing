{"version":3,"file":"static/js/120.594e1efc.chunk.js","mappings":"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","sources":["pages/CEO_Dashboard/CEODashboardComponents/Revenue.js"],"sourcesContent":["// src/pages/CEO/Revenue.js\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../contexts/AuthContext\";\r\nimport {\r\n  ResponsiveContainer,\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\nimport {\r\n  FaDownload,\r\n  FaCalendarPlus,\r\n  FaChartLine,\r\n  FaPlus,\r\n  FaShareAlt,\r\n  FaTimes,\r\n  FaSave,\r\n} from \"react-icons/fa\";\r\n\r\n/* ---------- helpers ---------- */\r\nconst months = (startMonth = 0, count = 24) => {\r\n  const names = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n  const now = new Date();\r\n  const out = [];\r\n  for (let i = 0; i < count; i++) {\r\n    const d = new Date(now.getFullYear(), now.getMonth() + startMonth + i, 1);\r\n    out.push(`${names[d.getMonth()]} ${String(d.getFullYear()).slice(-2)}`);\r\n  }\r\n  return out;\r\n};\r\n\r\nfunction genMockProjections() {\r\n  const labels = months(0, 24);\r\n  let baseMonthly = 1200000 / 12;\r\n  const data = labels.map((lbl, idx) => {\r\n    const seasonal = Math.sin(idx / 3) * 0.03;\r\n    const shortG = 0.003 * idx;\r\n    const midG = 0.008 * idx;\r\n    const longG = 0.016 * idx;\r\n    const shortVal = Math.round(baseMonthly * (1 + shortG + seasonal) * (1 + Math.random() * 0.01));\r\n    const midVal = Math.round(baseMonthly * (1 + midG + seasonal) * (1 + Math.random() * 0.01));\r\n    const longVal = Math.round(baseMonthly * (1 + longG + seasonal) * (1 + Math.random() * 0.01));\r\n    baseMonthly = baseMonthly * (1 + 0.0025);\r\n    return { month: lbl, short: shortVal, mid: midVal, long: longVal };\r\n  });\r\n  return data;\r\n}\r\n\r\nconst TASK_STORAGE = \"conseqx_tasks_v1\";\r\nconst REMINDER_STORAGE = \"conseqx_reminders_v1\";\r\n\r\nfunction readJSON(k, fallback) {\r\n  try {\r\n    const raw = localStorage.getItem(k);\r\n    return raw ? JSON.parse(raw) : fallback;\r\n  } catch {\r\n    return fallback;\r\n  }\r\n}\r\nfunction writeJSON(k, v) {\r\n  try {\r\n    localStorage.setItem(k, JSON.stringify(v));\r\n  } catch {}\r\n}\r\n\r\n/* ---------- small Modal component ---------- */\r\nfunction Modal({ open, onClose, title, children, footer, darkMode }) {\r\n  if (!open) return null;\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4\">\r\n      <div\r\n        className=\"absolute inset-0\"\r\n        style={{ backgroundColor: darkMode ? \"rgba(0,0,0,0.6)\" : \"rgba(0,0,0,0.45)\" }}\r\n        onClick={onClose}\r\n      />\r\n      <div className={`relative z-10 w-full max-w-xl rounded-2xl p-4 ${darkMode ? \"bg-gray-900 border border-gray-700 text-gray-100\" : \"bg-white border border-gray-100 text-gray-900\"}`}>\r\n        <div className=\"flex items-center justify-between\">\r\n          <h3 className=\"text-lg font-semibold\">{title}</h3>\r\n          <button onClick={onClose} className=\"p-2 rounded-md text-gray-400\"><FaTimes /></button>\r\n        </div>\r\n\r\n        <div className=\"mt-3\">{children}</div>\r\n\r\n        {footer && <div className=\"mt-4 flex justify-end gap-2\">{footer}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n/* -------------------- Mock data generator -------------------- */\r\nfunction generateMockRevenue(months = 24, seed = Date.now()) {\r\n  let s = seed % 2147483647;\r\n  if (s <= 0) s += 2147483646;\r\n  function rnd() {\r\n    s = (s * 16807) % 2147483647;\r\n    return (s - 1) / 2147483646;\r\n  }\r\n\r\n  let customers = Math.round(300 + rnd() * 200);\r\n  let arpu = Math.round(18000 + rnd() * 12000);\r\n  const series = [];\r\n\r\n  let productShares = {\r\n    assessments: 0.45,\r\n    subscriptions: 0.35,\r\n    consulting: 0.12,\r\n    training: 0.08,\r\n  };\r\n\r\n  for (let i = 0; i < months; i++) {\r\n    const monthGrowth = 1 + (0.01 + (rnd() - 0.5) * 0.02);\r\n    const shock = rnd() < 0.05 ? (rnd() - 0.5) * 0.4 : 0;\r\n    const churnRate = 0.02 + rnd() * 0.04;\r\n    const newCustomers = Math.max(0, Math.round(customers * (0.02 + rnd() * 0.04) + (rnd() * 10)));\r\n    arpu = Math.round(arpu * (1 + (rnd() - 0.5) * 0.02 + (i % 6 === 0 ? (rnd() - 0.5) * 0.03 : 0)));\r\n    const retained = Math.round(customers * (1 - churnRate));\r\n    customers = Math.max(0, retained + newCustomers);\r\n    const mrr = Math.round(customers * arpu * (1 + shock));\r\n\r\n    Object.keys(productShares).forEach((k) => {\r\n      productShares[k] = Math.max(0.02, productShares[k] + (rnd() - 0.5) * 0.02);\r\n    });\r\n    const sum = Object.values(productShares).reduce((a, b) => a + b, 0);\r\n    Object.keys(productShares).forEach((k) => (productShares[k] = productShares[k] / sum));\r\n\r\n    const revenueByProduct = {\r\n      assessments: Math.round(mrr * productShares.assessments),\r\n      subscriptions: Math.round(mrr * productShares.subscriptions),\r\n      consulting: Math.round(mrr * productShares.consulting),\r\n      training: Math.round(mrr * productShares.training),\r\n    };\r\n\r\n    const grossMarginPct = 0.65 + (rnd() - 0.5) * 0.08;\r\n    const cac = Math.round(12000 + rnd() * 8000);\r\n    const clv = Math.round((arpu * (1 / churnRate)) * grossMarginPct);\r\n\r\n    series.push({\r\n      idx: i,\r\n      monthLabel: `M-${months - i}`,\r\n      mrr,\r\n      customers,\r\n      newCustomers,\r\n      churnRate,\r\n      arpu,\r\n      revenueTotal: mrr,\r\n      revenueByProduct,\r\n      grossMarginPct,\r\n      cac,\r\n      clv,\r\n      timestamp: Date.now() - (months - i - 1) * 30 * 24 * 3600 * 1000,\r\n    });\r\n  }\r\n\r\n  const totalTTM = series.slice(-12).reduce((s, x) => s + x.revenueTotal, 0);\r\n  const latest = series[series.length - 1];\r\n  const mrr = latest.mrr;\r\n  const arr = Math.round(mrr * 12);\r\n  const avgARPU = Math.round(series.reduce((s, x) => s + x.arpu, 0) / series.length);\r\n  const avgChurn = +(series.reduce((s, x) => s + x.churnRate, 0) / series.length).toFixed(3);\r\n\r\n  let yoy = null;\r\n  if (series.length >= 13) {\r\n    const prev = series[series.length - 13].mrr;\r\n    yoy = (((mrr - prev) / (prev || 1)) * 100).toFixed(1);\r\n  } else {\r\n    yoy = null;\r\n  }\r\n\r\n  const prodTotals = Object.keys(series[0].revenueByProduct).reduce((acc, k) => {\r\n    acc[k] = series.slice(-12).reduce((s, x) => s + x.revenueByProduct[k], 0);\r\n    return acc;\r\n  }, {});\r\n\r\n  const last3 = series.slice(-3).map((s) => s.mrr);\r\n  const avg3 = Math.round(last3.reduce((a, b) => a + b, 0) / last3.length || mrr);\r\n  const forecast = [1, 2, 3].map((i) => Math.round(avg3 * (1 + 0.01 * i)));\r\n\r\n  return {\r\n    series,\r\n    totalTTM,\r\n    latest,\r\n    mrr,\r\n    arr,\r\n    avgARPU,\r\n    avgChurn,\r\n    yoy,\r\n    prodTotals,\r\n    forecast,\r\n  };\r\n}\r\n\r\n/* -------------------- Small UI primitives -------------------- */\r\nfunction Card({ children, className = \"\", darkMode = false }) {\r\n  const base = `rounded-2xl p-4 border shadow-sm ${className}`;\r\n  const theme = darkMode ? \"bg-gray-900 border-gray-700 text-gray-100\" : \"bg-white border-gray-100 text-gray-900\";\r\n  return <div className={`${base} ${theme}`}>{children}</div>;\r\n}\r\n\r\n/* inline area sparkline (gradient fill + polyline) */\r\nfunction AreaSpark({ points = [], height = 90, darkMode = false }) {\r\n  if (!points || points.length === 0) return null;\r\n  const width = Math.max(240, points.length * 18);\r\n  const max = Math.max(...points);\r\n  const min = Math.min(...points);\r\n  const step = width / (points.length - 1);\r\n  const coords = points\r\n    .map((p, i) => {\r\n      const x = i * step;\r\n      const y = height - ((p - min) / (max - min || 1)) * (height - 8) - 4;\r\n      return `${x},${y}`;\r\n    })\r\n    .join(\" \");\r\n  const polyline = coords;\r\n  const areaPath = `M0,${height} L${coords} L${width},${height} Z`;\r\n\r\n  // pick stroke color that reads well in both themes\r\n  const strokeColor = darkMode ? \"#A78BFA\" : \"#6366F1\";\r\n  const gradientStart = darkMode ? \"#A78BFA\" : \"#4F46E5\";\r\n\r\n  return (\r\n    <svg width=\"100%\" height={height} viewBox={`0 0 ${width} ${height}`} preserveAspectRatio=\"none\" className=\"rounded\">\r\n      <defs>\r\n        <linearGradient id=\"g1\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\r\n          <stop offset=\"0%\" stopColor={gradientStart} stopOpacity=\"0.18\" />\r\n          <stop offset=\"100%\" stopColor={gradientStart} stopOpacity=\"0.04\" />\r\n        </linearGradient>\r\n      </defs>\r\n\r\n      <path d={areaPath} fill=\"url(#g1)\" />\r\n      <polyline points={polyline} fill=\"none\" stroke={strokeColor} strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\n/* small donut for product share */\r\nfunction Donut({ slices = {}, size = 120, darkMode = false }) {\r\n  const total = Object.values(slices).reduce((s, v) => s + v, 0) || 1;\r\n  let angle = -90;\r\n  const cx = size / 2;\r\n  const cy = size / 2;\r\n  const r = size / 2 - 6;\r\n  const parts = Object.keys(slices).map((k) => {\r\n    const value = slices[k];\r\n    const portion = value / total;\r\n    const sweep = portion * 360;\r\n    const start = (angle * Math.PI) / 180;\r\n    const end = ((angle + sweep) * Math.PI) / 180;\r\n    const x1 = cx + r * Math.cos(start);\r\n    const y1 = cy + r * Math.sin(start);\r\n    const x2 = cx + r * Math.cos(end);\r\n    const y2 = cy + r * Math.sin(end);\r\n    const large = sweep > 180 ? 1 : 0;\r\n    const d = `M ${cx} ${cy} L ${x1} ${y1} A ${r} ${r} 0 ${large} 1 ${x2} ${y2} Z`;\r\n    angle += sweep;\r\n    return { key: k, d, portion };\r\n  });\r\n\r\n  const palette = {\r\n    assessments: \"#7C3AED\",\r\n    subscriptions: \"#4F46E5\",\r\n    consulting: \"#0EA5A4\",\r\n    training: \"#F97316\",\r\n  };\r\n\r\n  const innerFill = darkMode ? \"#0f1724\" : \"#ffffff\";\r\n\r\n  return (\r\n    <svg width={size} height={size}>\r\n      {parts.map((p) => (\r\n        <path key={p.key} d={p.d} fill={palette[p.key]} opacity=\"0.95\" />\r\n      ))}\r\n      <circle cx={cx} cy={cy} r={r * 0.55} fill={innerFill} />\r\n    </svg>\r\n  );\r\n}\r\n\r\n/* -------------------- CEORevenue component -------------------- */\r\nexport default function CEORevenue({ initialMonths = 12 }) {\r\n  const { darkMode } = useOutletContext();\r\n  const [rangeMonths, setRangeMonths] = useState(initialMonths);\r\n  const [mock, setMock] = useState(() => generateMockRevenue(Math.max(6, rangeMonths), 1337));\r\n\r\n  useEffect(() => {\r\n    setMock(generateMockRevenue(Math.max(6, rangeMonths), 1337 + rangeMonths));\r\n  }, [rangeMonths]);\r\n\r\n  const points = useMemo(() => mock.series.map((s) => s.mrr), [mock]);\r\n  const latest = mock.latest;\r\n  const prodTotals = mock.prodTotals || {};\r\n  const topProduct = Object.entries(prodTotals).sort((a, b) => b[1] - a[1])[0]?.[0] || \"assessments\";\r\n\r\n  const auth = useAuth();\r\n\r\n  const data = useMemo(() => genMockProjections(), []);\r\n  const [tasks, setTasks] = useState(() => readJSON(TASK_STORAGE, []));\r\n  const [reminders, setReminders] = useState(() => readJSON(REMINDER_STORAGE, []));\r\n  const [schedulerOpen, setSchedulerOpen] = useState(false);\r\n  const [taskDraft, setTaskDraft] = useState({\r\n    title: \"\",\r\n    when: new Date().toISOString().slice(0, 16),\r\n    attendees: \"\",\r\n    notes: \"\",\r\n    source: \"\",\r\n  });\r\n  const [creatingFromRec, setCreatingFromRec] = useState(null); // optional prefilled suggestion text\r\n  const [shareBusy, setShareBusy] = useState(false);\r\n\r\n  useEffect(() => writeJSON(TASK_STORAGE, tasks), [tasks]);\r\n  useEffect(() => writeJSON(REMINDER_STORAGE, reminders), [reminders]);\r\n\r\n  // Recommendations derived from the mock forecast (digital twin narrative)\r\n  const recommendations = [\r\n    {\r\n      horizon: \"Short (0-3 months)\",\r\n      summary:\r\n        \"Stabilize capacity to prevent drop-offs. Focus on retention campaigns for top 20% customers. Immediate meeting: Growth + Customer Success to implement targeted promotions.\",\r\n      suggestedAttendees: [\"Head of Growth\", \"Head of CS\", \"Finance lead\"],\r\n      impact: \"Reduces churn and preserves monthly recurring revenue.\",\r\n    },\r\n    {\r\n      horizon: \"Mid (3-12 months)\",\r\n      summary:\r\n        \"Execute pricing experiment and channel expansion. Run pilot for SME quarterly promo. Suggested OKR: increase conversion by 6–10% in pilot cohort.\",\r\n      suggestedAttendees: [\"Head of Product\", \"Sales Lead\", \"Growth PM\"],\r\n      impact: \"Improves ARR and validates product-market fit for SME segment.\",\r\n    },\r\n    {\r\n      horizon: \"Long (1-3 years)\",\r\n      summary:\r\n        \"Invest in platform reliability and product-led growth channels. Consider strategic partnerships and larger enterprise plays backed by case studies from early pilots.\",\r\n      suggestedAttendees: [\"CEO\", \"CRO\", \"CTO\", \"Head of Partnerships\"],\r\n      impact: \"Positions company for higher valuation multiple and sustained ARR growth.\",\r\n    },\r\n  ];\r\n\r\n  function openScheduler(prefill = null) {\r\n    if (prefill) {\r\n      setTaskDraft({\r\n        title: prefill.title || `Action: ${prefill.horizon}`,\r\n        when: new Date(Date.now() + 24 * 3600 * 1000).toISOString().slice(0, 16),\r\n        attendees: (prefill.suggestedAttendees || []).join(\", \"),\r\n        notes: prefill.summary || \"\",\r\n        source: prefill.horizon || \"\",\r\n      });\r\n      setCreatingFromRec(prefill.horizon || null);\r\n    } else {\r\n      setTaskDraft({\r\n        title: \"\",\r\n        when: new Date(Date.now() + 24 * 3600 * 1000).toISOString().slice(0, 16),\r\n        attendees: \"\",\r\n        notes: \"\",\r\n        source: \"\",\r\n      });\r\n      setCreatingFromRec(null);\r\n    }\r\n    setSchedulerOpen(true);\r\n  }\r\n\r\n  function saveTask() {\r\n    const t = {\r\n      id: `task-${Date.now().toString(36)}`,\r\n      title: taskDraft.title || \"Untitled task\",\r\n      when: taskDraft.when,\r\n      attendees: taskDraft.attendees,\r\n      notes: taskDraft.notes,\r\n      source: taskDraft.source,\r\n      createdAt: Date.now(),\r\n      status: \"scheduled\",\r\n    };\r\n    setTasks((s) => [t, ...s]);\r\n    // also create a lightweight reminder record for upcoming meetings\r\n    setReminders((r) => [{ id: `rem-${Date.now().toString(36)}`, title: t.title, when: t.when, createdAt: Date.now(), done: false }, ...r]);\r\n    setSchedulerOpen(false);\r\n    // small in-UI confirm (browser alert minimal; replace with toast in your app)\r\n    try { window.Snackbar?.show?.({ message: \"Task saved\" }); } catch {}\r\n  }\r\n\r\n  async function handleShare(text) {\r\n    setShareBusy(true);\r\n    const payload = text || \"Revenue forecast suggestion\";\r\n    if (navigator.share) {\r\n      try {\r\n        await navigator.share({ title: \"Forecast suggestion\", text: payload });\r\n      } catch (e) {\r\n        // user cancelled\r\n      }\r\n    } else {\r\n      // fallback copy to clipboard\r\n      try {\r\n        await navigator.clipboard.writeText(payload);\r\n        alert(\"Copied to clipboard\");\r\n      } catch (e) {\r\n        alert(\"Unable to share (clipboard failed)\");\r\n      }\r\n    }\r\n    setShareBusy(false);\r\n  }\r\n\r\n  /* ---------- small utilities ---------- */\r\n  function handleTaskInput(k, v) {\r\n    setTaskDraft((s) => ({ ...s, [k]: v }));\r\n  }\r\n\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"flex items-start justify-between gap-4\">\r\n        <div>\r\n          <h3 className={`${darkMode ? \"text-gray-100\" : \"text-gray-900\"} text-lg font-semibold`}>Revenue & Financial Health</h3>\r\n          <div className={`${darkMode ? \"text-gray-300\" : \"text-sm text-gray-500\"}`}>Comprehensive revenue metrics and product breakdown (mock data)</div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center gap-2\">\r\n          <select\r\n            value={rangeMonths}\r\n            onChange={(e) => setRangeMonths(Number(e.target.value))}\r\n            className={`px-3 py-2 border rounded ${darkMode ? \"bg-gray-800 border-gray-700 text-gray-100\" : \"bg-white border-gray-200 text-gray-900\"}`}\r\n          >\r\n            <option value={3}>Last 3 months</option>\r\n            <option value={6}>Last 6 months</option>\r\n            <option value={12}>Last 12 months</option>\r\n            <option value={24}>Last 24 months</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-4 grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n        <Card darkMode={darkMode}>\r\n          <div className={`${darkMode ? \"text-gray-400\" : \"text-xs text-gray-400\"}`}>TTM Revenue</div>\r\n          <div className=\"text-2xl font-bold mt-1\">₦{(mock.totalTTM / 1e6).toFixed(2)}M</div>\r\n          <div className={`${darkMode ? \"text-gray-400\" : \"text-xs text-gray-400\"} mt-2`}>Trailing {Math.min(12, mock.series.length)} months</div>\r\n        </Card>\r\n\r\n        <Card darkMode={darkMode}>\r\n          <div className={`${darkMode ? \"text-gray-400\" : \"text-xs text-gray-400\"}`}>MRR (Latest)</div>\r\n          <div className=\"text-2xl font-bold mt-1\">₦{mock.mrr.toLocaleString()}</div>\r\n          <div className={`${darkMode ? \"text-gray-400\" : \"text-xs text-gray-400\"} mt-2`}>ARR ≈ ₦{mock.arr.toLocaleString()}</div>\r\n        </Card>\r\n\r\n        <Card darkMode={darkMode}>\r\n          <div className={`${darkMode ? \"text-gray-400\" : \"text-xs text-gray-400\"}`}>Avg ARPU</div>\r\n          <div className=\"text-2xl font-bold mt-1\">₦{mock.avgARPU.toLocaleString()}</div>\r\n          <div className={`${darkMode ? \"text-gray-400\" : \"text-xs text-gray-400\"} mt-2`}>Avg churn {(mock.avgChurn * 100).toFixed(1)}%</div>\r\n        </Card>\r\n\r\n        <Card darkMode={darkMode}>\r\n          <div className={`${darkMode ? \"text-gray-400\" : \"text-xs text-gray-400\"}`}>Top product</div>\r\n          <div className=\"text-2xl font-bold mt-1\">{topProduct.charAt(0).toUpperCase() + topProduct.slice(1)}</div>\r\n          <div className={`${darkMode ? \"text-gray-400\" : \"text-xs text-gray-400\"} mt-2`}>Share (last 12 mo): {Math.round((prodTotals[topProduct] || 0) / Math.max(1, mock.totalTTM) * 100)}%</div>\r\n        </Card>\r\n      </div>\r\n\r\n      <div className=\"mt-6 grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n        <div className=\"lg:col-span-2\">\r\n          <Card darkMode={darkMode} className=\"h-full\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <div className={`${darkMode ? \"text-gray-100\" : \"text-sm font-medium\"}`}>Revenue trend</div>\r\n                <div className={`${darkMode ? \"text-gray-400\" : \"text-xs text-gray-400\"}`}>MRR evolution</div>\r\n              </div>\r\n              <div className={`${darkMode ? \"text-gray-400\" : \"text-xs text-gray-400\"}`}>YoY: {mock.yoy !== null ? `${mock.yoy}%` : \"—\"}</div>\r\n            </div>\r\n\r\n            <div className=\"mt-4\">\r\n              <AreaSpark points={points.slice(-Math.max(rangeMonths, 3))} height={120} darkMode={darkMode} />\r\n            </div>\r\n\r\n            <div className=\"mt-3 grid grid-cols-2 gap-3\">\r\n              <div className={`${darkMode ? \"text-gray-400\" : \"text-xs text-gray-400\"}`}>Latest MRR</div>\r\n              <div className=\"text-right font-semibold\">₦{mock.mrr.toLocaleString()}</div>\r\n\r\n              <div className={`${darkMode ? \"text-gray-400\" : \"text-xs text-gray-400\"}`}>Avg month (shown)</div>\r\n              <div className=\"text-right font-semibold\">₦{Math.round(mock.totalTTM / Math.min(12, mock.series.length)).toLocaleString()}</div>\r\n\r\n              <div className={`${darkMode ? \"text-gray-400\" : \"text-xs text-gray-400\"}`}>Forecast (3 mo)</div>\r\n              <div className=\"text-right font-semibold\">₦{mock.forecast.map((x) => x.toLocaleString()).join(\" / \")}</div>\r\n\r\n              <div className={`${darkMode ? \"text-gray-400\" : \"text-xs text-gray-400\"}`}>Gross margin (avg)</div>\r\n              <div className=\"text-right font-semibold\">{Math.round((mock.series.reduce((s, x) => s + x.grossMarginPct, 0) / mock.series.length) * 100)}%</div>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n\r\n        <div>\r\n          <Card darkMode={darkMode} className=\"flex flex-col items-center justify-center gap-3\">\r\n            <div className={`${darkMode ? \"text-gray-100\" : \"text-sm font-medium\"}`}>Revenue by product (last 12 mo)</div>\r\n            <div className=\"w-full flex items-center gap-4\">\r\n              <div style={{ flex: \"0 0 120px\" }}>\r\n                <Donut slices={prodTotals} size={120} darkMode={darkMode} />\r\n              </div>\r\n\r\n              <div className=\"flex-1\">\r\n                {Object.entries(prodTotals).map(([k, v]) => {\r\n                  const pct = Math.round((v / Math.max(1, mock.totalTTM)) * 100);\r\n                  const colors = { assessments: \"bg-purple-600\", subscriptions: \"bg-indigo-600\", consulting: \"bg-teal-500\", training: \"bg-orange-400\" };\r\n                  return (\r\n                    <div key={k} className=\"flex items-center justify-between text-sm py-1\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <span className={`inline-block w-3 h-3 rounded ${colors[k] || \"bg-gray-400\"}`} />\r\n                        <div className={`${darkMode ? \"text-gray-100 capitalize\" : \"capitalize\"}`}>{k}</div>\r\n                      </div>\r\n                      <div className={`${darkMode ? \"text-gray-400\" : \"text-xs text-gray-400\"}`}>{pct}%</div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Narrative + Recommendations */}\r\n      <section>\r\n        {/* Narrative + Recommendations */}\r\n        <div className={`mt-6 rounded-2xl p-4 ${darkMode ? \"bg-gray-900 border border-gray-700 text-gray-100\" : \"bg-white border border-gray-100 text-gray-900\"}`}>\r\n          <div className=\"flex items-center justify-between gap-4\">\r\n            <h3 className=\"text-lg font-semibold\">What this forecast means (digital twin insights)</h3>\r\n            <div className=\"text-xs text-gray-400\">Use suggestions to create tasks/meetings</div>\r\n          </div>\r\n  \r\n          <p className=\"text-sm text-gray-400 mt-2\">\r\n            The model predicts three scenarios based on current performance, seasonality and simple growth assumptions. Use the short-term section to prioritize retention and operational fixes; mid-term to run experiments and pricing changes; long-term to invest in product & partnerships.\r\n          </p>\r\n  \r\n          <div className=\"mt-4 grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            {recommendations.map((rec) => (\r\n              <div key={rec.horizon} className={`p-3 rounded-lg flex flex-col justify-between ${darkMode ? \"bg-gray-800 border border-gray-700\" : \"bg-gray-50 border border-gray-100\"}`}>\r\n                <div>\r\n                  <div className=\"text-xs text-gray-400\">{rec.horizon}</div>\r\n                  <div className=\"font-medium mt-1\">{rec.summary}</div>\r\n                  <div className=\"text-xs text-gray-400 mt-3\">Suggested attendees: <span className=\"font-medium\">{rec.suggestedAttendees.join(\", \")}</span></div>\r\n                  <div className=\"text-xs text-gray-400 mt-2\">Impact: {rec.impact}</div>\r\n                </div>\r\n  \r\n                <div className=\"mt-4 flex gap-2\">\r\n                  <button\r\n                    onClick={() => openScheduler({ title: `Meeting: ${rec.horizon}`, summary: rec.summary, suggestedAttendees: rec.suggestedAttendees, horizon: rec.horizon })}\r\n                    className=\"flex-1 px-3 py-2 rounded-md bg-indigo-600 text-white flex items-center justify-center gap-2\"\r\n                  >\r\n                    <FaPlus /> Create Task\r\n                  </button>\r\n  \r\n                  <button\r\n                    onClick={() => handleShare(`${rec.horizon} — ${rec.summary}`)}\r\n                    className=\"px-3 py-2 rounded-md border flex items-center justify-center gap-2\"\r\n                  >\r\n                    <FaShareAlt /> <span className=\"hidden sm:inline\">Share</span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n                        \r\n        {/* Tasks & Reminders panel */}\r\n        <div className={`rounded-2xl p-4 ${darkMode ? \"bg-gray-900 border border-gray-700 text-gray-100\" : \"bg-white border border-gray-100 text-gray-900\"}`}>\r\n          <div className=\"flex items-center justify-between\">\r\n            <h4 className=\"text-md font-semibold\">Scheduled tasks & reminders</h4>\r\n            <div className=\"text-xs text-gray-400\">{tasks.length} tasks</div>\r\n          </div>\r\n  \r\n          <div className=\"mt-3 space-y-2\">\r\n            {tasks.length === 0 && <div className=\"text-sm text-gray-400\">No tasks yet — create one from a recommendation or schedule a review.</div>}\r\n            {tasks.map((t) => (\r\n              <div key={t.id} className=\"p-3 rounded-md border flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2\">\r\n                <div className=\"min-w-0\">\r\n                  <div className=\"font-medium\">{t.title}</div>\r\n                  <div className=\"text-xs text-gray-400\">{new Date(t.when).toLocaleString()}</div>\r\n                  <div className=\"text-xs text-gray-400 mt-1\">{t.attendees}</div>\r\n                  {t.notes && <div className=\"text-xs mt-2 text-gray-500\">{t.notes}</div>}\r\n                </div>\r\n  \r\n                <div className=\"flex items-center gap-2\">\r\n                  <button\r\n                    onClick={() => {\r\n                      // quick \"mark done\" toggle\r\n                      setTasks((prev) => prev.map((x) => (x.id === t.id ? { ...x, status: x.status === \"done\" ? \"scheduled\" : \"done\" } : x)));\r\n                    }}\r\n                    className={`px-3 py-1 rounded-md border text-sm ${t.status === \"done\" ? \"bg-green-100 text-green-700\" : \"\"}`}\r\n                  >\r\n                    {t.status === \"done\" ? \"Done\" : \"Mark done\"}\r\n                  </button>\r\n  \r\n                  <button\r\n                    onClick={() => {\r\n                      // delete\r\n                      if (window.confirm(\"Delete task?\")) setTasks((prev) => prev.filter((x) => x.id !== t.id));\r\n                    }}\r\n                    className=\"px-3 py-1 rounded-md border text-sm text-red-500\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n  \r\n        {/* Scheduler / Create Task modal */}\r\n        <Modal\r\n          open={schedulerOpen}\r\n          onClose={() => setSchedulerOpen(false)}\r\n          title={creatingFromRec ? \"Schedule from suggestion\" : \"Create task / schedule meeting\"}\r\n          darkMode={darkMode}\r\n          footer={\r\n            <>\r\n              <button onClick={() => setSchedulerOpen(false)} className={`px-3 py-2 rounded-md border ${darkMode ? \"bg-gray-800 border-gray-700 text-gray-200\" : \"bg-white border border-gray-200 text-gray-700\"}`}>\r\n                Cancel\r\n              </button>\r\n              <button onClick={saveTask} className=\"px-3 py-2 rounded-md bg-gradient-to-r from-indigo-600 to-blue-600 text-white\">\r\n                <FaSave className=\"inline mr-2\" /> Save\r\n              </button>\r\n            </>\r\n          }\r\n        >\r\n          <div className=\"space-y-3\">\r\n            <div>\r\n              <label className=\"text-xs text-gray-400\">Title</label>\r\n              <input value={taskDraft.title} onChange={(e) => handleTaskInput(\"title\", e.target.value)} className={`w-full mt-1 px-3 py-2 rounded border ${darkMode ? \"bg-gray-800 border-gray-700 text-gray-100\" : \"bg-white border-gray-200\"}`} placeholder=\"Meeting / Task title\" />\r\n            </div>\r\n  \r\n            <div>\r\n              <label className=\"text-xs text-gray-400\">When</label>\r\n              <input value={taskDraft.when} onChange={(e) => handleTaskInput(\"when\", e.target.value)} type=\"datetime-local\" className={`w-full mt-1 px-3 py-2 rounded border ${darkMode ? \"bg-gray-800 border-gray-700 text-gray-100\" : \"bg-white border-gray-200\"}`} />\r\n            </div>\r\n  \r\n            <div>\r\n              <label className=\"text-xs text-gray-400\">Attendees (comma separated)</label>\r\n              <input value={taskDraft.attendees} onChange={(e) => handleTaskInput(\"attendees\", e.target.value)} className={`w-full mt-1 px-3 py-2 rounded border ${darkMode ? \"bg-gray-800 border-gray-700 text-gray-100\" : \"bg-white border-gray-200\"}`} placeholder=\"e.g. Head of Growth, Head of CS\" />\r\n            </div>\r\n  \r\n            <div>\r\n              <label className=\"text-xs text-gray-400\">Notes</label>\r\n              <textarea value={taskDraft.notes} onChange={(e) => handleTaskInput(\"notes\", e.target.value)} rows={4} className={`w-full mt-1 px-3 py-2 rounded border ${darkMode ? \"bg-gray-800 border-gray-700 text-gray-100\" : \"bg-white border-gray-200\"}`} placeholder=\"What to cover, agenda, links...\" />\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </section>\r\n      \r\n\r\n      <div className=\"mt-6\">\r\n        <Card darkMode={darkMode}>\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <div className={`${darkMode ? \"text-gray-100\" : \"text-sm font-medium\"}`}>Revenue by month</div>\r\n              <div className={`${darkMode ? \"text-gray-400\" : \"text-xs text-gray-400\"}`}>Last {mock.series.length} months</div>\r\n            </div>\r\n            <div className={`${darkMode ? \"text-gray-400\" : \"text-xs text-gray-400\"}`}>Export CSV</div>\r\n          </div>\r\n\r\n          <div className=\"mt-4 overflow-auto\">\r\n            <table className={`min-w-full text-sm ${darkMode ? \"text-gray-100\" : \"\"}`}>\r\n              <thead className={`${darkMode ? \"text-xs text-gray-400\" : \"text-left text-xs text-gray-400\"}`}>\r\n                <tr>\r\n                  <th className=\"py-2 pr-4\">Month</th>\r\n                  <th className=\"py-2 pr-4\">MRR</th>\r\n                  <th className=\"py-2 pr-4\">New customers</th>\r\n                  <th className=\"py-2 pr-4\">Churn</th>\r\n                  <th className=\"py-2 pr-4\">ARPU</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {mock.series.slice(-rangeMonths).reverse().map((s) => (\r\n                  <tr key={s.idx} className={`${darkMode ? \"border-t border-gray-800\" : \"border-t\"}`}>\r\n                    <td className=\"py-2 pr-4\">{new Date(s.timestamp).toLocaleDateString()}</td>\r\n                    <td className=\"py-2 pr-4\">₦{s.mrr.toLocaleString()}</td>\r\n                    <td className=\"py-2 pr-4\">{s.newCustomers}</td>\r\n                    <td className=\"py-2 pr-4\">{(s.churnRate * 100).toFixed(1)}%</td>\r\n                    <td className=\"py-2 pr-4\">₦{s.arpu.toLocaleString()}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"names":["months","startMonth","arguments","length","undefined","count","names","now","Date","out","i","d","getFullYear","getMonth","push","concat","String","slice","TASK_STORAGE","REMINDER_STORAGE","readJSON","k","fallback","raw","localStorage","getItem","JSON","parse","_unused","writeJSON","v","setItem","stringify","_unused2","Modal","_ref","open","onClose","title","children","footer","darkMode","_jsxs","className","_jsx","style","backgroundColor","onClick","FaTimes","generateMockRevenue","s","rnd","customers","Math","round","arpu","series","productShares","assessments","subscriptions","consulting","training","shock","churnRate","newCustomers","max","retained","mrr","Object","keys","forEach","sum","values","reduce","a","b","revenueByProduct","grossMarginPct","cac","clv","idx","monthLabel","revenueTotal","timestamp","totalTTM","x","latest","arr","avgARPU","avgChurn","toFixed","yoy","prev","prodTotals","acc","last3","map","avg3","forecast","Card","_ref2","base","theme","AreaSpark","_ref3","points","height","width","min","step","coords","p","y","join","polyline","areaPath","strokeColor","gradientStart","viewBox","preserveAspectRatio","id","x1","x2","y1","y2","offset","stopColor","stopOpacity","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Donut","_ref4","slices","size","total","angle","cx","cy","r","parts","portion","sweep","start","PI","end","cos","sin","large","key","palette","innerFill","opacity","CEORevenue","_ref5","_Object$entries$sort$","initialMonths","useOutletContext","rangeMonths","setRangeMonths","useState","mock","setMock","useEffect","useMemo","topProduct","entries","sort","tasks","setTasks","useAuth","labels","baseMonthly","lbl","seasonal","shortG","midG","longG","shortVal","random","midVal","longVal","month","short","mid","long","genMockProjections","reminders","setReminders","schedulerOpen","setSchedulerOpen","taskDraft","setTaskDraft","when","toISOString","attendees","notes","source","creatingFromRec","setCreatingFromRec","shareBusy","setShareBusy","handleTaskInput","_objectSpread","value","onChange","e","Number","target","toLocaleString","charAt","toUpperCase","flex","_ref6","pct","horizon","summary","suggestedAttendees","impact","rec","prefill","openScheduler","FaPlus","async","text","payload","navigator","share","clipboard","writeText","alert","handleShare","FaShareAlt","t","status","window","confirm","filter","_Fragment","toString","createdAt","done","_window$Snackbar","_window$Snackbar$show","Snackbar","show","call","message","_unused3","FaSave","placeholder","type","rows","reverse","toLocaleDateString"],"sourceRoot":""}